<rul:Rules xmlns:rul="http://www.verisk.com/iso/erc/Rule">
	<rul:Rule Name="InitializeRuleSet" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:ForEach AtDataDef="CommercialPropertyAdditionalCoveredPropertySpecialClassTable/CommercialPropertyAdditionalCoveredPropertySpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyAdditionalCoveredPropertySpecialClassRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyAdditionalPropertyNotCoveredSpecialClassTable/CommercialPropertyAdditionalPropertyNotCoveredSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyAdditionalPropertyNotCoveredSpecialClassRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyBuildingAndPersonalPropertyCoverageFormSpecialClassTable/CommercialPropertyBuildingAndPersonalPropertyCoverageFormSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyBuildingAndPersonalPropertyCoverageFormSpecialClassRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyCannabisExclusionSpecialClassTable/CommercialPropertyCannabisExclusionSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyCannabisExclusionSpecialClassRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyCannabisExclusionWithHempExceptionSpecialClassTable/CommercialPropertyCannabisExclusionWithHempExceptionSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyCannabisExclusionWithHempExceptionSpecialClassRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyCauseOfLossBasicFormSpecialClassTable/CommercialPropertyCauseOfLossBasicFormSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyCauseOfLossBasicFormSpecialClassRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyCauseOfLossBroadFormSpecialClassTable/CommercialPropertyCauseOfLossBroadFormSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyCauseOfLossBroadFormSpecialClassRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyCauseOfLossSpecialFormSpecialClassTable/CommercialPropertyCauseOfLossSpecialFormSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyCauseOfLossSpecialFormSpecialClassRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyCondominiumAssociationChangesStandardPropertyPolicyEndtSpecialClassTable/CommercialPropertyCondominiumAssociationChangesStandardPropertyPolicyEndtSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyCondominiumAssociationChangesStandardPropertyPolicyEndtSpecialClassRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyCondominiumAssociationCoverageFormSpecialClassTable/CommercialPropertyCondominiumAssociationCoverageFormSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyCondominiumAssociationCoverageFormSpecialClassRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyCondominiumCommercialUnitOwnersChangesStandardPropertyPolicySpecialClassTable/CommercialPropertyCondominiumCommercialUnitOwnersChangesStandardPropertyPolicySpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyCondominiumCommercialUnitOwnersChangesStandardPropertyPolicySpecialClassRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyCondominiumCommercialUnitOwnersCoverageFormSpecialClassTable/CommercialPropertyCondominiumCommercialUnitOwnersCoverageFormSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyCondominiumCommercialUnitOwnersCoverageFormSpecialClassRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyContributingInsuranceSpecialClassTable/CommercialPropertyContributingInsuranceSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyContributingInsuranceSpecialClassRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyDebrisRemovalAdditionalInsuranceSpecialClassTable/CommercialPropertyDebrisRemovalAdditionalInsuranceSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyDebrisRemovalAdditionalInsuranceSpecialClassRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyDeductiblesByLocationSpecialClassTable/CommercialPropertyDeductiblesByLocationSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyDeductiblesByLocationSpecialClassRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyDischargeFromSewerDrainOrSumpNotFloodReltdSpclClassTable/CommercialPropertyDischargeFromSewerDrainOrSumpNotFloodReltdSpclClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyDischargeFromSewerDrainOrSumpNotFloodReltdSpclClassRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionCoverageSubLimitFormWithFlatDollarDeductibleSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionCoverageSubLimitFormWithFlatDollarDeductibleSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyEarthquakeAndVolcanicEruptionCoverageSubLimitFormWithFlatDollarDeductibleSpecialClassRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionCoverageWithFlatDollarDeductibleSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionCoverageWithFlatDollarDeductibleSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyEarthquakeAndVolcanicEruptionCoverageWithFlatDollarDeductibleSpecialClassRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSpecialClassRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSubLimitFormSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSubLimitFormSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSubLimitFormSpecialClassRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyExclusionOfLossDueToByProductsOfProductionORProcessingOperationsFormSpecialClassTable/CommercialPropertyExclusionOfLossDueToByProductsOfProductionORProcessingOperationsFormSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyExclusionOfLossDueToByProductsOfProductionORProcessingOperationsFormSpecialClassRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyFloodCoverageEndorsementSpecialClassTable/CommercialPropertyFloodCoverageEndorsementSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyFloodCoverageEndorsementSpecialClassRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyIncreasedCostOfLossAndRelatedExpensesForGreenUpgradesEndtSpecialClassTable/CommercialPropertyIncreasedCostOfLossAndRelatedExpensesForGreenUpgradesEndtSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyIncreasedCostOfLossAndRelatedExpensesForGreenUpgradesEndtSpecialClassRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyIncreaseInRebuildingExpensesFollowingDisasterSpecialClassTable/CommercialPropertyIncreaseInRebuildingExpensesFollowingDisasterSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyIncreaseInRebuildingExpensesFollowingDisasterSpecialClassRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyJointOrDisputedLossAgreementSpecialClassTable/CommercialPropertyJointOrDisputedLossAgreementSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyJointOrDisputedLossAgreementSpecialClassRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyLimitedCoverageForUnmannedAircraftScheduledAndOrBlanketCoverageSpecialClassTable/CommercialPropertyLimitedCoverageForUnmannedAircraftScheduledAndOrBlanketCoverageSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyLimitedCoverageForUnmannedAircraftScheduledAndOrBlanketCoverageSpecialClassRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyMultipleDeductibleFormFixedDollarDeductiblesSpecialClassTable/CommercialPropertyMultipleDeductibleFormFixedDollarDeductiblesSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyMultipleDeductibleFormFixedDollarDeductiblesSpecialClassRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyOutsideSignsSpecialClassTable/CommercialPropertyOutsideSignsSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyOutsideSignsSpecialClassRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyPierAndWharfAdditionalCoveredCausesOfLossSpecialClassTable/CommercialPropertyPierAndWharfAdditionalCoveredCausesOfLossSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyPierAndWharfAdditionalCoveredCausesOfLossSpecialClassRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyRadioactiveContaminationSpecialClassTable/CommercialPropertyRadioactiveContaminationSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyRadioactiveContaminationSpecialClassRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyRadioOrTelevisionAntennasSpecialClassTable/CommercialPropertyRadioOrTelevisionAntennasSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyRadioOrTelevisionAntennasSpecialClassRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:ForEach>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassAgreedValBasicGroupICoverage">
				<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassAgreedValBasicGroupICoverageRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:Locate>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassAgreedValBasicGroupIICoverage">
				<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassAgreedValBasicGroupIICoverageRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:Locate>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassAgreedValBroadCoverage">
				<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassAgreedValBroadCoverageRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:Locate>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassAgreedValCoverage">
				<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassAgreedValCoverageRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:Locate>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassAgreedValEarthquakeCoverage">
				<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassAgreedValEarthquakeCoverageRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:Locate>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassAgreedValSpecialCoverage">
				<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassAgreedValSpecialCoverageRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:Locate>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassBasicGroupICoverage">
				<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassBasicGroupICoverageRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:Locate>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassBasicGroupIICoverage">
				<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassBasicGroupIICoverageRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:Locate>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassBroadCoverage">
				<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassBroadCoverageRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:Locate>
			<rul:ForEach AtDataDef="CommercialPropertySpecialClassBusnIncomeTable/CommercialPropertySpecialClassBusnIncome">
				<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassBusnIncomeRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:ForEach>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassCoverage">
				<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassCoverageRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:Locate>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassInflationGuardBasicGroupICoverage">
				<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassInflationGuardBasicGroupICoverageRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:Locate>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassInflationGuardBasicGroupIICoverage">
				<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassInflationGuardBasicGroupIICoverageRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:Locate>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassInflationGuardBroadCoverage">
				<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassInflationGuardBroadCoverageRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:Locate>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassInflationGuardCoverage">
				<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassInflationGuardCoverageRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:Locate>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassInflationGuardEarthquakeCoverage">
				<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassInflationGuardEarthquakeCoverageRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:Locate>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassInflationGuardSpecialCoverage">
				<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassInflationGuardSpecialCoverageRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:Locate>
			<rul:ForEach AtDataDef="CommercialPropertySpecialClassLimitationOnLossSettlementBlanketInsuranceMarginClauseTable/CommercialPropertySpecialClassLimitationOnLossSettlementBlanketInsuranceMarginClause">
				<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassLimitationOnLossSettlementBlanketInsuranceMarginClauseRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:ForEach>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassSpecialCoverage">
				<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassSpecialCoverageRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:Locate>
			<rul:ForEach AtDataDef="CommercialPropertyStatementOfValuesSpecialClassTable/CommercialPropertyStatementOfValuesSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyStatementOfValuesSpecialClassRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyTheftExclusionSpecialClassTable/CommercialPropertyTheftExclusionSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyTheftExclusionSpecialClassRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyUtilityServicesDirectDamageSpecialClassTable/CommercialPropertyUtilityServicesDirectDamageSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyUtilityServicesDirectDamageSpecialClassRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyVandalismExclusionSpecialClassTable/CommercialPropertyVandalismExclusionSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyVandalismExclusionSpecialClassRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyWatercraftExclusionSpecialClassTable/CommercialPropertyWatercraftExclusionSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyWatercraftExclusionSpecialClassRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyWindstormOrHailExclusionSpecialClassTable/CommercialPropertyWindstormOrHailExclusionSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyWindstormOrHailExclusionSpecialClassRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyWindstormOrHailPercentageDeductibleSpecialClassTable/CommercialPropertyWindstormOrHailPercentageDeductibleSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyWindstormOrHailPercentageDeductibleSpecialClassRules" Rule="InitializeRuleSet" ClearCache="true" />
			</rul:ForEach>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="CalculateTotalPremium" Type="decimal" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sum>
			<rul:ForEach AtDataDef="CommercialPropertyAdditionalCoveredPropertySpecialClassTable/CommercialPropertyAdditionalCoveredPropertySpecialClass">
				<rul:RunRule Type="decimal" FileName="CommercialPropertyAdditionalCoveredPropertySpecialClassRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyAdditionalPropertyNotCoveredSpecialClassTable/CommercialPropertyAdditionalPropertyNotCoveredSpecialClass">
				<rul:RunRule Type="decimal" FileName="CommercialPropertyAdditionalPropertyNotCoveredSpecialClassRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyBuildingAndPersonalPropertyCoverageFormSpecialClassTable/CommercialPropertyBuildingAndPersonalPropertyCoverageFormSpecialClass">
				<rul:RunRule Type="decimal" FileName="CommercialPropertyBuildingAndPersonalPropertyCoverageFormSpecialClassRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyCannabisExclusionSpecialClassTable/CommercialPropertyCannabisExclusionSpecialClass">
				<rul:RunRule Type="decimal" FileName="CommercialPropertyCannabisExclusionSpecialClassRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyCannabisExclusionWithHempExceptionSpecialClassTable/CommercialPropertyCannabisExclusionWithHempExceptionSpecialClass">
				<rul:RunRule Type="decimal" FileName="CommercialPropertyCannabisExclusionWithHempExceptionSpecialClassRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyCauseOfLossBasicFormSpecialClassTable/CommercialPropertyCauseOfLossBasicFormSpecialClass">
				<rul:RunRule Type="decimal" FileName="CommercialPropertyCauseOfLossBasicFormSpecialClassRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyCauseOfLossBroadFormSpecialClassTable/CommercialPropertyCauseOfLossBroadFormSpecialClass">
				<rul:RunRule Type="decimal" FileName="CommercialPropertyCauseOfLossBroadFormSpecialClassRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyCauseOfLossSpecialFormSpecialClassTable/CommercialPropertyCauseOfLossSpecialFormSpecialClass">
				<rul:RunRule Type="decimal" FileName="CommercialPropertyCauseOfLossSpecialFormSpecialClassRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyCondominiumAssociationChangesStandardPropertyPolicyEndtSpecialClassTable/CommercialPropertyCondominiumAssociationChangesStandardPropertyPolicyEndtSpecialClass">
				<rul:RunRule Type="decimal" FileName="CommercialPropertyCondominiumAssociationChangesStandardPropertyPolicyEndtSpecialClassRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyCondominiumAssociationCoverageFormSpecialClassTable/CommercialPropertyCondominiumAssociationCoverageFormSpecialClass">
				<rul:RunRule Type="decimal" FileName="CommercialPropertyCondominiumAssociationCoverageFormSpecialClassRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyCondominiumCommercialUnitOwnersChangesStandardPropertyPolicySpecialClassTable/CommercialPropertyCondominiumCommercialUnitOwnersChangesStandardPropertyPolicySpecialClass">
				<rul:RunRule Type="decimal" FileName="CommercialPropertyCondominiumCommercialUnitOwnersChangesStandardPropertyPolicySpecialClassRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyCondominiumCommercialUnitOwnersCoverageFormSpecialClassTable/CommercialPropertyCondominiumCommercialUnitOwnersCoverageFormSpecialClass">
				<rul:RunRule Type="decimal" FileName="CommercialPropertyCondominiumCommercialUnitOwnersCoverageFormSpecialClassRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyContributingInsuranceSpecialClassTable/CommercialPropertyContributingInsuranceSpecialClass">
				<rul:RunRule Type="decimal" FileName="CommercialPropertyContributingInsuranceSpecialClassRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyDebrisRemovalAdditionalInsuranceSpecialClassTable/CommercialPropertyDebrisRemovalAdditionalInsuranceSpecialClass">
				<rul:RunRule Type="decimal" FileName="CommercialPropertyDebrisRemovalAdditionalInsuranceSpecialClassRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyDeductiblesByLocationSpecialClassTable/CommercialPropertyDeductiblesByLocationSpecialClass">
				<rul:RunRule Type="decimal" FileName="CommercialPropertyDeductiblesByLocationSpecialClassRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyDischargeFromSewerDrainOrSumpNotFloodReltdSpclClassTable/CommercialPropertyDischargeFromSewerDrainOrSumpNotFloodReltdSpclClass">
				<rul:RunRule Type="decimal" FileName="CommercialPropertyDischargeFromSewerDrainOrSumpNotFloodReltdSpclClassRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionCoverageSubLimitFormWithFlatDollarDeductibleSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionCoverageSubLimitFormWithFlatDollarDeductibleSpecialClass">
				<rul:RunRule Type="decimal" FileName="CommercialPropertyEarthquakeAndVolcanicEruptionCoverageSubLimitFormWithFlatDollarDeductibleSpecialClassRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionCoverageWithFlatDollarDeductibleSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionCoverageWithFlatDollarDeductibleSpecialClass">
				<rul:RunRule Type="decimal" FileName="CommercialPropertyEarthquakeAndVolcanicEruptionCoverageWithFlatDollarDeductibleSpecialClassRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSpecialClass">
				<rul:RunRule Type="decimal" FileName="CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSpecialClassRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSubLimitFormSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSubLimitFormSpecialClass">
				<rul:RunRule Type="decimal" FileName="CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSubLimitFormSpecialClassRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyExclusionOfLossDueToByProductsOfProductionORProcessingOperationsFormSpecialClassTable/CommercialPropertyExclusionOfLossDueToByProductsOfProductionORProcessingOperationsFormSpecialClass">
				<rul:RunRule Type="decimal" FileName="CommercialPropertyExclusionOfLossDueToByProductsOfProductionORProcessingOperationsFormSpecialClassRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyFloodCoverageEndorsementSpecialClassTable/CommercialPropertyFloodCoverageEndorsementSpecialClass">
				<rul:RunRule Type="decimal" FileName="CommercialPropertyFloodCoverageEndorsementSpecialClassRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyIncreasedCostOfLossAndRelatedExpensesForGreenUpgradesEndtSpecialClassTable/CommercialPropertyIncreasedCostOfLossAndRelatedExpensesForGreenUpgradesEndtSpecialClass">
				<rul:RunRule Type="decimal" FileName="CommercialPropertyIncreasedCostOfLossAndRelatedExpensesForGreenUpgradesEndtSpecialClassRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyIncreaseInRebuildingExpensesFollowingDisasterSpecialClassTable/CommercialPropertyIncreaseInRebuildingExpensesFollowingDisasterSpecialClass">
				<rul:RunRule Type="decimal" FileName="CommercialPropertyIncreaseInRebuildingExpensesFollowingDisasterSpecialClassRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyJointOrDisputedLossAgreementSpecialClassTable/CommercialPropertyJointOrDisputedLossAgreementSpecialClass">
				<rul:RunRule Type="decimal" FileName="CommercialPropertyJointOrDisputedLossAgreementSpecialClassRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyLimitedCoverageForUnmannedAircraftScheduledAndOrBlanketCoverageSpecialClassTable/CommercialPropertyLimitedCoverageForUnmannedAircraftScheduledAndOrBlanketCoverageSpecialClass">
				<rul:RunRule Type="decimal" FileName="CommercialPropertyLimitedCoverageForUnmannedAircraftScheduledAndOrBlanketCoverageSpecialClassRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyMultipleDeductibleFormFixedDollarDeductiblesSpecialClassTable/CommercialPropertyMultipleDeductibleFormFixedDollarDeductiblesSpecialClass">
				<rul:RunRule Type="decimal" FileName="CommercialPropertyMultipleDeductibleFormFixedDollarDeductiblesSpecialClassRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyOutsideSignsSpecialClassTable/CommercialPropertyOutsideSignsSpecialClass">
				<rul:RunRule Type="decimal" FileName="CommercialPropertyOutsideSignsSpecialClassRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyPierAndWharfAdditionalCoveredCausesOfLossSpecialClassTable/CommercialPropertyPierAndWharfAdditionalCoveredCausesOfLossSpecialClass">
				<rul:RunRule Type="decimal" FileName="CommercialPropertyPierAndWharfAdditionalCoveredCausesOfLossSpecialClassRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyRadioactiveContaminationSpecialClassTable/CommercialPropertyRadioactiveContaminationSpecialClass">
				<rul:RunRule Type="decimal" FileName="CommercialPropertyRadioactiveContaminationSpecialClassRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyRadioOrTelevisionAntennasSpecialClassTable/CommercialPropertyRadioOrTelevisionAntennasSpecialClass">
				<rul:RunRule Type="decimal" FileName="CommercialPropertyRadioOrTelevisionAntennasSpecialClassRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:ForEach>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassAgreedValBasicGroupICoverage">
				<rul:RunRule Type="decimal" FileName="CommercialPropertySpecialClassAgreedValBasicGroupICoverageRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:Locate>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassAgreedValBasicGroupIICoverage">
				<rul:RunRule Type="decimal" FileName="CommercialPropertySpecialClassAgreedValBasicGroupIICoverageRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:Locate>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassAgreedValBroadCoverage">
				<rul:RunRule Type="decimal" FileName="CommercialPropertySpecialClassAgreedValBroadCoverageRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:Locate>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassAgreedValCoverage">
				<rul:RunRule Type="decimal" FileName="CommercialPropertySpecialClassAgreedValCoverageRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:Locate>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassAgreedValEarthquakeCoverage">
				<rul:RunRule Type="decimal" FileName="CommercialPropertySpecialClassAgreedValEarthquakeCoverageRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:Locate>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassAgreedValSpecialCoverage">
				<rul:RunRule Type="decimal" FileName="CommercialPropertySpecialClassAgreedValSpecialCoverageRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:Locate>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassBasicGroupICoverage">
				<rul:RunRule Type="decimal" FileName="CommercialPropertySpecialClassBasicGroupICoverageRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:Locate>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassBasicGroupIICoverage">
				<rul:RunRule Type="decimal" FileName="CommercialPropertySpecialClassBasicGroupIICoverageRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:Locate>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassBroadCoverage">
				<rul:RunRule Type="decimal" FileName="CommercialPropertySpecialClassBroadCoverageRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:Locate>
			<rul:ForEach AtDataDef="CommercialPropertySpecialClassBusnIncomeTable/CommercialPropertySpecialClassBusnIncome">
				<rul:RunRule Type="decimal" FileName="CommercialPropertySpecialClassBusnIncomeRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:ForEach>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassCoverage">
				<rul:RunRule Type="decimal" FileName="CommercialPropertySpecialClassCoverageRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:Locate>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassInflationGuardBasicGroupICoverage">
				<rul:RunRule Type="decimal" FileName="CommercialPropertySpecialClassInflationGuardBasicGroupICoverageRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:Locate>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassInflationGuardBasicGroupIICoverage">
				<rul:RunRule Type="decimal" FileName="CommercialPropertySpecialClassInflationGuardBasicGroupIICoverageRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:Locate>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassInflationGuardBroadCoverage">
				<rul:RunRule Type="decimal" FileName="CommercialPropertySpecialClassInflationGuardBroadCoverageRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:Locate>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassInflationGuardCoverage">
				<rul:RunRule Type="decimal" FileName="CommercialPropertySpecialClassInflationGuardCoverageRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:Locate>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassInflationGuardEarthquakeCoverage">
				<rul:RunRule Type="decimal" FileName="CommercialPropertySpecialClassInflationGuardEarthquakeCoverageRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:Locate>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassInflationGuardSpecialCoverage">
				<rul:RunRule Type="decimal" FileName="CommercialPropertySpecialClassInflationGuardSpecialCoverageRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:Locate>
			<rul:ForEach AtDataDef="CommercialPropertySpecialClassLimitationOnLossSettlementBlanketInsuranceMarginClauseTable/CommercialPropertySpecialClassLimitationOnLossSettlementBlanketInsuranceMarginClause">
				<rul:RunRule Type="decimal" FileName="CommercialPropertySpecialClassLimitationOnLossSettlementBlanketInsuranceMarginClauseRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:ForEach>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassSpecialCoverage">
				<rul:RunRule Type="decimal" FileName="CommercialPropertySpecialClassSpecialCoverageRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:Locate>
			<rul:ForEach AtDataDef="CommercialPropertyStatementOfValuesSpecialClassTable/CommercialPropertyStatementOfValuesSpecialClass">
				<rul:RunRule Type="decimal" FileName="CommercialPropertyStatementOfValuesSpecialClassRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyTheftExclusionSpecialClassTable/CommercialPropertyTheftExclusionSpecialClass">
				<rul:RunRule Type="decimal" FileName="CommercialPropertyTheftExclusionSpecialClassRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyUtilityServicesDirectDamageSpecialClassTable/CommercialPropertyUtilityServicesDirectDamageSpecialClass">
				<rul:RunRule Type="decimal" FileName="CommercialPropertyUtilityServicesDirectDamageSpecialClassRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyVandalismExclusionSpecialClassTable/CommercialPropertyVandalismExclusionSpecialClass">
				<rul:RunRule Type="decimal" FileName="CommercialPropertyVandalismExclusionSpecialClassRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyWatercraftExclusionSpecialClassTable/CommercialPropertyWatercraftExclusionSpecialClass">
				<rul:RunRule Type="decimal" FileName="CommercialPropertyWatercraftExclusionSpecialClassRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyWindstormOrHailExclusionSpecialClassTable/CommercialPropertyWindstormOrHailExclusionSpecialClass">
				<rul:RunRule Type="decimal" FileName="CommercialPropertyWindstormOrHailExclusionSpecialClassRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyWindstormOrHailPercentageDeductibleSpecialClassTable/CommercialPropertyWindstormOrHailPercentageDeductibleSpecialClass">
				<rul:RunRule Type="decimal" FileName="CommercialPropertyWindstormOrHailPercentageDeductibleSpecialClassRules" Rule="CalculateTotalPremium" ClearCache="true" />
			</rul:ForEach>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Equal>
							<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@PremiumIndicator" Order="DataDefInputParamConstant" />
							<rul:Constant Type="integer">1</rul:Constant>
						</rul:Equal>
						<rul:NotEqual>
							<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@Premium" Order="DataDefInputParamConstant" />
							<rul:Constant Type="decimal">0</rul:Constant>
						</rul:NotEqual>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@Premium" Order="DataDefInputParamConstant" />
				</rul:Then>
				<rul:Else>
					<rul:Constant Type="decimal">0</rul:Constant>
				</rul:Else>
			</rul:If>
		</rul:Sum>
	</rul:Rule>
	<rul:Rule Name="InitializeSpecialClass" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:ForEach AtDataDef="CommercialPropertySpecialClassBusnIncomeTable/CommercialPropertySpecialClassBusnIncome">
				<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassBusnIncomeRules" Rule="InitializeSpecialClassBusnInc" ClearCache="true" />
			</rul:ForEach>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetSpecialClassRiskAmounts" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetLocNumber" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetCauseOfLossToUse" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetTotAmtInsurance" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetSpecialIncludingTheftTotAmtInsurance" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetSpecialTotAmtInsurance" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetWindstormHailLimit" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetWindstormOrHailTotAmtInsurance" ClearCache="true" />
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetLocNumber" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Copy Type="integer" ToDataDef="@LocNumber" FromDataDef="../../@UnitNumber" />
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetCauseOfLossToUse" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:Equal>
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@IncludedInBlkt" Order="DataDefInputParamConstant" />
						<rul:Constant Type="string">Yes</rul:Constant>
					</rul:Equal>
				</rul:Test>
				<rul:Then>
					<rul:Copy Type="string" ToDataDef="@CauseOfLossToUse" FromDataDef="@BlktCauseOfLossValue" />
				</rul:Then>
				<rul:Else>
					<rul:Copy Type="string" ToDataDef="@CauseOfLossToUse" FromDataDef="@CauseOfLoss" />
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetTotAmtInsurance" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:Equal>
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@IncludedInBlkt" Order="DataDefInputParamConstant" />
						<rul:Constant Type="string">Yes</rul:Constant>
					</rul:Equal>
				</rul:Test>
				<rul:Then>
					<rul:Copy Type="integer" ToDataDef="@TotAmtInsurance" FromDataDef="@FullSpecialClassValue" />
				</rul:Then>
				<rul:Else>
					<rul:Copy Type="integer" ToDataDef="@TotAmtInsurance" FromDataDef="@Limit" />
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetSpecialIncludingTheftTotAmtInsurance" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@CauseOfLossToUse" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Special</rul:Constant>
						</rul:Equal>
						<rul:NotExist AtInputDataDef="CommercialPropertyTheftExclusionSpecialClassTable/CommercialPropertyTheftExclusionSpecialClass" />
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:Copy Type="integer" ToDataDef="@SpecialIncludingTheftTotAmtInsurance" FromDataDef="@TotAmtInsurance" />
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Constant Type="integer" ToDataDef="@SpecialIncludingTheftTotAmtInsurance">0</rul:Constant>
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetSpecialTotAmtInsurance" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:Equal>
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@CauseOfLossToUse" Order="DataDefInputParamConstant" />
						<rul:Constant Type="string">Special</rul:Constant>
					</rul:Equal>
				</rul:Test>
				<rul:Then>
					<rul:Copy Type="integer" ToDataDef="@SpecialTotAmtInsurance" FromDataDef="@TotAmtInsurance" />
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Constant Type="integer" ToDataDef="@SpecialTotAmtInsurance">0</rul:Constant>
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetWindstormHailLimit" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Copy Type="integer" ToDataDef="@WindstormHailLimit" FromDataDef="@TotAmtInsurance" />
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetWindstormOrHailTotAmtInsurance" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:NotEqual>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Not Applicable</rul:Constant>
						</rul:NotEqual>
						<rul:NotEqual>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string"></rul:Constant>
						</rul:NotEqual>
						<rul:NotExist AtInputDataDef="CommercialPropertyWindstormOrHailExclusionSpecialClassTable/CommercialPropertyWindstormOrHailExclusionSpecialClass" />
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:If>
							<rul:Test>
								<rul:Or>
									<rul:Equal>
										<rul:FirstValue Type="string" FromConstant="" FromDataDef="../../../../@PolicyType" Order="DataDefInputParamConstant" />
										<rul:Constant Type="string">Commercial Property Policy</rul:Constant>
									</rul:Equal>
									<rul:And>
										<rul:Equal>
											<rul:FirstValue Type="string" FromConstant="" FromDataDef="../../../../@PolicyType" Order="DataDefInputParamConstant" />
											<rul:Constant Type="string">Standard Property Policy</rul:Constant>
										</rul:Equal>
										<rul:Or>
											<rul:Equal>
												<rul:FirstValue Type="string" FromConstant="" FromDataDef="@CauseOfLossToUse" Order="DataDefInputParamConstant" />
												<rul:Constant Type="string">Fire and Allied Lines</rul:Constant>
											</rul:Equal>
											<rul:Equal>
												<rul:FirstValue Type="string" FromConstant="" FromDataDef="@CauseOfLossToUse" Order="DataDefInputParamConstant" />
												<rul:Constant Type="string">Fire, Vandalism and Allied Lines</rul:Constant>
											</rul:Equal>
										</rul:Or>
									</rul:And>
								</rul:Or>
							</rul:Test>
							<rul:Then>
								<rul:Copy Type="integer" ToDataDef="@WindstormOrHailTotAmtInsurance" FromDataDef="@WindstormHailLimit" />
							</rul:Then>
							<rul:Else>
								<rul:Sequence>
									<rul:Constant Type="integer" ToDataDef="@WindstormOrHailTotAmtInsurance">0</rul:Constant>
								</rul:Sequence>
							</rul:Else>
						</rul:If>
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Constant Type="integer" ToDataDef="@WindstormOrHailTotAmtInsurance">0</rul:Constant>
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="ErcResetXPaths" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetEQCauseOfLossForm" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetPolicyType" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetBasicGroupIIRatingTerr" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetLossCostMultiplier" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetEQDeductibleTier" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetEQTerr" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetEQCauseOfLossForm" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetPolicyType" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetBlktRated" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetEQSubLimitBlktIndicator" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetProtectionClassToUse" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetStdPropPolGroupIFactor" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetStdPropPolGroupIIFactor" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetTheftDeductible" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="ResetHiddenDomainColumns" ClearCache="true" />
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetEQCauseOfLossForm" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Copy Type="string" ToDataDef="@EQCauseOfLossForm" FromDataDef="../../@EQCauseOfLossForm" />
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetPolicyType" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Copy Type="string" ToDataDef="@PolicyType" FromDataDef="ancestor::CommercialProperty/@PolicyType" />
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetBasicGroupIIRatingTerr" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Copy Type="string" ToDataDef="@BasicGroupIIRatingTerr" FromDataDef="../../@BasicGroupIIRatingTerr" />
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetLossCostMultiplier" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Copy Type="decimal" ToDataDef="@LossCostMultiplier" FromDataDef="ancestor::CommercialProperty/@LossCostMultiplier" />
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetEQDeductibleTier" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Copy Type="integer" ToDataDef="@EQDeductibleTier" FromDataDef="../../@EQDeductibleTier" />
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetEQTerr" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Copy Type="string" ToDataDef="@EQTerr" FromDataDef="../../@EQTerr" />
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetBlktRated" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Copy Type="string" ToDataDef="@BlktRated" FromDataDef="ancestor::CommercialProperty/@BlktRated" />
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetEQSubLimitBlktIndicator" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Copy Type="string" ToDataDef="@EQSubLimitBlktIndicator" FromDataDef="ancestor::CommercialProperty/@EQSubLimitBlktIndicator" />
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetProtectionClassToUse" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Copy Type="string" ToDataDef="@ProtectionClassToUse" FromDataDef="../../@ProtectionClassToUse" />
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetStdPropPolGroupIFactor" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Copy Type="decimal" ToDataDef="@StdPropPolGroupIFactor" FromDataDef="ancestor::CommercialProperty/@StdPropPolBasicGroupIFactor" />
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetStdPropPolGroupIIFactor" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Copy Type="decimal" ToDataDef="@StdPropPolGroupIIFactor" FromDataDef="ancestor::CommercialProperty/@StdPropPolBasicGroupIIFactor" />
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetTheftDeductible" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:Exist AtInputDataDef="CommercialPropertyTheftExclusionSpecialClassTable/CommercialPropertyTheftExclusionSpecialClass" />
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:Constant Type="string" ToDataDef="@TheftDeductible">Not Applicable</rul:Constant>
					</rul:Sequence>
				</rul:Then>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="ResetHiddenDomainColumns" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetSpecialClassDescConvertedOption" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetBasicGroupIISymbolNum" ClearCache="true" />
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetSpecialClassDescConvertedOption" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:NotEqual>
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@ClassDescription" Order="DataDefInputParamConstant" />
						<rul:Constant Type="string"></rul:Constant>
					</rul:NotEqual>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:RunRule Type="string" ToDataDef="@SpecialClassDescConvertedOption" FileName="CommercialPropertySpecialClassRules" Rule="LookupSpecialClassDescriptionConvertedOption" ClearCache="true" />
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Constant Type="string" ToDataDef="@SpecialClassDescConvertedOption"></rul:Constant>
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetBasicGroupIISymbolNum" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:NotEqual>
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@ClassDescription" Order="DataDefInputParamConstant" />
						<rul:Constant Type="string"></rul:Constant>
					</rul:NotEqual>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:RunRule Type="decimal" ToDataDef="@BasicGroupIISymbolNum" FileName="CommercialPropertySpecialClassRules" Rule="LookupSpecialClassBasicGroupIINumber" ClearCache="true" />
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Constant Type="decimal" ToDataDef="@BasicGroupIISymbolNum">0.0</rul:Constant>
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="ErcDoConditionalMandatoryLogic" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="AttachFormCommercialPropertyBuildingAndPersonalPropertyCoverageFormSpecialClass" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="AttachFormCommercialPropertyCauseOfLossBasicFormSpecialClass" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="AttachFormCommercialPropertyCauseOfLossBroadFormSpecialClass" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="AttachFormCommercialPropertyCauseOfLossSpecialFormSpecialClass" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="AttachFormCommercialPropertyCondominiumAssociationCoverageFormSpecialClass" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="AttachFormCommercialPropertyCondominiumAssociationChangesStandardPropertyPolicyEndtSpecialClass" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="AttachFormCommercialPropertyCondominiumCommercialUnitOwnersCoverageFormSpecialClass" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="AttachFormCommercialPropertyCondominiumCommercialUnitOwnersChangesStandardPropertyPolicySpecialClass" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="AttachFormCommercialPropertyOutsideSignsSpecialClass" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="AttachFormCommercialPropertyRadioOrTelevisionAntennasSpecialClass" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="AttachFormCommercialPropertyStatementOfValuesSpecialClass" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="AttachFormCommercialPropertyWindstormOrHailPercentageDeductibleSpecialClass" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="AttachFormCommercialPropertyRadioactiveContaminationSpecialClass" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="AttachFormCommercialPropertyMultipleDeductibleFormFixedDollarDeductiblesSpecialClass" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="AttachFormCommercialPropertySpecialClassLimitationOnLossSettlementBlanketInsuranceMarginClause" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="AttachFormExclusionOfLossDueToByProductsOfProductionORProcessingOperations" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="RemoveFormCommercialPropertyTheftExclusion" ClearCache="true" />
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="AttachFormCommercialPropertySpecialClassLimitationOnLossSettlementBlanketInsuranceMarginClause" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:NotEqual>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@MarginClause" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Not Applicable</rul:Constant>
						</rul:NotEqual>
						<rul:NotEqual>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@MarginClause" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string"></rul:Constant>
						</rul:NotEqual>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:If>
							<rul:Test>
								<rul:NotExist AtInputDataDef="CommercialPropertySpecialClassLimitationOnLossSettlementBlanketInsuranceMarginClauseTable/CommercialPropertySpecialClassLimitationOnLossSettlementBlanketInsuranceMarginClause" />
							</rul:Test>
							<rul:Then>
								<rul:Sequence>
									<rul:Locate AtOutputDataDef="CommercialPropertySpecialClassLimitationOnLossSettlementBlanketInsuranceMarginClauseTable/CommercialPropertySpecialClassLimitationOnLossSettlementBlanketInsuranceMarginClause[1]" OutputAction="Append">
										<rul:Sequence />
									</rul:Locate>
								</rul:Sequence>
							</rul:Then>
						</rul:If>
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Remove AtDataDef="CommercialPropertySpecialClassLimitationOnLossSettlementBlanketInsuranceMarginClauseTable/CommercialPropertySpecialClassLimitationOnLossSettlementBlanketInsuranceMarginClause" RemoveMultiple="true" />
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="AttachFormCommercialPropertyBuildingAndPersonalPropertyCoverageFormSpecialClass" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="../../../../@PolicyType" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Commercial Property Policy</rul:Constant>
						</rul:Equal>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@CovForm" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Building and Personal Property Coverage Form</rul:Constant>
						</rul:Equal>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:If>
							<rul:Test>
								<rul:NotExist AtInputDataDef="CommercialPropertyBuildingAndPersonalPropertyCoverageFormSpecialClassTable/CommercialPropertyBuildingAndPersonalPropertyCoverageFormSpecialClass" />
							</rul:Test>
							<rul:Then>
								<rul:Sequence>
									<rul:Locate AtOutputDataDef="CommercialPropertyBuildingAndPersonalPropertyCoverageFormSpecialClassTable/CommercialPropertyBuildingAndPersonalPropertyCoverageFormSpecialClass[1]" OutputAction="Append">
										<rul:Sequence />
									</rul:Locate>
								</rul:Sequence>
							</rul:Then>
						</rul:If>
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Remove AtDataDef="CommercialPropertyBuildingAndPersonalPropertyCoverageFormSpecialClassTable/CommercialPropertyBuildingAndPersonalPropertyCoverageFormSpecialClass" RemoveMultiple="true" />
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="AttachFormCommercialPropertyCauseOfLossBasicFormSpecialClass" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:Equal>
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@CauseOfLossToUse" Order="DataDefInputParamConstant" />
						<rul:Constant Type="string">Basic</rul:Constant>
					</rul:Equal>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:If>
							<rul:Test>
								<rul:NotExist AtInputDataDef="CommercialPropertyCauseOfLossBasicFormSpecialClassTable/CommercialPropertyCauseOfLossBasicFormSpecialClass" />
							</rul:Test>
							<rul:Then>
								<rul:Sequence>
									<rul:Locate AtOutputDataDef="CommercialPropertyCauseOfLossBasicFormSpecialClassTable/CommercialPropertyCauseOfLossBasicFormSpecialClass[1]" OutputAction="Append">
										<rul:Sequence />
									</rul:Locate>
								</rul:Sequence>
							</rul:Then>
						</rul:If>
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Remove AtDataDef="CommercialPropertyCauseOfLossBasicFormSpecialClassTable/CommercialPropertyCauseOfLossBasicFormSpecialClass" RemoveMultiple="true" />
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="AttachFormCommercialPropertyCauseOfLossBroadFormSpecialClass" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:Equal>
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@CauseOfLossToUse" Order="DataDefInputParamConstant" />
						<rul:Constant Type="string">Broad</rul:Constant>
					</rul:Equal>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:If>
							<rul:Test>
								<rul:NotExist AtInputDataDef="CommercialPropertyCauseOfLossBroadFormSpecialClassTable/CommercialPropertyCauseOfLossBroadFormSpecialClass" />
							</rul:Test>
							<rul:Then>
								<rul:Sequence>
									<rul:Locate AtOutputDataDef="CommercialPropertyCauseOfLossBroadFormSpecialClassTable/CommercialPropertyCauseOfLossBroadFormSpecialClass[1]" OutputAction="Append">
										<rul:Sequence />
									</rul:Locate>
								</rul:Sequence>
							</rul:Then>
						</rul:If>
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Remove AtDataDef="CommercialPropertyCauseOfLossBroadFormSpecialClassTable/CommercialPropertyCauseOfLossBroadFormSpecialClass" RemoveMultiple="true" />
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="AttachFormCommercialPropertyCauseOfLossSpecialFormSpecialClass" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:Equal>
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@CauseOfLossToUse" Order="DataDefInputParamConstant" />
						<rul:Constant Type="string">Special</rul:Constant>
					</rul:Equal>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:If>
							<rul:Test>
								<rul:NotExist AtInputDataDef="CommercialPropertyCauseOfLossSpecialFormSpecialClassTable/CommercialPropertyCauseOfLossSpecialFormSpecialClass" />
							</rul:Test>
							<rul:Then>
								<rul:Sequence>
									<rul:Locate AtOutputDataDef="CommercialPropertyCauseOfLossSpecialFormSpecialClassTable/CommercialPropertyCauseOfLossSpecialFormSpecialClass[1]" OutputAction="Append">
										<rul:Sequence />
									</rul:Locate>
								</rul:Sequence>
							</rul:Then>
						</rul:If>
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Remove AtDataDef="CommercialPropertyCauseOfLossSpecialFormSpecialClassTable/CommercialPropertyCauseOfLossSpecialFormSpecialClass" RemoveMultiple="true" />
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="AttachFormCommercialPropertyCondominiumAssociationCoverageFormSpecialClass" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="../../../../@PolicyType" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Commercial Property Policy</rul:Constant>
						</rul:Equal>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@CovForm" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Condominium Association Coverage Form</rul:Constant>
						</rul:Equal>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:If>
							<rul:Test>
								<rul:NotExist AtInputDataDef="CommercialPropertyCondominiumAssociationCoverageFormSpecialClassTable/CommercialPropertyCondominiumAssociationCoverageFormSpecialClass" />
							</rul:Test>
							<rul:Then>
								<rul:Sequence>
									<rul:Locate AtOutputDataDef="CommercialPropertyCondominiumAssociationCoverageFormSpecialClassTable/CommercialPropertyCondominiumAssociationCoverageFormSpecialClass[1]" OutputAction="Append">
										<rul:Sequence />
									</rul:Locate>
								</rul:Sequence>
							</rul:Then>
						</rul:If>
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Remove AtDataDef="CommercialPropertyCondominiumAssociationCoverageFormSpecialClassTable/CommercialPropertyCondominiumAssociationCoverageFormSpecialClass" RemoveMultiple="true" />
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="AttachFormCommercialPropertyCondominiumCommercialUnitOwnersCoverageFormSpecialClass" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="../../../../@PolicyType" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Commercial Property Policy</rul:Constant>
						</rul:Equal>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@CovForm" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Condominium Commercial Unit Owners Coverage</rul:Constant>
						</rul:Equal>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:If>
							<rul:Test>
								<rul:NotExist AtInputDataDef="CommercialPropertyCondominiumCommercialUnitOwnersCoverageFormSpecialClassTable/CommercialPropertyCondominiumCommercialUnitOwnersCoverageFormSpecialClass" />
							</rul:Test>
							<rul:Then>
								<rul:Sequence>
									<rul:Locate AtOutputDataDef="CommercialPropertyCondominiumCommercialUnitOwnersCoverageFormSpecialClassTable/CommercialPropertyCondominiumCommercialUnitOwnersCoverageFormSpecialClass[1]" OutputAction="Append">
										<rul:Sequence />
									</rul:Locate>
								</rul:Sequence>
							</rul:Then>
						</rul:If>
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Remove AtDataDef="CommercialPropertyCondominiumCommercialUnitOwnersCoverageFormSpecialClassTable/CommercialPropertyCondominiumCommercialUnitOwnersCoverageFormSpecialClass" RemoveMultiple="true" />
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="AttachFormCommercialPropertyCondominiumCommercialUnitOwnersChangesStandardPropertyPolicySpecialClass" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="../../../../@PolicyType" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Standard Property Policy</rul:Constant>
						</rul:Equal>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@CovForm" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Condominium Commercial Unit Owners Coverage</rul:Constant>
						</rul:Equal>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:If>
							<rul:Test>
								<rul:NotExist AtInputDataDef="CommercialPropertyCondominiumCommercialUnitOwnersChangesStandardPropertyPolicySpecialClassTable/CommercialPropertyCondominiumCommercialUnitOwnersChangesStandardPropertyPolicySpecialClass" />
							</rul:Test>
							<rul:Then>
								<rul:Sequence>
									<rul:Locate AtOutputDataDef="CommercialPropertyCondominiumCommercialUnitOwnersChangesStandardPropertyPolicySpecialClassTable/CommercialPropertyCondominiumCommercialUnitOwnersChangesStandardPropertyPolicySpecialClass[1]" OutputAction="Append">
										<rul:Sequence />
									</rul:Locate>
								</rul:Sequence>
							</rul:Then>
						</rul:If>
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Remove AtDataDef="CommercialPropertyCondominiumCommercialUnitOwnersChangesStandardPropertyPolicySpecialClassTable/CommercialPropertyCondominiumCommercialUnitOwnersChangesStandardPropertyPolicySpecialClass" RemoveMultiple="true" />
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="AttachFormCommercialPropertyOutsideSignsSpecialClass" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:Or>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@ClassDescription" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Billboards and Signs (Not on Buildings) - Entirely Metal, Including Frame and Supports</rul:Constant>
						</rul:Equal>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@ClassDescription" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Billboards and Signs (Not on Buildings) - Other than Above</rul:Constant>
						</rul:Equal>
					</rul:Or>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:If>
							<rul:Test>
								<rul:NotExist AtInputDataDef="CommercialPropertyOutsideSignsSpecialClassTable/CommercialPropertyOutsideSignsSpecialClass" />
							</rul:Test>
							<rul:Then>
								<rul:Sequence>
									<rul:Locate AtOutputDataDef="CommercialPropertyOutsideSignsSpecialClassTable/CommercialPropertyOutsideSignsSpecialClass[1]" OutputAction="Append">
										<rul:Sequence />
									</rul:Locate>
								</rul:Sequence>
							</rul:Then>
						</rul:If>
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Remove AtDataDef="CommercialPropertyOutsideSignsSpecialClassTable/CommercialPropertyOutsideSignsSpecialClass" RemoveMultiple="true" />
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="AttachFormCommercialPropertyRadioOrTelevisionAntennasSpecialClass" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:Or>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@ClassDescription" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Towers - Broadcasting Antennas (Cell, Radio and TV)</rul:Constant>
						</rul:Equal>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@ClassDescription" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Towers - Receiving Antennas (Cell, Radio and TV)</rul:Constant>
						</rul:Equal>
					</rul:Or>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:If>
							<rul:Test>
								<rul:NotExist AtInputDataDef="CommercialPropertyRadioOrTelevisionAntennasSpecialClassTable/CommercialPropertyRadioOrTelevisionAntennasSpecialClass" />
							</rul:Test>
							<rul:Then>
								<rul:Sequence>
									<rul:Locate AtOutputDataDef="CommercialPropertyRadioOrTelevisionAntennasSpecialClassTable/CommercialPropertyRadioOrTelevisionAntennasSpecialClass[1]" OutputAction="Append">
										<rul:Sequence />
									</rul:Locate>
								</rul:Sequence>
							</rul:Then>
						</rul:If>
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Remove AtDataDef="CommercialPropertyRadioOrTelevisionAntennasSpecialClassTable/CommercialPropertyRadioOrTelevisionAntennasSpecialClass" RemoveMultiple="true" />
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="AttachFormCommercialPropertyStatementOfValuesSpecialClass" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:Equal>
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@IncludedInBlkt" Order="DataDefInputParamConstant" />
						<rul:Constant Type="string">Yes</rul:Constant>
					</rul:Equal>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:If>
							<rul:Test>
								<rul:NotExist AtInputDataDef="CommercialPropertyStatementOfValuesSpecialClassTable/CommercialPropertyStatementOfValuesSpecialClass" />
							</rul:Test>
							<rul:Then>
								<rul:Sequence>
									<rul:Locate AtOutputDataDef="CommercialPropertyStatementOfValuesSpecialClassTable/CommercialPropertyStatementOfValuesSpecialClass[1]" OutputAction="Append">
										<rul:Sequence />
									</rul:Locate>
								</rul:Sequence>
							</rul:Then>
						</rul:If>
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Remove AtDataDef="CommercialPropertyStatementOfValuesSpecialClassTable/CommercialPropertyStatementOfValuesSpecialClass" RemoveMultiple="true" />
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="AttachFormCommercialPropertyWindstormOrHailPercentageDeductibleSpecialClass" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:Or>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">1%</rul:Constant>
						</rul:Equal>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">2%</rul:Constant>
						</rul:Equal>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">5%</rul:Constant>
						</rul:Equal>
					</rul:Or>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:If>
							<rul:Test>
								<rul:NotExist AtInputDataDef="CommercialPropertyWindstormOrHailPercentageDeductibleSpecialClassTable/CommercialPropertyWindstormOrHailPercentageDeductibleSpecialClass" />
							</rul:Test>
							<rul:Then>
								<rul:Sequence>
									<rul:Locate AtOutputDataDef="CommercialPropertyWindstormOrHailPercentageDeductibleSpecialClassTable/CommercialPropertyWindstormOrHailPercentageDeductibleSpecialClass[1]" OutputAction="Append">
										<rul:Sequence />
									</rul:Locate>
								</rul:Sequence>
							</rul:Then>
						</rul:If>
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Remove AtDataDef="CommercialPropertyWindstormOrHailPercentageDeductibleSpecialClassTable/CommercialPropertyWindstormOrHailPercentageDeductibleSpecialClass" RemoveMultiple="true" />
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="AttachFormCommercialPropertyRadioactiveContaminationSpecialClass" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:Equal>
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@BlktRadioactiveContaminationValue" Order="DataDefInputParamConstant" />
						<rul:Constant Type="string">Yes</rul:Constant>
					</rul:Equal>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:If>
							<rul:Test>
								<rul:NotExist AtInputDataDef="CommercialPropertyRadioactiveContaminationSpecialClassTable/CommercialPropertyRadioactiveContaminationSpecialClass" />
							</rul:Test>
							<rul:Then>
								<rul:Sequence>
									<rul:Locate AtOutputDataDef="CommercialPropertyRadioactiveContaminationSpecialClassTable/CommercialPropertyRadioactiveContaminationSpecialClass[1]" OutputAction="Append">
										<rul:Sequence />
									</rul:Locate>
								</rul:Sequence>
							</rul:Then>
						</rul:If>
					</rul:Sequence>
				</rul:Then>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="AttachFormCommercialPropertyCondominiumAssociationChangesStandardPropertyPolicyEndtSpecialClass" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="../../../../@PolicyType" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Standard Property Policy</rul:Constant>
						</rul:Equal>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@CovForm" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Condominium Association Coverage Form</rul:Constant>
						</rul:Equal>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:If>
							<rul:Test>
								<rul:NotExist AtInputDataDef="CommercialPropertyCondominiumAssociationChangesStandardPropertyPolicyEndtSpecialClassTable/CommercialPropertyCondominiumAssociationChangesStandardPropertyPolicyEndtSpecialClass" />
							</rul:Test>
							<rul:Then>
								<rul:Sequence>
									<rul:Locate AtOutputDataDef="CommercialPropertyCondominiumAssociationChangesStandardPropertyPolicyEndtSpecialClassTable/CommercialPropertyCondominiumAssociationChangesStandardPropertyPolicyEndtSpecialClass[1]" OutputAction="Append">
										<rul:Sequence />
									</rul:Locate>
								</rul:Sequence>
							</rul:Then>
						</rul:If>
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Remove AtDataDef="CommercialPropertyCondominiumAssociationChangesStandardPropertyPolicyEndtSpecialClassTable/CommercialPropertyCondominiumAssociationChangesStandardPropertyPolicyEndtSpecialClass" RemoveMultiple="true" />
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="AttachFormCommercialPropertyMultipleDeductibleFormFixedDollarDeductiblesSpecialClass" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:Or>
						<rul:And>
							<rul:NotEqual>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">1%</rul:Constant>
							</rul:NotEqual>
							<rul:NotEqual>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">2%</rul:Constant>
							</rul:NotEqual>
							<rul:NotEqual>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">5%</rul:Constant>
							</rul:NotEqual>
							<rul:NotEqual>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Not Applicable</rul:Constant>
							</rul:NotEqual>
							<rul:NotEqual>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@Deductible" Order="DataDefInputParamConstant" />
							</rul:NotEqual>
						</rul:And>
						<rul:And>
							<rul:NotEqual>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@TheftDeductible" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Not Applicable</rul:Constant>
							</rul:NotEqual>
							<rul:NotEqual>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@TheftDeductible" Order="DataDefInputParamConstant" />
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@Deductible" Order="DataDefInputParamConstant" />
							</rul:NotEqual>
						</rul:And>
					</rul:Or>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:If>
							<rul:Test>
								<rul:NotExist AtInputDataDef="CommercialPropertyMultipleDeductibleFormFixedDollarDeductiblesSpecialClassTable/CommercialPropertyMultipleDeductibleFormFixedDollarDeductiblesSpecialClass" />
							</rul:Test>
							<rul:Then>
								<rul:Sequence>
									<rul:Locate AtOutputDataDef="CommercialPropertyMultipleDeductibleFormFixedDollarDeductiblesSpecialClassTable/CommercialPropertyMultipleDeductibleFormFixedDollarDeductiblesSpecialClass[1]" OutputAction="Append">
										<rul:Sequence />
									</rul:Locate>
								</rul:Sequence>
							</rul:Then>
						</rul:If>
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Remove AtDataDef="CommercialPropertyMultipleDeductibleFormFixedDollarDeductiblesSpecialClassTable/CommercialPropertyMultipleDeductibleFormFixedDollarDeductiblesSpecialClass" RemoveMultiple="true" />
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="AttachFormExclusionOfLossDueToByProductsOfProductionORProcessingOperations" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:WithArgs>
				<rul:Arg Type="boolean" Param="formAttachAttachFormExclusionOfLossDueToByProductsOfProductionORProcessingOperations">
					<rul:FirstNonNull Type="boolean">
						<rul:ForEach AtDataDef="CommercialPropertySpecialClassBusnIncomeTable/CommercialPropertySpecialClassBusnIncome">
							<rul:If>
								<rul:Test>
									<rul:Or>
										<rul:Exist AtInputDataDef="CommercialPropertyBusinessIncomeAndExtraExpenseCoverageFormSpclClassBusnIncomeTable/CommercialPropertyBusinessIncomeAndExtraExpenseCoverageFormSpclClassBusnIncome" />
										<rul:Exist AtInputDataDef="CommercialPropertyBusinessIncomeWithoutExtraExpenseCoverageFormSpclClassBusnIncomeTable/CommercialPropertyBusinessIncomeWithoutExtraExpenseCoverageFormSpclClassBusnIncome" />
										<rul:Exist AtInputDataDef="CommercialPropertyExtraExpenseCoverageFormSpclClassBusnIncomeTable/CommercialPropertyExtraExpenseCoverageFormSpclClassBusnIncome" />
									</rul:Or>
								</rul:Test>
								<rul:Then>
									<rul:GetList>
										<rul:Constant Type="boolean">true</rul:Constant>
										<rul:Break />
									</rul:GetList>
								</rul:Then>
							</rul:If>
						</rul:ForEach>
						<rul:Constant Type="boolean">false</rul:Constant>
					</rul:FirstNonNull>
				</rul:Arg>
				<rul:If>
					<rul:Test>
						<rul:And>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@RentalProperty" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Yes</rul:Constant>
							</rul:Equal>
							<rul:Or>
								<rul:Exist AtInputDataDef="CommercialPropertyBuildingAndPersonalPropertyCoverageFormSpecialClassTable/CommercialPropertyBuildingAndPersonalPropertyCoverageFormSpecialClass" />
								<rul:Exist AtInputDataDef="ancestor::CommercialProperty/CommercialPropertyStandardPropertyPolicyTable/CommercialPropertyStandardPropertyPolicy" />
								<rul:Equal>
									<rul:Value Type="boolean" FromParam="formAttachAttachFormExclusionOfLossDueToByProductsOfProductionORProcessingOperations" />
									<rul:Constant Type="boolean">true</rul:Constant>
								</rul:Equal>
							</rul:Or>
						</rul:And>
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:If>
								<rul:Test>
									<rul:NotExist AtInputDataDef="CommercialPropertyExclusionOfLossDueToByProductsOfProductionORProcessingOperationsFormSpecialClassTable/CommercialPropertyExclusionOfLossDueToByProductsOfProductionORProcessingOperationsFormSpecialClass" />
								</rul:Test>
								<rul:Then>
									<rul:Sequence>
										<rul:Locate AtOutputDataDef="CommercialPropertyExclusionOfLossDueToByProductsOfProductionORProcessingOperationsFormSpecialClassTable/CommercialPropertyExclusionOfLossDueToByProductsOfProductionORProcessingOperationsFormSpecialClass[1]" OutputAction="Append">
											<rul:Sequence />
										</rul:Locate>
									</rul:Sequence>
								</rul:Then>
							</rul:If>
						</rul:Sequence>
					</rul:Then>
					<rul:Else>
						<rul:Sequence>
							<rul:Remove AtDataDef="CommercialPropertyExclusionOfLossDueToByProductsOfProductionORProcessingOperationsFormSpecialClassTable/CommercialPropertyExclusionOfLossDueToByProductsOfProductionORProcessingOperationsFormSpecialClass" RemoveMultiple="true" />
						</rul:Sequence>
					</rul:Else>
				</rul:If>
			</rul:WithArgs>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="RemoveFormCommercialPropertyTheftExclusion" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:NotEqual>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@CauseOfLossToUse" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Special</rul:Constant>
						</rul:NotEqual>
						<rul:Exist AtInputDataDef="CommercialPropertyTheftExclusionSpecialClassTable/CommercialPropertyTheftExclusionSpecialClass" />
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:Remove AtDataDef="CommercialPropertyTheftExclusionSpecialClassTable/CommercialPropertyTheftExclusionSpecialClass" RemoveMultiple="true" />
					</rul:Sequence>
				</rul:Then>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="ErcSetRatesAndFactors" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetLimitsToUse" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetTerrorismSublimitPct" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetTerrorismConditionalSublimitPct" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetTerrorismSublimitFactor" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetTRIAExclFactor" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetTerrorismCondExclFactor" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetPostTRIAExclFactor" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetTRIAExclusionRate" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetConditionalTerrorRate" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetPostTRIAExclusionRate" ClearCache="true" />
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetBlanketRatesAndFactors" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetBlanketValues" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="AttachFormCommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSpecialClass" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="AttachFormCommercialPropertyEarthquakeAndVolcanicEruptionCoverageWithFlatDollarDeductibleSpecialClass" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="AttachFormCommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSubLimitFormSpecialClass" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="AttachFormCommercialPropertyEarthquakeAndVolcanicEruptionCoverageSubLimitFormWithFlatDollarDeductibleSpecialClass" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="ErcResetXPaths" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetMarginClauseFactor" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetMLPDCFactor" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetTotalAmountsToUse" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetVandalismExclFactor" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetInitializeFloodRatingSpecialClass" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="InitializeDeductiblesByLocation" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetDeductibleByLocationFactor" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetWindstormOrHailExclFactor" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetWindstormHailIndicator" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetWindstormOrHailDeductibleFactor" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetBGIRatesAndFactors" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetBGIIRatesAndFactors" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetBroadRatesAndFactors" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetSpecialRatesAndFactors" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetEQRatesAndFactors" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetProtectionClassFactor" ClearCache="true" />
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="AttachFormCommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSpecialClass" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Or>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQCovIndicator" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Yes, Included in Blanket</rul:Constant>
							</rul:Equal>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQCovIndicator" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Yes, Not Included in Blanket</rul:Constant>
							</rul:Equal>
						</rul:Or>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="../../@EQCauseOfLossForm" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Earthquake Form (CP 10 40)</rul:Constant>
						</rul:Equal>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:If>
							<rul:Test>
								<rul:NotExist AtInputDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSpecialClass" />
							</rul:Test>
							<rul:Then>
								<rul:Sequence>
									<rul:Locate AtOutputDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSpecialClass[1]" OutputAction="Append">
										<rul:Sequence />
									</rul:Locate>
								</rul:Sequence>
							</rul:Then>
						</rul:If>
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Remove AtDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSpecialClass" RemoveMultiple="true" />
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="AttachFormCommercialPropertyEarthquakeAndVolcanicEruptionCoverageWithFlatDollarDeductibleSpecialClass" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Or>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQCovIndicator" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Yes, Included in Blanket</rul:Constant>
							</rul:Equal>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQCovIndicator" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Yes, Not Included in Blanket</rul:Constant>
							</rul:Equal>
						</rul:Or>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="../../@EQCauseOfLossForm" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Earthquake Form (CP 10 28)</rul:Constant>
						</rul:Equal>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:If>
							<rul:Test>
								<rul:NotExist AtInputDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionCoverageWithFlatDollarDeductibleSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionCoverageWithFlatDollarDeductibleSpecialClass" />
							</rul:Test>
							<rul:Then>
								<rul:Sequence>
									<rul:Locate AtOutputDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionCoverageWithFlatDollarDeductibleSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionCoverageWithFlatDollarDeductibleSpecialClass[1]" OutputAction="Append">
										<rul:Sequence />
									</rul:Locate>
								</rul:Sequence>
							</rul:Then>
						</rul:If>
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Remove AtDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionCoverageWithFlatDollarDeductibleSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionCoverageWithFlatDollarDeductibleSpecialClass" RemoveMultiple="true" />
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="AttachFormCommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSubLimitFormSpecialClass" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Or>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQCovIndicator" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Yes, Included in Blanket</rul:Constant>
							</rul:Equal>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQCovIndicator" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Yes, Not Included in Blanket</rul:Constant>
							</rul:Equal>
						</rul:Or>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="../../@EQCauseOfLossForm" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Earthquake Sub-Limit Form (CP 10 45)</rul:Constant>
						</rul:Equal>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:If>
							<rul:Test>
								<rul:NotExist AtInputDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSubLimitFormSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSubLimitFormSpecialClass" />
							</rul:Test>
							<rul:Then>
								<rul:Sequence>
									<rul:Locate AtOutputDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSubLimitFormSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSubLimitFormSpecialClass[1]" OutputAction="Append">
										<rul:Sequence />
									</rul:Locate>
								</rul:Sequence>
							</rul:Then>
						</rul:If>
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Remove AtDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSubLimitFormSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSubLimitFormSpecialClass" RemoveMultiple="true" />
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="AttachFormCommercialPropertyEarthquakeAndVolcanicEruptionCoverageSubLimitFormWithFlatDollarDeductibleSpecialClass" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Or>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQCovIndicator" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Yes, Included in Blanket</rul:Constant>
							</rul:Equal>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQCovIndicator" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Yes, Not Included in Blanket</rul:Constant>
							</rul:Equal>
						</rul:Or>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="../../@EQCauseOfLossForm" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Earthquake Sub-Limit Form (CP 10 29)</rul:Constant>
						</rul:Equal>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:If>
							<rul:Test>
								<rul:NotExist AtInputDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionCoverageSubLimitFormWithFlatDollarDeductibleSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionCoverageSubLimitFormWithFlatDollarDeductibleSpecialClass" />
							</rul:Test>
							<rul:Then>
								<rul:Sequence>
									<rul:Locate AtOutputDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionCoverageSubLimitFormWithFlatDollarDeductibleSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionCoverageSubLimitFormWithFlatDollarDeductibleSpecialClass[1]" OutputAction="Append">
										<rul:Sequence />
									</rul:Locate>
								</rul:Sequence>
							</rul:Then>
						</rul:If>
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Remove AtDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionCoverageSubLimitFormWithFlatDollarDeductibleSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionCoverageSubLimitFormWithFlatDollarDeductibleSpecialClass" RemoveMultiple="true" />
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetMarginClauseFactor" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:NotEqual>
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@MarginClause" Order="DataDefInputParamConstant" />
						<rul:Constant Type="string"></rul:Constant>
					</rul:NotEqual>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:RunRule Type="decimal" ToDataDef="@MarginClausesFactor" FileName="CommercialPropertySpecialClassRules" Rule="LookupMarginClauseFactor" ClearCache="true" />
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Constant Type="decimal" ToDataDef="@MarginClausesFactor">1.0</rul:Constant>
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetMLPDCFactor" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Copy Type="decimal" ToDataDef="@MultiPremiumAndDispersionCreditFactor" FromDataDef="ancestor::CommercialProperty/@MultiPremiumAndDispersionCreditFactor" />
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetTotalAmountsToUse" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@IncludedInBuilding" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Yes</rul:Constant>
						</rul:Equal>
						<rul:GreaterThan>
							<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@BuildingIDNumber" Order="DataDefInputParamConstant" />
							<rul:Constant Type="integer">0</rul:Constant>
						</rul:GreaterThan>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:WithArgs>
							<rul:Arg Type="integer" Param="LocNumberParam">
								<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@LocNumber" Order="DataDefInputParamConstant" />
							</rul:Arg>
							<rul:Arg Type="integer" Param="BuildingIDNumberParam">
								<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@BuildingIDNumber" Order="DataDefInputParamConstant" />
							</rul:Arg>
							<rul:ForEach AtInputDataDef="ancestor::CommercialPropertyLocation/CommercialPropertyStructureTable/CommercialPropertyStructure">
								<rul:If>
									<rul:Test>
										<rul:And>
											<rul:Equal>
												<rul:Value Type="integer" FromParam="LocNumberParam" />
												<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@LocUnitNumber" Order="DataDefInputParamConstant" />
											</rul:Equal>
											<rul:Equal>
												<rul:Value Type="integer" FromParam="BuildingIDNumberParam" />
												<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@UnitNumber" Order="DataDefInputParamConstant" />
											</rul:Equal>
										</rul:And>
									</rul:Test>
									<rul:Then>
										<rul:Sequence>
											<rul:Copy Type="integer" ToDataDef="@TotAmtInsuranceToUse" FromDataDef="@TotAmtInsurance" />
											<rul:Copy Type="integer" ToDataDef="@SpecialIncludingTheftTotAmtInsuranceToUse" FromDataDef="@SpecialIncludingTheftTotAmtInsurance" />
											<rul:Copy Type="integer" ToDataDef="@SpecialTotAmtInsuranceToUse" FromDataDef="@SpecialTotAmtInsurance" />
											<rul:Copy Type="integer" ToDataDef="@WindstormOrHailTotAmtInsuranceToUse" FromDataDef="@WindstormOrHailTotAmtInsurance" />
											<rul:Break />
										</rul:Sequence>
									</rul:Then>
								</rul:If>
							</rul:ForEach>
						</rul:WithArgs>
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Copy Type="integer" ToDataDef="@TotAmtInsuranceToUse" FromDataDef="@TotAmtInsurance" />
						<rul:Copy Type="integer" ToDataDef="@SpecialIncludingTheftTotAmtInsuranceToUse" FromDataDef="@SpecialIncludingTheftTotAmtInsurance" />
						<rul:Copy Type="integer" ToDataDef="@SpecialTotAmtInsuranceToUse" FromDataDef="@SpecialTotAmtInsurance" />
						<rul:Copy Type="integer" ToDataDef="@WindstormOrHailTotAmtInsuranceToUse" FromDataDef="@WindstormOrHailTotAmtInsurance" />
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetVandalismExclFactor" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:Or>
						<rul:And>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@PolicyType" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Commercial Property Policy</rul:Constant>
							</rul:Equal>
							<rul:Exist AtInputDataDef="CommercialPropertyVandalismExclusionSpecialClassTable/CommercialPropertyVandalismExclusionSpecialClass" />
						</rul:And>
						<rul:And>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@PolicyType" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Standard Property Policy</rul:Constant>
							</rul:Equal>
							<rul:Or>
								<rul:Equal>
									<rul:FirstValue Type="string" FromConstant="" FromDataDef="@CauseOfLossToUse" Order="DataDefInputParamConstant" />
									<rul:Constant Type="string">Fire and Allied Lines</rul:Constant>
								</rul:Equal>
								<rul:Equal>
									<rul:FirstValue Type="string" FromConstant="" FromDataDef="@CauseOfLossToUse" Order="DataDefInputParamConstant" />
									<rul:Constant Type="string">Fire, Vandalism and Allied Lines</rul:Constant>
								</rul:Equal>
								<rul:Equal>
									<rul:FirstValue Type="string" FromConstant="" FromDataDef="@CauseOfLossToUse" Order="DataDefInputParamConstant" />
									<rul:Constant Type="string">Fire, Sprinkler Leakage and Allied Lines</rul:Constant>
								</rul:Equal>
								<rul:Equal>
									<rul:FirstValue Type="string" FromConstant="" FromDataDef="@CauseOfLossToUse" Order="DataDefInputParamConstant" />
									<rul:Constant Type="string">Fire</rul:Constant>
								</rul:Equal>
							</rul:Or>
						</rul:And>
					</rul:Or>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:If>
							<rul:Test>
								<rul:NotEqual>
									<rul:FirstValue Type="string" FromConstant="" FromDataDef="@ClassCode" Order="DataDefInputParamConstant" />
									<rul:Constant Type="string"></rul:Constant>
								</rul:NotEqual>
							</rul:Test>
							<rul:Then>
								<rul:Sequence>
									<rul:RunRule Type="decimal" ToDataDef="@VandalismExclFactor" FileName="CommercialPropertySpecialClassRules" Rule="LookupVandalismExclusionFactor" ClearCache="true" />
								</rul:Sequence>
							</rul:Then>
							<rul:Else>
								<rul:Sequence>
									<rul:Constant Type="decimal" ToDataDef="@VandalismExclFactor">0.0</rul:Constant>
								</rul:Sequence>
							</rul:Else>
						</rul:If>
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Constant Type="decimal" ToDataDef="@VandalismExclFactor">1.0</rul:Constant>
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetInitializeFloodRatingSpecialClass" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:ForEach AtDataDef="CommercialPropertyFloodCoverageEndorsementSpecialClassTable/CommercialPropertyFloodCoverageEndorsementSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyFloodCoverageEndorsementSpecialClassRules" Rule="ProcessCall" ClearCache="true" />
			</rul:ForEach>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="InitializeDeductiblesByLocation" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:ForEach AtDataDef="CommercialPropertyDeductiblesByLocationSpecialClassTable/CommercialPropertyDeductiblesByLocationSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyDeductiblesByLocationSpecialClassRules" Rule="InitializeValues" ClearCache="true" />
			</rul:ForEach>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetDeductibleByLocationFactor" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Exist AtInputDataDef="CommercialPropertyDeductiblesByLocationSpecialClassTable/CommercialPropertyDeductiblesByLocationSpecialClass" />
						<rul:NotEqual>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="CommercialPropertyDeductiblesByLocationSpecialClassTable/CommercialPropertyDeductiblesByLocationSpecialClass[1]/@Deductible" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string"></rul:Constant>
						</rul:NotEqual>
						<rul:NotEqual>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="CommercialPropertyDeductiblesByLocationSpecialClassTable/CommercialPropertyDeductiblesByLocationSpecialClass[1]/@Deductible" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Not Applicable</rul:Constant>
						</rul:NotEqual>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:RunRule Type="decimal" ToDataDef="@DeductibleByLocationFactor" FileName="CommercialPropertySpecialClassRules" Rule="LookupDeductibleByLocationFactor" ClearCache="true" />
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Constant Type="decimal" ToDataDef="@DeductibleByLocationFactor">1.0</rul:Constant>
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetWindstormOrHailExclFactor" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Exist AtInputDataDef="CommercialPropertyWindstormOrHailExclusionSpecialClassTable/CommercialPropertyWindstormOrHailExclusionSpecialClass" />
						<rul:NotEqual>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@BasicGroupIISymbol" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string"></rul:Constant>
						</rul:NotEqual>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:RunRule Type="decimal" ToDataDef="@WindstormOrHailExclFactor" FileName="CommercialPropertySpecialClassRules" Rule="LookupWindstormOrHailExclFactor" ClearCache="true" />
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Constant Type="decimal" ToDataDef="@WindstormOrHailExclFactor">0.0</rul:Constant>
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetWindstormHailIndicator" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Choose>
				<rul:When>
					<rul:Test>
						<rul:And>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">1%</rul:Constant>
							</rul:Equal>
							<rul:GreaterThanOrEqual>
								<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@WindstormOrHailTotAmtInsuranceToUse" Order="DataDefInputParamConstant" />
								<rul:Constant Type="integer">100000</rul:Constant>
							</rul:GreaterThanOrEqual>
						</rul:And>
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:Constant Type="integer" ToDataDef="@WindstormHailIndicator">1</rul:Constant>
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:When>
					<rul:Test>
						<rul:And>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">2%</rul:Constant>
							</rul:Equal>
							<rul:GreaterThanOrEqual>
								<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@WindstormOrHailTotAmtInsuranceToUse" Order="DataDefInputParamConstant" />
								<rul:Constant Type="integer">50000</rul:Constant>
							</rul:GreaterThanOrEqual>
						</rul:And>
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:Constant Type="integer" ToDataDef="@WindstormHailIndicator">1</rul:Constant>
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:When>
					<rul:Test>
						<rul:And>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">5%</rul:Constant>
							</rul:Equal>
							<rul:GreaterThanOrEqual>
								<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@WindstormOrHailTotAmtInsuranceToUse" Order="DataDefInputParamConstant" />
								<rul:Constant Type="integer">20000</rul:Constant>
							</rul:GreaterThanOrEqual>
						</rul:And>
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:Constant Type="integer" ToDataDef="@WindstormHailIndicator">1</rul:Constant>
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:Otherwise>
					<rul:Sequence>
						<rul:Constant Type="integer" ToDataDef="@WindstormHailIndicator">0</rul:Constant>
					</rul:Sequence>
				</rul:Otherwise>
			</rul:Choose>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetWindstormOrHailDeductibleFactor" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Choose>
				<rul:When>
					<rul:Test>
						<rul:And>
							<rul:NotEqual>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string"></rul:Constant>
							</rul:NotEqual>
							<rul:NotEqual>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Not Applicable</rul:Constant>
							</rul:NotEqual>
							<rul:Equal>
								<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@WindstormHailIndicator" Order="DataDefInputParamConstant" />
								<rul:Constant Type="integer">1</rul:Constant>
							</rul:Equal>
						</rul:And>
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:RunRule Type="decimal" ToDataDef="@WindstormOrHailDeductibleFactor" FileName="CommercialPropertySpecialClassRules" Rule="LookupWindstormOrHailDeductibleFactor" ClearCache="true" />
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:When>
					<rul:Test>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@Deductible" Order="DataDefInputParamConstant" />
						</rul:Equal>
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:Constant Type="decimal" ToDataDef="@WindstormOrHailDeductibleFactor">1.0</rul:Constant>
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:When>
					<rul:Test>
						<rul:Or>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">500</rul:Constant>
							</rul:Equal>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">1,000</rul:Constant>
							</rul:Equal>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">2,500</rul:Constant>
							</rul:Equal>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">5,000</rul:Constant>
							</rul:Equal>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">10,000</rul:Constant>
							</rul:Equal>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">25,000</rul:Constant>
							</rul:Equal>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">50,000</rul:Constant>
							</rul:Equal>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">75,000</rul:Constant>
							</rul:Equal>
						</rul:Or>
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:RunRule Type="decimal" ToDataDef="@WindstormOrHailDeductibleFactor" FileName="CommercialPropertySpecialClassRules" Rule="LookupDeductibleFactor" ClearCache="true">
								<rul:Arg Type="string" Param="ded">
									<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
								</rul:Arg>
								<rul:Arg Type="integer" Param="limit">
									<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@WindstormOrHailTotAmtInsuranceToUse" Order="DataDefInputParamConstant" />
								</rul:Arg>
								<rul:Arg Type="string" Param="causeOfLoss">
									<rul:Constant Type="string">Basic Group II</rul:Constant>
								</rul:Arg>
							</rul:RunRule>
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:When>
					<rul:Test>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">250</rul:Constant>
						</rul:Equal>
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:RunRule Type="decimal" ToDataDef="@WindstormOrHailDeductibleFactor" FileName="CommercialPropertySpecialClassRules" Rule="LookupDeductible250Factor" ClearCache="true">
								<rul:Arg Type="string" Param="causeOfLoss">
									<rul:Constant Type="string">Basic</rul:Constant>
								</rul:Arg>
							</rul:RunRule>
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:Otherwise>
					<rul:Sequence>
						<rul:Constant Type="decimal" ToDataDef="@WindstormOrHailDeductibleFactor">1.0</rul:Constant>
					</rul:Sequence>
				</rul:Otherwise>
			</rul:Choose>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetBGIRatesAndFactors" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetCoinsuranceFactor" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetBasicGroupIBaseRate" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetBasicGroupIRate" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetBasicGroupICauseOfLossAdjustment" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetAdjustedBasicGroupIRate" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetDeductibleFactorBasicGroupI" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetFinalBasicGroupIRate" ClearCache="true" />
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetCoinsuranceFactor" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Choose>
				<rul:When>
					<rul:Test>
						<rul:Or>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@Coinsurance" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">80%</rul:Constant>
							</rul:Equal>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@Coinsurance" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">90%</rul:Constant>
							</rul:Equal>
							<rul:And>
								<rul:Equal>
									<rul:FirstValue Type="string" FromConstant="" FromDataDef="@Coinsurance" Order="DataDefInputParamConstant" />
									<rul:Constant Type="string">100%</rul:Constant>
								</rul:Equal>
								<rul:Equal>
									<rul:FirstValue Type="string" FromConstant="" FromDataDef="@IncludedInBlkt" Order="DataDefInputParamConstant" />
									<rul:Constant Type="string">No</rul:Constant>
								</rul:Equal>
							</rul:And>
						</rul:Or>
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:RunRule Type="decimal" ToDataDef="@CoinsuranceFactor" FileName="CommercialPropertySpecialClassRules" Rule="LookupCoinsuranceFactor" ClearCache="true" />
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:When>
					<rul:Test>
						<rul:And>
							<rul:Exist AtInputDataDef="../../../../CommercialPropertyBlanketRatingTable/CommercialPropertyBlanketRating[1]/CommercialPropertyBlanketRatingDetailTable/CommercialPropertyBlanketRatingDetail" />
							<rul:NotEqual>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@BlktCoinsuranceValue" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string"></rul:Constant>
							</rul:NotEqual>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@IncludedInBlkt" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Yes</rul:Constant>
							</rul:Equal>
						</rul:And>
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:If>
								<rul:Test>
									<rul:Or>
										<rul:Equal>
											<rul:FirstValue Type="string" FromConstant="" FromDataDef="@BlktCoinsuranceValue" Order="DataDefInputParamConstant" />
											<rul:Constant Type="string">80%</rul:Constant>
										</rul:Equal>
										<rul:Equal>
											<rul:FirstValue Type="string" FromConstant="" FromDataDef="@BlktCoinsuranceValue" Order="DataDefInputParamConstant" />
											<rul:Constant Type="string">90%</rul:Constant>
										</rul:Equal>
										<rul:Equal>
											<rul:FirstValue Type="string" FromConstant="" FromDataDef="@BlktCoinsuranceValue" Order="DataDefInputParamConstant" />
											<rul:Constant Type="string">100%</rul:Constant>
										</rul:Equal>
									</rul:Or>
								</rul:Test>
								<rul:Then>
									<rul:Sequence>
										<rul:RunRule Type="decimal" ToDataDef="@CoinsuranceFactor" FileName="CommercialPropertySpecialClassRules" Rule="LookupBlktCoinsuranceFactor" ClearCache="true" />
									</rul:Sequence>
								</rul:Then>
							</rul:If>
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:When>
					<rul:Test>
						<rul:Or>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@Coinsurance" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">50%</rul:Constant>
							</rul:Equal>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@Coinsurance" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">60%</rul:Constant>
							</rul:Equal>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@Coinsurance" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">70%</rul:Constant>
							</rul:Equal>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@Coinsurance" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">None</rul:Constant>
							</rul:Equal>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@BlktCoinsuranceValue" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">50%</rul:Constant>
							</rul:Equal>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@BlktCoinsuranceValue" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">60%</rul:Constant>
							</rul:Equal>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@BlktCoinsuranceValue" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">70%</rul:Constant>
							</rul:Equal>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@BlktCoinsuranceValue" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">None</rul:Constant>
							</rul:Equal>
						</rul:Or>
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:RunRule Type="decimal" ToDataDef="@CoinsuranceFactor" FileName="CommercialPropertySpecialClassRules" Rule="LookupLessThan80PctMultiplicativeFactor" ClearCache="true" />
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:Otherwise>
					<rul:Sequence>
						<rul:Constant Type="decimal" ToDataDef="@CoinsuranceFactor">1.0</rul:Constant>
					</rul:Sequence>
				</rul:Otherwise>
			</rul:Choose>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetBasicGroupIBaseRate" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:NotEqual>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@SpecialClassDescConvertedOption" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string"></rul:Constant>
						</rul:NotEqual>
						<rul:NotEqual>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@ProtectionClassToUse" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string"></rul:Constant>
						</rul:NotEqual>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:RunRule Type="decimal" ToDataDef="@BasicGroupIBaseRate" FileName="CommercialPropertySpecialClassRules" Rule="LookupBasicGroupIRateSpecialClass" ClearCache="true" />
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Constant Type="decimal" ToDataDef="@BasicGroupIBaseRate">0.0</rul:Constant>
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetBasicGroupIRate" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Product ToDataDef="@BasicGroupIRate" DecimalPlaces="3">
				<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@BasicGroupIBaseRate" Order="DataDefInputParamConstant" />
				<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@LossCostMultiplier" Order="DataDefInputParamConstant" />
			</rul:Product>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetBasicGroupICauseOfLossAdjustment" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:WithArgs>
				<rul:Arg Type="decimal" Param="calcBGICOLAdjustment">
					<rul:FirstNonNull Type="decimal">
						<rul:Product DecimalPlaces="3">
							<rul:Product DecimalPlaces="3">
								<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@BasicGroupIRate" Order="DataDefInputParamConstant" />
								<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@VandalismExclFactor" Order="DataDefInputParamConstant" />
							</rul:Product>
							<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@StdPropPolGroupIFactor" Order="DataDefInputParamConstant" />
						</rul:Product>
						<rul:Constant Type="decimal">0</rul:Constant>
					</rul:FirstNonNull>
				</rul:Arg>
				<rul:Value Type="decimal" ToDataDef="@BasicGroupICauseOfLossAdjustment" FromParam="calcBGICOLAdjustment" />
			</rul:WithArgs>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetAdjustedBasicGroupIRate" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Product ToDataDef="@AdjustedBasicGroupIRate" DecimalPlaces="3">
				<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@BasicGroupICauseOfLossAdjustment" Order="DataDefInputParamConstant" />
				<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@CoinsuranceFactor" Order="DataDefInputParamConstant" />
			</rul:Product>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetDeductibleFactorBasicGroupI" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Choose>
				<rul:When>
					<rul:Test>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@Deductible" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">250</rul:Constant>
						</rul:Equal>
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:RunRule Type="decimal" ToDataDef="@DeductibleFactorBasicGroupI" FileName="CommercialPropertySpecialClassRules" Rule="LookupDeductible250Factor" ClearCache="true">
								<rul:Arg Type="string" Param="causeOfLoss">
									<rul:Constant Type="string">Basic</rul:Constant>
								</rul:Arg>
							</rul:RunRule>
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:When>
					<rul:Test>
						<rul:NotEqual>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@Deductible" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string"></rul:Constant>
						</rul:NotEqual>
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:RunRule Type="decimal" ToDataDef="@DeductibleFactorBasicGroupI" FileName="CommercialPropertySpecialClassRules" Rule="LookupDeductibleFactor" ClearCache="true">
								<rul:Arg Type="string" Param="ded">
									<rul:FirstValue Type="string" FromConstant="" FromDataDef="@Deductible" Order="DataDefInputParamConstant" />
								</rul:Arg>
								<rul:Arg Type="integer" Param="limit">
									<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@TotAmtInsuranceToUse" Order="DataDefInputParamConstant" />
								</rul:Arg>
								<rul:Arg Type="string" Param="causeOfLoss">
									<rul:Constant Type="string">Basic Group I</rul:Constant>
								</rul:Arg>
							</rul:RunRule>
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:Otherwise>
					<rul:Sequence>
						<rul:Constant Type="decimal" ToDataDef="@DeductibleFactorBasicGroupI">0.0</rul:Constant>
					</rul:Sequence>
				</rul:Otherwise>
			</rul:Choose>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetFinalBasicGroupIRate" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:WithArgs>
				<rul:Arg Type="decimal" Param="calcFinalBasicGroupIRate">
					<rul:FirstNonNull Type="decimal">
						<rul:Product DecimalPlaces="3">
							<rul:Product DecimalPlaces="3">
								<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@AdjustedBasicGroupIRate" Order="DataDefInputParamConstant" />
								<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@DeductibleByLocationFactor" Order="DataDefInputParamConstant" />
							</rul:Product>
							<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@DeductibleFactorBasicGroupI" Order="DataDefInputParamConstant" />
						</rul:Product>
						<rul:Constant Type="decimal">0</rul:Constant>
					</rul:FirstNonNull>
				</rul:Arg>
				<rul:Value Type="decimal" ToDataDef="@FinalBasicGroupIRate" FromParam="calcFinalBasicGroupIRate" />
			</rul:WithArgs>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetBGIIRatesAndFactors" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetBasicGroupIINumericValue" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetBasicGroupIIBaseRate" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetLowestBasicGroupIIBaseRate" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetBasicGroupIIRate" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetBasicGroupIICauseOfLossAdjustment" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetBasicGroupIICoinsuranceFactor" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetAdjustedBasicGroupIIRate" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetBGIIDeductibleByLocationFactor" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetDeductibleFactorBasicGroupII" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetFinalBasicGroupIIRate" ClearCache="true" />
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetBasicGroupIINumericValue" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Copy Type="decimal" ToDataDef="@BasicGroupIINumericValue" FromDataDef="@BasicGroupIISymbolNum" />
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetBasicGroupIIBaseRate" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:NotEqual>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@BasicGroupIIRatingTerr" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string"></rul:Constant>
						</rul:NotEqual>
						<rul:NotEqual>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@BasicGroupIISymbol" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string"></rul:Constant>
						</rul:NotEqual>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:RunRule Type="decimal" ToDataDef="@BasicGroupIIBaseRate" FileName="CommercialPropertySpecialClassRules" Rule="LookupBasicGroupIIRate" ClearCache="true" />
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Constant Type="decimal" ToDataDef="@BasicGroupIIBaseRate">0.0</rul:Constant>
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetLowestBasicGroupIIBaseRate" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:NotEqual>
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@BasicGroupIISymbol" Order="DataDefInputParamConstant" />
						<rul:Constant Type="string"></rul:Constant>
					</rul:NotEqual>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:RunRule Type="decimal" ToDataDef="@LowestBasicGroupIIBaseRate" FileName="CommercialPropertySpecialClassRules" Rule="LookupLowestBasicGroupIIRate" ClearCache="true" />
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Constant Type="decimal" ToDataDef="@LowestBasicGroupIIBaseRate">0.0</rul:Constant>
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetBasicGroupIIRate" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Product ToDataDef="@BasicGroupIIRate" DecimalPlaces="3">
				<rul:Product DecimalPlaces="3">
					<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@BasicGroupIIBaseRate" Order="DataDefInputParamConstant" />
					<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@LossCostMultiplier" Order="DataDefInputParamConstant" />
				</rul:Product>
				<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@BasicGroupIINumericValue" Order="DataDefInputParamConstant" />
			</rul:Product>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetBasicGroupIICauseOfLossAdjustment" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:Or>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@CauseOfLossToUse" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Fire</rul:Constant>
						</rul:Equal>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@CauseOfLossToUse" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Fire and Vandalism</rul:Constant>
						</rul:Equal>
					</rul:Or>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:Constant Type="decimal" ToDataDef="@BasicGroupIICauseOfLossAdjustment">0.0</rul:Constant>
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:WithArgs>
							<rul:Arg Type="decimal" Param="calcBasicGroupIICauseOfLossAdjustment">
								<rul:FirstNonNull Type="decimal">
									<rul:If>
										<rul:Test>
											<rul:NotExist AtInputDataDef="CommercialPropertyWindstormOrHailExclusionSpecialClassTable/CommercialPropertyWindstormOrHailExclusionSpecialClass" />
										</rul:Test>
										<rul:Then>
											<rul:Product DecimalPlaces="3">
												<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@BasicGroupIIRate" Order="DataDefInputParamConstant" />
												<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@StdPropPolGroupIIFactor" Order="DataDefInputParamConstant" />
											</rul:Product>
										</rul:Then>
										<rul:Else>
											<rul:Product DecimalPlaces="3">
												<rul:Product DecimalPlaces="3">
													<rul:Product DecimalPlaces="3">
														<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@LowestBasicGroupIIBaseRate" Order="DataDefInputParamConstant" />
														<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@LossCostMultiplier" Order="DataDefInputParamConstant" />
													</rul:Product>
													<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@WindstormOrHailExclFactor" Order="DataDefInputParamConstant" />
												</rul:Product>
												<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@StdPropPolGroupIIFactor" Order="DataDefInputParamConstant" />
											</rul:Product>
										</rul:Else>
									</rul:If>
									<rul:Constant Type="decimal">0</rul:Constant>
								</rul:FirstNonNull>
							</rul:Arg>
							<rul:Value Type="decimal" ToDataDef="@BasicGroupIICauseOfLossAdjustment" FromParam="calcBasicGroupIICauseOfLossAdjustment" />
						</rul:WithArgs>
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetBasicGroupIICoinsuranceFactor" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:Or>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@Coinsurance" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">50%</rul:Constant>
						</rul:Equal>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@Coinsurance" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">60%</rul:Constant>
						</rul:Equal>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@Coinsurance" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">70%</rul:Constant>
						</rul:Equal>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@Coinsurance" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">None</rul:Constant>
						</rul:Equal>
					</rul:Or>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:RunRule Type="decimal" ToDataDef="@BasicGroupIICoinsuranceFactor" FileName="CommercialPropertySpecialClassRules" Rule="LookupBasicGroupIIFlatCoinsuranceFactor" ClearCache="true" />
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Copy Type="decimal" ToDataDef="@BasicGroupIICoinsuranceFactor" FromDataDef="@CoinsuranceFactor" />
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetAdjustedBasicGroupIIRate" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Product ToDataDef="@AdjustedBasicGroupIIRate" DecimalPlaces="3">
				<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@BasicGroupIICauseOfLossAdjustment" Order="DataDefInputParamConstant" />
				<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@BasicGroupIICoinsuranceFactor" Order="DataDefInputParamConstant" />
			</rul:Product>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetBGIIDeductibleByLocationFactor" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Equal>
							<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@WindstormHailIndicator" Order="DataDefInputParamConstant" />
							<rul:Constant Type="integer">0</rul:Constant>
						</rul:Equal>
						<rul:Exist AtInputDataDef="CommercialPropertyDeductiblesByLocationSpecialClassTable/CommercialPropertyDeductiblesByLocationSpecialClass" />
						<rul:NotEqual>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="CommercialPropertyDeductiblesByLocationSpecialClassTable/CommercialPropertyDeductiblesByLocationSpecialClass[1]/@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string"></rul:Constant>
						</rul:NotEqual>
						<rul:NotEqual>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="CommercialPropertyDeductiblesByLocationSpecialClassTable/CommercialPropertyDeductiblesByLocationSpecialClass[1]/@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Not Applicable</rul:Constant>
						</rul:NotEqual>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:RunRule Type="decimal" ToDataDef="@BGIIDeductibleByLocationFactor" FileName="CommercialPropertySpecialClassRules" Rule="LookupDeductibleByLocationFactor" ClearCache="true" />
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Constant Type="decimal" ToDataDef="@BGIIDeductibleByLocationFactor">1.0</rul:Constant>
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetDeductibleFactorBasicGroupII" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Choose>
				<rul:When>
					<rul:Test>
						<rul:NotEqual>
							<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@WindstormOrHailDeductibleFactor" Order="DataDefInputParamConstant" />
							<rul:Constant Type="decimal">1</rul:Constant>
						</rul:NotEqual>
					</rul:Test>
					<rul:Then>
						<rul:Copy Type="decimal" ToDataDef="@DeductibleFactorBasicGroupII" FromDataDef="@WindstormOrHailDeductibleFactor" />
					</rul:Then>
				</rul:When>
				<rul:When>
					<rul:Test>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@Deductible" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">250</rul:Constant>
						</rul:Equal>
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:RunRule Type="decimal" ToDataDef="@DeductibleFactorBasicGroupII" FileName="CommercialPropertySpecialClassRules" Rule="LookupDeductible250Factor" ClearCache="true">
								<rul:Arg Type="string" Param="causeOfLoss">
									<rul:Constant Type="string">Basic</rul:Constant>
								</rul:Arg>
							</rul:RunRule>
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:When>
					<rul:Test>
						<rul:NotEqual>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@Deductible" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string"></rul:Constant>
						</rul:NotEqual>
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:RunRule Type="decimal" ToDataDef="@DeductibleFactorBasicGroupII" FileName="CommercialPropertySpecialClassRules" Rule="LookupDeductibleFactor" ClearCache="true">
								<rul:Arg Type="string" Param="ded">
									<rul:FirstValue Type="string" FromConstant="" FromDataDef="@Deductible" Order="DataDefInputParamConstant" />
								</rul:Arg>
								<rul:Arg Type="integer" Param="limit">
									<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@TotAmtInsuranceToUse" Order="DataDefInputParamConstant" />
								</rul:Arg>
								<rul:Arg Type="string" Param="causeOfLoss">
									<rul:Constant Type="string">Basic Group II</rul:Constant>
								</rul:Arg>
							</rul:RunRule>
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:Otherwise>
					<rul:Sequence>
						<rul:Constant Type="decimal" ToDataDef="@DeductibleFactorBasicGroupII">0.0</rul:Constant>
					</rul:Sequence>
				</rul:Otherwise>
			</rul:Choose>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetFinalBasicGroupIIRate" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:WithArgs>
				<rul:Arg Type="decimal" Param="calcFinalBasicGroupIIRate">
					<rul:FirstNonNull Type="decimal">
						<rul:Product DecimalPlaces="3">
							<rul:Product DecimalPlaces="3">
								<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@AdjustedBasicGroupIIRate" Order="DataDefInputParamConstant" />
								<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@BGIIDeductibleByLocationFactor" Order="DataDefInputParamConstant" />
							</rul:Product>
							<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@DeductibleFactorBasicGroupII" Order="DataDefInputParamConstant" />
						</rul:Product>
						<rul:Constant Type="decimal">0</rul:Constant>
					</rul:FirstNonNull>
				</rul:Arg>
				<rul:Value Type="decimal" ToDataDef="@FinalBasicGroupIIRate" FromParam="calcFinalBasicGroupIIRate" />
			</rul:WithArgs>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetBroadRatesAndFactors" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetBroadRate" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetAdjustedBroadRate" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetDeductibleFactorBroad" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetFinalBroadRate" ClearCache="true" />
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetBroadRate" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Choose>
				<rul:When>
					<rul:Test>
						<rul:Or>
							<rul:NotEqual>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@CauseOfLossToUse" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Broad</rul:Constant>
							</rul:NotEqual>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@PolicyType" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Standard Property Policy</rul:Constant>
							</rul:Equal>
						</rul:Or>
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:Constant Type="decimal" ToDataDef="@BroadBaseRate">0.0</rul:Constant>
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:When>
					<rul:Test>
						<rul:And>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@CauseOfLossToUse" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Broad</rul:Constant>
							</rul:Equal>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@PolicyType" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Commercial Property Policy</rul:Constant>
							</rul:Equal>
						</rul:And>
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:RunRule Type="decimal" ToDataDef="@BroadBaseRate" FileName="CommercialPropertySpecialClassRules" Rule="LookupBroadFormBaseRate" ClearCache="true" />
						</rul:Sequence>
					</rul:Then>
				</rul:When>
			</rul:Choose>
			<rul:Product ToDataDef="@BroadRate" DecimalPlaces="3">
				<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@BroadBaseRate" Order="DataDefInputParamConstant" />
				<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@LossCostMultiplier" Order="DataDefInputParamConstant" />
			</rul:Product>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetAdjustedBroadRate" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Product ToDataDef="@AdjustedBroadRate" DecimalPlaces="3">
				<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@BroadRate" Order="DataDefInputParamConstant" />
				<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@CoinsuranceFactor" Order="DataDefInputParamConstant" />
			</rul:Product>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetDeductibleFactorBroad" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Choose>
				<rul:When>
					<rul:Test>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@Deductible" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">250</rul:Constant>
						</rul:Equal>
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:RunRule Type="decimal" ToDataDef="@DeductibleFactorBroad" FileName="CommercialPropertySpecialClassRules" Rule="LookupDeductible250Factor" ClearCache="true">
								<rul:Arg Type="string" Param="causeOfLoss">
									<rul:Constant Type="string">Broad</rul:Constant>
								</rul:Arg>
							</rul:RunRule>
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:When>
					<rul:Test>
						<rul:NotEqual>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@Deductible" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string"></rul:Constant>
						</rul:NotEqual>
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:RunRule Type="decimal" ToDataDef="@DeductibleFactorBroad" FileName="CommercialPropertySpecialClassRules" Rule="LookupDeductibleFactor" ClearCache="true">
								<rul:Arg Type="string" Param="ded">
									<rul:FirstValue Type="string" FromConstant="" FromDataDef="@Deductible" Order="DataDefInputParamConstant" />
								</rul:Arg>
								<rul:Arg Type="integer" Param="limit">
									<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@TotAmtInsuranceToUse" Order="DataDefInputParamConstant" />
								</rul:Arg>
								<rul:Arg Type="string" Param="causeOfLoss">
									<rul:Constant Type="string">Other Cause Of Loss</rul:Constant>
								</rul:Arg>
							</rul:RunRule>
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:Otherwise>
					<rul:Sequence>
						<rul:Constant Type="decimal" ToDataDef="@DeductibleFactorBroad">0.0</rul:Constant>
					</rul:Sequence>
				</rul:Otherwise>
			</rul:Choose>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetFinalBroadRate" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:WithArgs>
				<rul:Arg Type="decimal" Param="calcFinalBroadRate">
					<rul:FirstNonNull Type="decimal">
						<rul:Product DecimalPlaces="3">
							<rul:Product DecimalPlaces="3">
								<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@AdjustedBroadRate" Order="DataDefInputParamConstant" />
								<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@DeductibleByLocationFactor" Order="DataDefInputParamConstant" />
							</rul:Product>
							<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@DeductibleFactorBroad" Order="DataDefInputParamConstant" />
						</rul:Product>
						<rul:Constant Type="decimal">0</rul:Constant>
					</rul:FirstNonNull>
				</rul:Arg>
				<rul:Value Type="decimal" ToDataDef="@FinalBroadRate" FromParam="calcFinalBroadRate" />
			</rul:WithArgs>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetSpecialRatesAndFactors" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetSpecialTheftExclusionIndicator" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetSpecialTheftExclusionFactor" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetSpecialRate" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetSpecialCauseOfLossAdjustment" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetAdjustedSpecialRate" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetSpecialDeductibleByLocationFactor" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetDeductibleFactorSpecial" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetFinalSpecialRate" ClearCache="true" />
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetSpecialTheftExclusionIndicator" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Constant Type="integer" ToDataDef="@SpecialTheftExclusionIndicator">0</rul:Constant>
			<rul:If>
				<rul:Test>
					<rul:Exist AtInputDataDef="CommercialPropertyTheftExclusionSpecialClassTable/CommercialPropertyTheftExclusionSpecialClass" />
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:Constant Type="integer" ToDataDef="@SpecialTheftExclusionIndicator">1</rul:Constant>
					</rul:Sequence>
				</rul:Then>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetSpecialTheftExclusionFactor" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Constant Type="decimal" ToDataDef="@SpecialTheftExclusionFactor">1.0</rul:Constant>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@CauseOfLossToUse" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Special</rul:Constant>
						</rul:Equal>
						<rul:Equal>
							<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@SpecialTheftExclusionIndicator" Order="DataDefInputParamConstant" />
							<rul:Constant Type="integer">1</rul:Constant>
						</rul:Equal>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:RunRule Type="decimal" ToDataDef="@SpecialTheftExclusionFactor" FileName="CommercialPropertySpecialClassRules" Rule="LookupSpecialBldgTheftExclusionFactor" ClearCache="true" />
					</rul:Sequence>
				</rul:Then>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetSpecialRate" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Choose>
				<rul:When>
					<rul:Test>
						<rul:Or>
							<rul:NotEqual>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@CauseOfLossToUse" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Special</rul:Constant>
							</rul:NotEqual>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@PolicyType" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Standard Property Policy</rul:Constant>
							</rul:Equal>
						</rul:Or>
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:Constant Type="decimal" ToDataDef="@SpecialBaseRate">0.0</rul:Constant>
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:When>
					<rul:Test>
						<rul:And>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@CauseOfLossToUse" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Special</rul:Constant>
							</rul:Equal>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@PolicyType" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Commercial Property Policy</rul:Constant>
							</rul:Equal>
						</rul:And>
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:RunRule Type="decimal" ToDataDef="@SpecialBaseRate" FileName="CommercialPropertySpecialClassRules" Rule="LookupSpecialBuildingRate" ClearCache="true" />
						</rul:Sequence>
					</rul:Then>
				</rul:When>
			</rul:Choose>
			<rul:Product ToDataDef="@SpecialRate" DecimalPlaces="3">
				<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@SpecialBaseRate" Order="DataDefInputParamConstant" />
				<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@LossCostMultiplier" Order="DataDefInputParamConstant" />
			</rul:Product>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetSpecialCauseOfLossAdjustment" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Product ToDataDef="@SpecialCauseOfLossAdjustment" DecimalPlaces="3">
				<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@SpecialRate" Order="DataDefInputParamConstant" />
				<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@SpecialTheftExclusionFactor" Order="DataDefInputParamConstant" />
			</rul:Product>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetAdjustedSpecialRate" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Product ToDataDef="@AdjustedSpecialRate" DecimalPlaces="3">
				<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@SpecialCauseOfLossAdjustment" Order="DataDefInputParamConstant" />
				<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@CoinsuranceFactor" Order="DataDefInputParamConstant" />
			</rul:Product>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetSpecialDeductibleByLocationFactor" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Exist AtInputDataDef="CommercialPropertyDeductiblesByLocationSpecialClassTable/CommercialPropertyDeductiblesByLocationSpecialClass" />
						<rul:NotEqual>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="CommercialPropertyDeductiblesByLocationSpecialClassTable/CommercialPropertyDeductiblesByLocationSpecialClass[1]/@TheftDeductible" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string"></rul:Constant>
						</rul:NotEqual>
						<rul:NotEqual>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="CommercialPropertyDeductiblesByLocationSpecialClassTable/CommercialPropertyDeductiblesByLocationSpecialClass[1]/@TheftDeductible" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Not Applicable</rul:Constant>
						</rul:NotEqual>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:RunRule Type="decimal" ToDataDef="@SpecialDeductibleByLocationFactor" FileName="CommercialPropertySpecialClassRules" Rule="LookupDeductibleByLocationFactor" ClearCache="true" />
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Constant Type="decimal" ToDataDef="@SpecialDeductibleByLocationFactor">1.0</rul:Constant>
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetDeductibleFactorSpecial" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Choose>
				<rul:When>
					<rul:Test>
						<rul:And>
							<rul:Equal>
								<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@SpecialTheftExclusionIndicator" Order="DataDefInputParamConstant" />
								<rul:Constant Type="integer">0</rul:Constant>
							</rul:Equal>
							<rul:NotEqual>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@TheftDeductible" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Not Applicable</rul:Constant>
							</rul:NotEqual>
							<rul:NotEqual>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@TheftDeductible" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string"></rul:Constant>
							</rul:NotEqual>
							<rul:NotEqual>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@TheftDeductible" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">250</rul:Constant>
							</rul:NotEqual>
							<rul:NotEqual>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@TheftDeductible" Order="DataDefInputParamConstant" />
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@Deductible" Order="DataDefInputParamConstant" />
							</rul:NotEqual>
						</rul:And>
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:RunRule Type="decimal" ToDataDef="@DeductibleFactorSpecial" FileName="CommercialPropertySpecialClassRules" Rule="LookupDeductibleFactor" ClearCache="true">
								<rul:Arg Type="string" Param="ded">
									<rul:FirstValue Type="string" FromConstant="" FromDataDef="@TheftDeductible" Order="DataDefInputParamConstant" />
								</rul:Arg>
								<rul:Arg Type="integer" Param="limit">
									<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@SpecialIncludingTheftTotAmtInsuranceToUse" Order="DataDefInputParamConstant" />
								</rul:Arg>
								<rul:Arg Type="string" Param="causeOfLoss">
									<rul:Constant Type="string">Other Cause Of Loss</rul:Constant>
								</rul:Arg>
							</rul:RunRule>
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:When>
					<rul:Test>
						<rul:Or>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@Deductible" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">250</rul:Constant>
							</rul:Equal>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@TheftDeductible" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">250</rul:Constant>
							</rul:Equal>
						</rul:Or>
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:RunRule Type="decimal" ToDataDef="@DeductibleFactorSpecial" FileName="CommercialPropertySpecialClassRules" Rule="LookupDeductible250Factor" ClearCache="true">
								<rul:Arg Type="string" Param="causeOfLoss">
									<rul:Constant Type="string">Special</rul:Constant>
								</rul:Arg>
							</rul:RunRule>
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:When>
					<rul:Test>
						<rul:And>
							<rul:NotEqual>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@Deductible" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">250</rul:Constant>
							</rul:NotEqual>
							<rul:NotEqual>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@Deductible" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string"></rul:Constant>
							</rul:NotEqual>
						</rul:And>
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:RunRule Type="decimal" ToDataDef="@DeductibleFactorSpecial" FileName="CommercialPropertySpecialClassRules" Rule="LookupDeductibleFactor" ClearCache="true">
								<rul:Arg Type="string" Param="ded">
									<rul:FirstValue Type="string" FromConstant="" FromDataDef="@Deductible" Order="DataDefInputParamConstant" />
								</rul:Arg>
								<rul:Arg Type="integer" Param="limit">
									<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@SpecialTotAmtInsuranceToUse" Order="DataDefInputParamConstant" />
								</rul:Arg>
								<rul:Arg Type="string" Param="causeOfLoss">
									<rul:Constant Type="string">Other Cause Of Loss</rul:Constant>
								</rul:Arg>
							</rul:RunRule>
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:Otherwise>
					<rul:Sequence>
						<rul:Constant Type="decimal" ToDataDef="@DeductibleFactorSpecial">0.0</rul:Constant>
					</rul:Sequence>
				</rul:Otherwise>
			</rul:Choose>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetFinalSpecialRate" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:WithArgs>
				<rul:Arg Type="decimal" Param="calcFinalSpecialRate">
					<rul:FirstNonNull Type="decimal">
						<rul:Product DecimalPlaces="3">
							<rul:Product DecimalPlaces="3">
								<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@AdjustedSpecialRate" Order="DataDefInputParamConstant" />
								<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@DeductibleByLocationFactor" Order="DataDefInputParamConstant" />
							</rul:Product>
							<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@DeductibleFactorSpecial" Order="DataDefInputParamConstant" />
						</rul:Product>
						<rul:Constant Type="decimal">0</rul:Constant>
					</rul:FirstNonNull>
				</rul:Arg>
				<rul:Value Type="decimal" ToDataDef="@FinalSpecialRate" FromParam="calcFinalSpecialRate" />
			</rul:WithArgs>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetEQRatesAndFactors" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetEQBaseRate" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetEQRate" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetEQCauseOfLossAdjustment" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetEQCoinsuranceFactor" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetAdjustedEQRate" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetEQSubLimitPercent" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetEQDeductibleFactor" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetFinalEQRate" ClearCache="true" />
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetEQBaseRate" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:NotEqual>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string"></rul:Constant>
						</rul:NotEqual>
						<rul:NotEqual>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQTerr" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string"></rul:Constant>
						</rul:NotEqual>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:RunRule Type="decimal" ToDataDef="@EQBaseRate" FileName="CommercialPropertySpecialClassRules" Rule="LookupEQLossCostBldg" ClearCache="true" />
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Constant Type="decimal" ToDataDef="@EQBaseRate">0.0</rul:Constant>
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetEQRate" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Product ToDataDef="@EQRate" DecimalPlaces="3">
				<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@EQBaseRate" Order="DataDefInputParamConstant" />
				<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@LossCostMultiplier" Order="DataDefInputParamConstant" />
			</rul:Product>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetEQCauseOfLossAdjustment" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:Equal>
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQCovIndicator" Order="DataDefInputParamConstant" />
						<rul:Constant Type="string">No Coverage</rul:Constant>
					</rul:Equal>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:Constant Type="decimal" ToDataDef="@EQCauseOfLossAdjustment">0.0</rul:Constant>
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Copy Type="decimal" ToDataDef="@EQCauseOfLossAdjustment" FromDataDef="@EQRate" />
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetEQCoinsuranceFactor" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Choose>
				<rul:When>
					<rul:Test>
						<rul:Or>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQCoinsurance" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">80%</rul:Constant>
							</rul:Equal>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQCoinsurance" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">90%</rul:Constant>
							</rul:Equal>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQCoinsurance" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">100%</rul:Constant>
							</rul:Equal>
						</rul:Or>
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:RunRule Type="decimal" ToDataDef="@EQCoinsuranceFactor" FileName="CommercialPropertySpecialClassRules" Rule="LookupEQCoinsuranceFactor" ClearCache="true" />
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:When>
					<rul:Test>
						<rul:Or>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQCoinsurance" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">50%</rul:Constant>
							</rul:Equal>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQCoinsurance" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">60%</rul:Constant>
							</rul:Equal>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQCoinsurance" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">70%</rul:Constant>
							</rul:Equal>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQCoinsurance" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">None</rul:Constant>
							</rul:Equal>
						</rul:Or>
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:RunRule Type="decimal" ToDataDef="@EQCoinsuranceFactor" FileName="CommercialPropertySpecialClassRules" Rule="LookupLessThan80PctMultiplicativeFactor" ClearCache="true" />
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:Otherwise>
					<rul:Sequence>
						<rul:Constant Type="decimal" ToDataDef="@EQCoinsuranceFactor">1.0</rul:Constant>
					</rul:Sequence>
				</rul:Otherwise>
			</rul:Choose>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetAdjustedEQRate" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:Or>
						<rul:Exist AtInputDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSpecialClass" />
						<rul:Exist AtInputDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionCoverageWithFlatDollarDeductibleSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionCoverageWithFlatDollarDeductibleSpecialClass" />
					</rul:Or>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:Product ToDataDef="@AdjustedEQRate" DecimalPlaces="3">
							<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@EQCauseOfLossAdjustment" Order="DataDefInputParamConstant" />
							<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@EQCoinsuranceFactor" Order="DataDefInputParamConstant" />
						</rul:Product>
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Copy Type="decimal" ToDataDef="@AdjustedEQRate" FromDataDef="@EQCauseOfLossAdjustment" />
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetEQSubLimitPercent" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:Equal>
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQCovIndicator" Order="DataDefInputParamConstant" />
						<rul:Constant Type="string">Yes, Not Included in Blanket</rul:Constant>
					</rul:Equal>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:Choose>
							<rul:When>
								<rul:Test>
									<rul:Exist AtInputDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSubLimitFormSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSubLimitFormSpecialClass" />
								</rul:Test>
								<rul:Then>
									<rul:Sequence>
										<rul:ForEach AtDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSubLimitFormSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSubLimitFormSpecialClass">
											<rul:RunRule Type="none" FileName="CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSubLimitFormSpecialClassRules" Rule="SetSubLimitPercent" ClearCache="true" />
										</rul:ForEach>
										<rul:Copy Type="integer" ToDataDef="@EQSubLimitPercent" FromDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSubLimitFormSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSubLimitFormSpecialClass[1]/@EQSubLimitPercent" />
									</rul:Sequence>
								</rul:Then>
							</rul:When>
							<rul:When>
								<rul:Test>
									<rul:Exist AtInputDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionCoverageSubLimitFormWithFlatDollarDeductibleSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionCoverageSubLimitFormWithFlatDollarDeductibleSpecialClass" />
								</rul:Test>
								<rul:Then>
									<rul:Sequence>
										<rul:ForEach AtDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionCoverageSubLimitFormWithFlatDollarDeductibleSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionCoverageSubLimitFormWithFlatDollarDeductibleSpecialClass">
											<rul:RunRule Type="none" FileName="CommercialPropertyEarthquakeAndVolcanicEruptionCoverageSubLimitFormWithFlatDollarDeductibleSpecialClassRules" Rule="SetSubLimitPercent" ClearCache="true" />
										</rul:ForEach>
										<rul:Copy Type="integer" ToDataDef="@EQSubLimitPercent" FromDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionCoverageSubLimitFormWithFlatDollarDeductibleSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionCoverageSubLimitFormWithFlatDollarDeductibleSpecialClass[1]/@EQSubLimitPercent" />
									</rul:Sequence>
								</rul:Then>
							</rul:When>
							<rul:Otherwise>
								<rul:Sequence>
									<rul:Constant Type="integer" ToDataDef="@EQSubLimitPercent">0</rul:Constant>
								</rul:Sequence>
							</rul:Otherwise>
						</rul:Choose>
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Constant Type="integer" ToDataDef="@EQSubLimitPercent">0</rul:Constant>
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetEQDeductibleFactor" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Choose>
				<rul:When>
					<rul:Test>
						<rul:And>
							<rul:Exist AtInputDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionCoverageWithFlatDollarDeductibleSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionCoverageWithFlatDollarDeductibleSpecialClass" />
							<rul:NotEqual>
								<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQDeductibleTier" Order="DataDefInputParamConstant" />
								<rul:Constant Type="integer">0</rul:Constant>
							</rul:NotEqual>
							<rul:NotEqual>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string"></rul:Constant>
							</rul:NotEqual>
							<rul:NotEqual>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string"></rul:Constant>
							</rul:NotEqual>
							<rul:NotEqual>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Not Applicable</rul:Constant>
							</rul:NotEqual>
							<rul:NotEqual>
								<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="../../@EarthquakeTotalPropertyValue" Order="DataDefInputParamConstant" />
								<rul:Constant Type="integer">0</rul:Constant>
							</rul:NotEqual>
						</rul:And>
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:RunRule Type="decimal" ToDataDef="@EQDeductibleFactor" FileName="CommercialPropertySpecialClassRules" Rule="LookupEQFlatDeductibleFactor" ClearCache="true" />
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:When>
					<rul:Test>
						<rul:And>
							<rul:Exist AtInputDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSpecialClass" />
							<rul:NotEqual>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string"></rul:Constant>
							</rul:NotEqual>
							<rul:NotEqual>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string"></rul:Constant>
							</rul:NotEqual>
							<rul:NotEqual>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Not Applicable</rul:Constant>
							</rul:NotEqual>
							<rul:NotEqual>
								<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQDeductibleTier" Order="DataDefInputParamConstant" />
								<rul:Constant Type="integer">0</rul:Constant>
							</rul:NotEqual>
						</rul:And>
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:RunRule Type="decimal" ToDataDef="@EQDeductibleFactor" FileName="CommercialPropertySpecialClassRules" Rule="LookupEQPercentageDeductibleFactor" ClearCache="true" />
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:When>
					<rul:Test>
						<rul:And>
							<rul:Exist AtInputDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionCoverageSubLimitFormWithFlatDollarDeductibleSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionCoverageSubLimitFormWithFlatDollarDeductibleSpecialClass" />
							<rul:GreaterThan>
								<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQSubLimitPercent" Order="DataDefInputParamConstant" />
								<rul:Constant Type="integer">0</rul:Constant>
							</rul:GreaterThan>
							<rul:LessThanOrEqual>
								<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQSubLimitPercent" Order="DataDefInputParamConstant" />
								<rul:Constant Type="integer">75</rul:Constant>
							</rul:LessThanOrEqual>
							<rul:NotEqual>
								<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQDeductibleTier" Order="DataDefInputParamConstant" />
								<rul:Constant Type="integer">0</rul:Constant>
							</rul:NotEqual>
							<rul:NotEqual>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string"></rul:Constant>
							</rul:NotEqual>
							<rul:NotEqual>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string"></rul:Constant>
							</rul:NotEqual>
							<rul:NotEqual>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Not Applicable</rul:Constant>
							</rul:NotEqual>
							<rul:NotEqual>
								<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="../../@EarthquakeTotalPropertyValue" Order="DataDefInputParamConstant" />
								<rul:Constant Type="integer">0</rul:Constant>
							</rul:NotEqual>
						</rul:And>
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:Choose>
								<rul:When>
									<rul:Test>
										<rul:Equal>
											<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
											<rul:Constant Type="string">500</rul:Constant>
										</rul:Equal>
									</rul:Test>
									<rul:Then>
										<rul:Sequence>
											<rul:RunRule Type="decimal" ToDataDef="@EQDeductibleFactor" FileName="CommercialPropertySpecialClassRules" Rule="LookupEQSubLimit500FlatDeductibleFactor" ClearCache="true" />
										</rul:Sequence>
									</rul:Then>
								</rul:When>
								<rul:When>
									<rul:Test>
										<rul:Equal>
											<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
											<rul:Constant Type="string">1,000</rul:Constant>
										</rul:Equal>
									</rul:Test>
									<rul:Then>
										<rul:Sequence>
											<rul:RunRule Type="decimal" ToDataDef="@EQDeductibleFactor" FileName="CommercialPropertySpecialClassRules" Rule="LookupEQSubLimit1000FlatDeductibleFactor" ClearCache="true" />
										</rul:Sequence>
									</rul:Then>
								</rul:When>
								<rul:When>
									<rul:Test>
										<rul:Equal>
											<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
											<rul:Constant Type="string">2,500</rul:Constant>
										</rul:Equal>
									</rul:Test>
									<rul:Then>
										<rul:Sequence>
											<rul:RunRule Type="decimal" ToDataDef="@EQDeductibleFactor" FileName="CommercialPropertySpecialClassRules" Rule="LookupEQSubLimit2500FlatDeductibleFactor" ClearCache="true" />
										</rul:Sequence>
									</rul:Then>
								</rul:When>
								<rul:When>
									<rul:Test>
										<rul:Equal>
											<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
											<rul:Constant Type="string">5,000</rul:Constant>
										</rul:Equal>
									</rul:Test>
									<rul:Then>
										<rul:Sequence>
											<rul:RunRule Type="decimal" ToDataDef="@EQDeductibleFactor" FileName="CommercialPropertySpecialClassRules" Rule="LookupEQSubLimit5000FlatDeductibleFactor" ClearCache="true" />
										</rul:Sequence>
									</rul:Then>
								</rul:When>
								<rul:When>
									<rul:Test>
										<rul:Equal>
											<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
											<rul:Constant Type="string">10,000</rul:Constant>
										</rul:Equal>
									</rul:Test>
									<rul:Then>
										<rul:Sequence>
											<rul:RunRule Type="decimal" ToDataDef="@EQDeductibleFactor" FileName="CommercialPropertySpecialClassRules" Rule="LookupEQSubLimit10000FlatDeductibleFactor" ClearCache="true" />
										</rul:Sequence>
									</rul:Then>
								</rul:When>
								<rul:When>
									<rul:Test>
										<rul:Equal>
											<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
											<rul:Constant Type="string">25,000</rul:Constant>
										</rul:Equal>
									</rul:Test>
									<rul:Then>
										<rul:Sequence>
											<rul:RunRule Type="decimal" ToDataDef="@EQDeductibleFactor" FileName="CommercialPropertySpecialClassRules" Rule="LookupEQSubLimit25000FlatDeductibleFactor" ClearCache="true" />
										</rul:Sequence>
									</rul:Then>
								</rul:When>
								<rul:When>
									<rul:Test>
										<rul:Equal>
											<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
											<rul:Constant Type="string">50,000</rul:Constant>
										</rul:Equal>
									</rul:Test>
									<rul:Then>
										<rul:Sequence>
											<rul:RunRule Type="decimal" ToDataDef="@EQDeductibleFactor" FileName="CommercialPropertySpecialClassRules" Rule="LookupEQSubLimit50000FlatDeductibleFactor" ClearCache="true" />
										</rul:Sequence>
									</rul:Then>
								</rul:When>
								<rul:When>
									<rul:Test>
										<rul:Equal>
											<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
											<rul:Constant Type="string">75,000</rul:Constant>
										</rul:Equal>
									</rul:Test>
									<rul:Then>
										<rul:Sequence>
											<rul:RunRule Type="decimal" ToDataDef="@EQDeductibleFactor" FileName="CommercialPropertySpecialClassRules" Rule="LookupEQSubLimit75000FlatDeductibleFactor" ClearCache="true" />
										</rul:Sequence>
									</rul:Then>
								</rul:When>
								<rul:When>
									<rul:Test>
										<rul:Equal>
											<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
											<rul:Constant Type="string">100,000</rul:Constant>
										</rul:Equal>
									</rul:Test>
									<rul:Then>
										<rul:Sequence>
											<rul:RunRule Type="decimal" ToDataDef="@EQDeductibleFactor" FileName="CommercialPropertySpecialClassRules" Rule="LookupEQSubLimit100000FlatDeductibleFactor" ClearCache="true" />
										</rul:Sequence>
									</rul:Then>
								</rul:When>
								<rul:When>
									<rul:Test>
										<rul:Equal>
											<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
											<rul:Constant Type="string">250,000</rul:Constant>
										</rul:Equal>
									</rul:Test>
									<rul:Then>
										<rul:Sequence>
											<rul:RunRule Type="decimal" ToDataDef="@EQDeductibleFactor" FileName="CommercialPropertySpecialClassRules" Rule="LookupEQSubLimit250000FlatDeductibleFactor" ClearCache="true" />
										</rul:Sequence>
									</rul:Then>
								</rul:When>
								<rul:When>
									<rul:Test>
										<rul:Equal>
											<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
											<rul:Constant Type="string">500,000</rul:Constant>
										</rul:Equal>
									</rul:Test>
									<rul:Then>
										<rul:Sequence>
											<rul:RunRule Type="decimal" ToDataDef="@EQDeductibleFactor" FileName="CommercialPropertySpecialClassRules" Rule="LookupEQSubLimit500000FlatDeductibleFactor" ClearCache="true" />
										</rul:Sequence>
									</rul:Then>
								</rul:When>
								<rul:When>
									<rul:Test>
										<rul:Equal>
											<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
											<rul:Constant Type="string">750,000</rul:Constant>
										</rul:Equal>
									</rul:Test>
									<rul:Then>
										<rul:Sequence>
											<rul:RunRule Type="decimal" ToDataDef="@EQDeductibleFactor" FileName="CommercialPropertySpecialClassRules" Rule="LookupEQSubLimit750000FlatDeductibleFactor" ClearCache="true" />
										</rul:Sequence>
									</rul:Then>
								</rul:When>
								<rul:When>
									<rul:Test>
										<rul:Equal>
											<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
											<rul:Constant Type="string">1,000,000</rul:Constant>
										</rul:Equal>
									</rul:Test>
									<rul:Then>
										<rul:Sequence>
											<rul:RunRule Type="decimal" ToDataDef="@EQDeductibleFactor" FileName="CommercialPropertySpecialClassRules" Rule="LookupEQSubLimit1000000FlatDeductibleFactor" ClearCache="true" />
										</rul:Sequence>
									</rul:Then>
								</rul:When>
							</rul:Choose>
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:When>
					<rul:Test>
						<rul:And>
							<rul:Exist AtInputDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSubLimitFormSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSubLimitFormSpecialClass" />
							<rul:GreaterThan>
								<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQSubLimitPercent" Order="DataDefInputParamConstant" />
								<rul:Constant Type="integer">0</rul:Constant>
							</rul:GreaterThan>
							<rul:LessThanOrEqual>
								<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQSubLimitPercent" Order="DataDefInputParamConstant" />
								<rul:Constant Type="integer">75</rul:Constant>
							</rul:LessThanOrEqual>
							<rul:NotEqual>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string"></rul:Constant>
							</rul:NotEqual>
							<rul:NotEqual>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string"></rul:Constant>
							</rul:NotEqual>
							<rul:NotEqual>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Not Applicable</rul:Constant>
							</rul:NotEqual>
							<rul:NotEqual>
								<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQDeductibleTier" Order="DataDefInputParamConstant" />
								<rul:Constant Type="integer">0</rul:Constant>
							</rul:NotEqual>
						</rul:And>
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:Choose>
								<rul:When>
									<rul:Test>
										<rul:Or>
											<rul:Equal>
												<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
												<rul:Constant Type="string">1C</rul:Constant>
											</rul:Equal>
											<rul:Equal>
												<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
												<rul:Constant Type="string">1D</rul:Constant>
											</rul:Equal>
											<rul:Equal>
												<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
												<rul:Constant Type="string">2A</rul:Constant>
											</rul:Equal>
											<rul:Equal>
												<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
												<rul:Constant Type="string">2B</rul:Constant>
											</rul:Equal>
											<rul:Equal>
												<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
												<rul:Constant Type="string">3A</rul:Constant>
											</rul:Equal>
											<rul:Equal>
												<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
												<rul:Constant Type="string">3B</rul:Constant>
											</rul:Equal>
											<rul:Equal>
												<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
												<rul:Constant Type="string">4A</rul:Constant>
											</rul:Equal>
										</rul:Or>
									</rul:Test>
									<rul:Then>
										<rul:Sequence>
											<rul:Choose>
												<rul:When>
													<rul:Test>
														<rul:Equal>
															<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQDeductibleTier" Order="DataDefInputParamConstant" />
															<rul:Constant Type="integer">1</rul:Constant>
														</rul:Equal>
													</rul:Test>
													<rul:Then>
														<rul:Sequence>
															<rul:RunRule Type="decimal" ToDataDef="@EQDeductibleFactor" FileName="CommercialPropertySpecialClassRules" Rule="LookupEQSubLimitDeductibleTier1Table1" ClearCache="true" />
														</rul:Sequence>
													</rul:Then>
												</rul:When>
												<rul:When>
													<rul:Test>
														<rul:Equal>
															<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQDeductibleTier" Order="DataDefInputParamConstant" />
															<rul:Constant Type="integer">2</rul:Constant>
														</rul:Equal>
													</rul:Test>
													<rul:Then>
														<rul:Sequence>
															<rul:RunRule Type="decimal" ToDataDef="@EQDeductibleFactor" FileName="CommercialPropertySpecialClassRules" Rule="LookupEQSubLimitDeductibleTier2Table3" ClearCache="true" />
														</rul:Sequence>
													</rul:Then>
												</rul:When>
												<rul:When>
													<rul:Test>
														<rul:Equal>
															<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQDeductibleTier" Order="DataDefInputParamConstant" />
															<rul:Constant Type="integer">3</rul:Constant>
														</rul:Equal>
													</rul:Test>
													<rul:Then>
														<rul:Sequence>
															<rul:RunRule Type="decimal" ToDataDef="@EQDeductibleFactor" FileName="CommercialPropertySpecialClassRules" Rule="LookupEQSubLimitDeductibleTier3Table5" ClearCache="true" />
														</rul:Sequence>
													</rul:Then>
												</rul:When>
											</rul:Choose>
										</rul:Sequence>
									</rul:Then>
								</rul:When>
								<rul:When>
									<rul:Test>
										<rul:Or>
											<rul:Equal>
												<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
												<rul:Constant Type="string">3C</rul:Constant>
											</rul:Equal>
											<rul:Equal>
												<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
												<rul:Constant Type="string">4B</rul:Constant>
											</rul:Equal>
											<rul:Equal>
												<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
												<rul:Constant Type="string">4C</rul:Constant>
											</rul:Equal>
											<rul:Equal>
												<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
												<rul:Constant Type="string">4D</rul:Constant>
											</rul:Equal>
											<rul:Equal>
												<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
												<rul:Constant Type="string">5A</rul:Constant>
											</rul:Equal>
											<rul:Equal>
												<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
												<rul:Constant Type="string">5B</rul:Constant>
											</rul:Equal>
											<rul:Equal>
												<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
												<rul:Constant Type="string">5C</rul:Constant>
											</rul:Equal>
											<rul:Equal>
												<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
												<rul:Constant Type="string">5AA</rul:Constant>
											</rul:Equal>
										</rul:Or>
									</rul:Test>
									<rul:Then>
										<rul:Sequence>
											<rul:Choose>
												<rul:When>
													<rul:Test>
														<rul:Equal>
															<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQDeductibleTier" Order="DataDefInputParamConstant" />
															<rul:Constant Type="integer">1</rul:Constant>
														</rul:Equal>
													</rul:Test>
													<rul:Then>
														<rul:Sequence>
															<rul:RunRule Type="decimal" ToDataDef="@EQDeductibleFactor" FileName="CommercialPropertySpecialClassRules" Rule="LookupEQSubLimitDeductibleTier1Table2" ClearCache="true" />
														</rul:Sequence>
													</rul:Then>
												</rul:When>
												<rul:When>
													<rul:Test>
														<rul:Equal>
															<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQDeductibleTier" Order="DataDefInputParamConstant" />
															<rul:Constant Type="integer">2</rul:Constant>
														</rul:Equal>
													</rul:Test>
													<rul:Then>
														<rul:Sequence>
															<rul:RunRule Type="decimal" ToDataDef="@EQDeductibleFactor" FileName="CommercialPropertySpecialClassRules" Rule="LookupEQSubLimitDeductibleTier2Table4" ClearCache="true" />
														</rul:Sequence>
													</rul:Then>
												</rul:When>
												<rul:When>
													<rul:Test>
														<rul:Equal>
															<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQDeductibleTier" Order="DataDefInputParamConstant" />
															<rul:Constant Type="integer">3</rul:Constant>
														</rul:Equal>
													</rul:Test>
													<rul:Then>
														<rul:Sequence>
															<rul:RunRule Type="decimal" ToDataDef="@EQDeductibleFactor" FileName="CommercialPropertySpecialClassRules" Rule="LookupEQSubLimitDeductibleTier3Table6" ClearCache="true" />
														</rul:Sequence>
													</rul:Then>
												</rul:When>
											</rul:Choose>
										</rul:Sequence>
									</rul:Then>
								</rul:When>
							</rul:Choose>
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:Otherwise>
					<rul:Sequence>
						<rul:Constant Type="decimal" ToDataDef="@EQDeductibleFactor">0.0</rul:Constant>
					</rul:Sequence>
				</rul:Otherwise>
			</rul:Choose>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetFinalEQRate" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Product ToDataDef="@FinalEQRate" DecimalPlaces="3">
				<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@AdjustedEQRate" Order="DataDefInputParamConstant" />
				<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@EQDeductibleFactor" Order="DataDefInputParamConstant" />
			</rul:Product>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetBlanketValues" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:Equal>
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@BlktIDNum" Order="DataDefInputParamConstant" />
						<rul:Constant Type="integer">0</rul:Constant>
					</rul:Equal>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:Constant Type="string" ToDataDef="@BlktCauseOfLossValue">Not Applicable</rul:Constant>
						<rul:Constant Type="string" ToDataDef="@BlktCoinsuranceValue">Not Applicable</rul:Constant>
						<rul:Constant Type="string" ToDataDef="@BlktRadioactiveContaminationValue">Not Applicable</rul:Constant>
						<rul:Constant Type="integer" ToDataDef="@BlktTotalFullValueAmount">0</rul:Constant>
						<rul:Constant Type="integer" ToDataDef="@BlktLimit">0</rul:Constant>
						<rul:Constant Type="decimal" ToDataDef="@BlktRadioactiveContaminationAvgRate">0.0</rul:Constant>
						<rul:Constant Type="decimal" ToDataDef="@BlktBasicGroupIAvgRate">0.0</rul:Constant>
						<rul:Constant Type="decimal" ToDataDef="@BlktBasicGroupIIAvgRate">0.0</rul:Constant>
						<rul:Constant Type="decimal" ToDataDef="@BlktBroadAvgRate">0.0</rul:Constant>
						<rul:Constant Type="decimal" ToDataDef="@BlktSpecialAvgRate">0.0</rul:Constant>
						<rul:Constant Type="decimal" ToDataDef="@BlktBasicGroupIAvgRateAgreedVal">0.0</rul:Constant>
						<rul:Constant Type="decimal" ToDataDef="@BlktBasicGroupIIAvgRateAgreedVal">0.0</rul:Constant>
						<rul:Constant Type="decimal" ToDataDef="@BlktBroadAvgRateAgreedVal">0.0</rul:Constant>
						<rul:Constant Type="decimal" ToDataDef="@BlktSpecialAvgRateAgreedVal">0.0</rul:Constant>
						<rul:Constant Type="string" ToDataDef="@BlktType">Not Applicable</rul:Constant>
						<rul:Constant Type="string" ToDataDef="@BlktAgreedVal">Not Applicable</rul:Constant>
						<rul:Constant Type="string" ToDataDef="@BlktInflationGuard">Not Applicable</rul:Constant>
						<rul:Constant Type="string" ToDataDef="@BlktEQCauseOfLossIncludedInBlkt">No</rul:Constant>
						<rul:Constant Type="decimal" ToDataDef="@BlktProportion">0.0</rul:Constant>
					</rul:Sequence>
				</rul:Then>
			</rul:If>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Equal>
							<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQCauseOfLossCovBlktIDNum" Order="DataDefInputParamConstant" />
							<rul:Constant Type="integer">0</rul:Constant>
						</rul:Equal>
						<rul:Or>
							<rul:NotExist AtInputDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSpecialClass" />
							<rul:NotExist AtInputDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionCoverageWithFlatDollarDeductibleSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionCoverageWithFlatDollarDeductibleSpecialClass" />
						</rul:Or>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:Constant Type="string" ToDataDef="@BlktEQCoinsuranceValue">Not Applicable</rul:Constant>
						<rul:Constant Type="integer" ToDataDef="@BlktEQTotalFullValueAmount">0</rul:Constant>
						<rul:Constant Type="integer" ToDataDef="@BlktEQLimit">0</rul:Constant>
						<rul:Constant Type="decimal" ToDataDef="@BlktEQAvgRate">0.0</rul:Constant>
						<rul:Constant Type="decimal" ToDataDef="@BlktEQAvgRateAgreedVal">0.0</rul:Constant>
						<rul:Constant Type="string" ToDataDef="@BlktTypeEQ">Not Applicable</rul:Constant>
						<rul:Constant Type="string" ToDataDef="@BlktEQAgreedVal">Not Applicable</rul:Constant>
						<rul:Constant Type="string" ToDataDef="@BlktEQInflationGuard">Not Applicable</rul:Constant>
						<rul:Constant Type="string" ToDataDef="@BlktEQCauseOfLossIncludedInEQBlkt">No</rul:Constant>
					</rul:Sequence>
				</rul:Then>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetLimitsToUse" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetLimitToUse" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetEQLimitToUse" ClearCache="true" />
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetLimitToUse" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Choose>
				<rul:When>
					<rul:Test>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@IncludedInBlkt" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">No</rul:Constant>
						</rul:Equal>
					</rul:Test>
					<rul:Then>
						<rul:Copy Type="integer" ToDataDef="@LimitToUse" FromDataDef="@Limit" />
					</rul:Then>
				</rul:When>
				<rul:When>
					<rul:Test>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@IncludedInBlkt" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Yes</rul:Constant>
						</rul:Equal>
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:Choose>
								<rul:When>
									<rul:Test>
										<rul:GreaterThan>
											<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@BlktTotalFullValueAmount" Order="DataDefInputParamConstant" />
											<rul:Constant Type="integer">0</rul:Constant>
										</rul:GreaterThan>
									</rul:Test>
									<rul:Then>
										<rul:Sequence>
											<rul:Convert Type="integer" ToDataDef="@LimitToUse">
												<rul:Product DecimalPlaces="0">
													<rul:Divide>
														<rul:Convert Type="decimal">
															<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@FullSpecialClassValue" Order="DataDefInputParamConstant" />
														</rul:Convert>
														<rul:Convert Type="decimal">
															<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@BlktTotalFullValueAmount" Order="DataDefInputParamConstant" />
														</rul:Convert>
													</rul:Divide>
													<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@BlktLimit" Order="DataDefInputParamConstant" />
												</rul:Product>
											</rul:Convert>
										</rul:Sequence>
									</rul:Then>
								</rul:When>
								<rul:When>
									<rul:Test>
										<rul:LessThanOrEqual>
											<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@BlktTotalFullValueAmount" Order="DataDefInputParamConstant" />
											<rul:Constant Type="integer">0</rul:Constant>
										</rul:LessThanOrEqual>
									</rul:Test>
									<rul:Then>
										<rul:Sequence>
											<rul:Constant Type="integer" ToDataDef="@LimitToUse">0</rul:Constant>
										</rul:Sequence>
									</rul:Then>
								</rul:When>
							</rul:Choose>
						</rul:Sequence>
					</rul:Then>
				</rul:When>
			</rul:Choose>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetEQLimitToUse" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Choose>
				<rul:When>
					<rul:Test>
						<rul:And>
							<rul:Exist AtInputDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSubLimitFormSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSubLimitFormSpecialClass" />
							<rul:IsNotNull>
								<rul:Value Type="integer" FromDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSubLimitFormSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSubLimitFormSpecialClass[1]/@Limit" />
							</rul:IsNotNull>
						</rul:And>
					</rul:Test>
					<rul:Then>
						<rul:Copy Type="integer" ToDataDef="@EQLimitToUse" FromDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSubLimitFormSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSubLimitFormSpecialClass[1]/@Limit" />
					</rul:Then>
				</rul:When>
				<rul:When>
					<rul:Test>
						<rul:And>
							<rul:Exist AtInputDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionCoverageSubLimitFormWithFlatDollarDeductibleSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionCoverageSubLimitFormWithFlatDollarDeductibleSpecialClass" />
							<rul:IsNotNull>
								<rul:Value Type="integer" FromDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionCoverageSubLimitFormWithFlatDollarDeductibleSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionCoverageSubLimitFormWithFlatDollarDeductibleSpecialClass[1]/@Limit" />
							</rul:IsNotNull>
						</rul:And>
					</rul:Test>
					<rul:Then>
						<rul:Copy Type="integer" ToDataDef="@EQLimitToUse" FromDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionCoverageSubLimitFormWithFlatDollarDeductibleSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionCoverageSubLimitFormWithFlatDollarDeductibleSpecialClass[1]/@Limit" />
					</rul:Then>
				</rul:When>
				<rul:When>
					<rul:Test>
						<rul:Equal>
							<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQCauseOfLossCovBlktIDNum" Order="DataDefInputParamConstant" />
							<rul:Constant Type="integer">0</rul:Constant>
						</rul:Equal>
					</rul:Test>
					<rul:Then>
						<rul:Copy Type="integer" ToDataDef="@EQLimitToUse" FromDataDef="@Limit" />
					</rul:Then>
				</rul:When>
				<rul:When>
					<rul:Test>
						<rul:GreaterThan>
							<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQCauseOfLossCovBlktIDNum" Order="DataDefInputParamConstant" />
							<rul:Constant Type="integer">0</rul:Constant>
						</rul:GreaterThan>
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:Choose>
								<rul:When>
									<rul:Test>
										<rul:GreaterThan>
											<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@BlktEQTotalFullValueAmount" Order="DataDefInputParamConstant" />
											<rul:Constant Type="integer">0</rul:Constant>
										</rul:GreaterThan>
									</rul:Test>
									<rul:Then>
										<rul:Sequence>
											<rul:Convert Type="integer" ToDataDef="@EQLimitToUse">
												<rul:Product DecimalPlaces="0">
													<rul:Divide>
														<rul:Convert Type="decimal">
															<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@FullSpecialClassValue" Order="DataDefInputParamConstant" />
														</rul:Convert>
														<rul:Convert Type="decimal">
															<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@BlktEQTotalFullValueAmount" Order="DataDefInputParamConstant" />
														</rul:Convert>
													</rul:Divide>
													<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@BlktEQLimit" Order="DataDefInputParamConstant" />
												</rul:Product>
											</rul:Convert>
										</rul:Sequence>
									</rul:Then>
								</rul:When>
								<rul:When>
									<rul:Test>
										<rul:LessThanOrEqual>
											<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@BlktEQTotalFullValueAmount" Order="DataDefInputParamConstant" />
											<rul:Constant Type="integer">0</rul:Constant>
										</rul:LessThanOrEqual>
									</rul:Test>
									<rul:Then>
										<rul:Sequence>
											<rul:Constant Type="integer" ToDataDef="@EQLimitToUse">0</rul:Constant>
										</rul:Sequence>
									</rul:Then>
								</rul:When>
							</rul:Choose>
						</rul:Sequence>
					</rul:Then>
				</rul:When>
			</rul:Choose>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetProtectionClassFactor" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:NotEqual>
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="../../@ProtectClass" Order="DataDefInputParamConstant" />
						<rul:Constant Type="string"></rul:Constant>
					</rul:NotEqual>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:RunRule Type="decimal" ToDataDef="@ProtectionClassFactor" FileName="CommercialPropertySpecialClassRules" Rule="LookupProtectionClassFactor" ClearCache="true" />
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Constant Type="decimal" ToDataDef="@ProtectionClassFactor">0.0</rul:Constant>
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetTerrorismSublimitPct" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:Or>
						<rul:Exist AtInputDataDef="ancestor::CommercialProperty/CommercialPropertyLimitationOfCoverageForCertifiedActsOfTerrorismSubLimitOnAnnualAggregateBasisTable/CommercialPropertyLimitationOfCoverageForCertifiedActsOfTerrorismSubLimitOnAnnualAggregateBasis" />
						<rul:Exist AtInputDataDef="ancestor::CommercialProperty/CommercialPropertyLmtnOfCoverageForTerrsmSubLimitOnAnnualAggregateBasisEndtIL0032Table/CommercialPropertyLmtnOfCoverageForTerrsmSubLimitOnAnnualAggregateBasisEndtIL0032" />
					</rul:Or>
				</rul:Test>
				<rul:Then>
					<rul:Copy Type="integer" ToDataDef="@TerrorismSubLimitPct" FromDataDef="@TerrorismSubLimit" />
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Constant Type="integer" ToDataDef="@TerrorismSubLimitPct">100</rul:Constant>
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetTerrorismConditionalSublimitPct" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:Exist AtInputDataDef="ancestor::CommercialProperty/CommercialPropertyConditionalLmtnOfCovForTerrsmSubLimitOnAnnualAggregateBasisIL0997Table/CommercialPropertyConditionalLmtnOfCovForTerrsmSubLimitOnAnnualAggregateBasisIL0997" />
				</rul:Test>
				<rul:Then>
					<rul:Copy Type="integer" ToDataDef="@TerrorismConditionalSubLimitPct" FromDataDef="@TerrorismSubLimit" />
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Constant Type="integer" ToDataDef="@TerrorismConditionalSubLimitPct">100</rul:Constant>
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetTerrorismSublimitFactor" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:Or>
						<rul:Exist AtInputDataDef="ancestor::CommercialProperty/CommercialPropertyLimitationOfCoverageForCertifiedActsOfTerrorismSubLimitOnAnnualAggregateBasisTable/CommercialPropertyLimitationOfCoverageForCertifiedActsOfTerrorismSubLimitOnAnnualAggregateBasis" />
						<rul:Exist AtInputDataDef="ancestor::CommercialProperty/CommercialPropertyLmtnOfCoverageForTerrsmSubLimitOnAnnualAggregateBasisEndtIL0032Table/CommercialPropertyLmtnOfCoverageForTerrsmSubLimitOnAnnualAggregateBasisEndtIL0032" />
						<rul:Exist AtInputDataDef="ancestor::CommercialProperty/CommercialPropertyConditionalLmtnOfCovForTerrsmSubLimitOnAnnualAggregateBasisIL0997Table/CommercialPropertyConditionalLmtnOfCovForTerrsmSubLimitOnAnnualAggregateBasisIL0997" />
					</rul:Or>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:If>
							<rul:Test>
								<rul:And>
									<rul:GreaterThanOrEqual>
										<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@TerrorismSubLimit" Order="DataDefInputParamConstant" />
										<rul:Constant Type="integer">5</rul:Constant>
									</rul:GreaterThanOrEqual>
									<rul:LessThanOrEqual>
										<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@TerrorismSubLimit" Order="DataDefInputParamConstant" />
										<rul:Constant Type="integer">100</rul:Constant>
									</rul:LessThanOrEqual>
								</rul:And>
							</rul:Test>
							<rul:Then>
								<rul:Sequence>
									<rul:Round ToDataDef="@TerrorismSubLimitFactor" DecimalPlaces="3">
										<rul:RunRule Type="decimal" FileName="CommercialPropertySpecialClassRules" Rule="LookupTerrorismSubLimitFactor" ClearCache="true" />
									</rul:Round>
								</rul:Sequence>
							</rul:Then>
							<rul:Else>
								<rul:Sequence>
									<rul:Constant Type="decimal" ToDataDef="@TerrorismSubLimitFactor">0.0</rul:Constant>
								</rul:Sequence>
							</rul:Else>
						</rul:If>
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Constant Type="decimal" ToDataDef="@TerrorismSubLimitFactor">1.0</rul:Constant>
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetTRIAExclFactor" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Choose>
				<rul:When>
					<rul:Test>
						<rul:Exist AtInputDataDef="ancestor::CommercialProperty/CommercialPropertyCapOnLossesFromCertifiedActsOfTerrorismTable/CommercialPropertyCapOnLossesFromCertifiedActsOfTerrorism" />
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:Constant Type="decimal" ToDataDef="@TRIAExclFactor">1.0</rul:Constant>
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:When>
					<rul:Test>
						<rul:Exist AtInputDataDef="ancestor::CommercialProperty/CommercialPropertyExclCertfdActsTerrsmCovFireLossesTable/CommercialPropertyExclCertfdActsTerrsmCovFireLosses" />
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:Constant Type="decimal" ToDataDef="@TRIAExclFactor">0.0</rul:Constant>
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:When>
					<rul:Test>
						<rul:Exist AtInputDataDef="ancestor::CommercialProperty/CommercialPropertyExclCertfdActsOfTerrsmInvolvingNuclearBiologicalChmclTerrsmCapOnCovdCertfdActsLossesTable/CommercialPropertyExclCertfdActsOfTerrsmInvolvingNuclearBiologicalChmclTerrsmCapOnCovdCertfdActsLosses" />
					</rul:Test>
					<rul:Then>
						<rul:Copy Type="decimal" ToDataDef="@TRIAExclFactor" FromDataDef="ancestor::CommercialPropertyLocation/@TerrorismNBCExclFactor" />
					</rul:Then>
				</rul:When>
				<rul:When>
					<rul:Test>
						<rul:Exist AtInputDataDef="ancestor::CommercialProperty/CommercialPropertyLimitationOfCoverageForCertifiedActsOfTerrorismSubLimitOnAnnualAggregateBasisTable/CommercialPropertyLimitationOfCoverageForCertifiedActsOfTerrorismSubLimitOnAnnualAggregateBasis" />
					</rul:Test>
					<rul:Then>
						<rul:Copy Type="decimal" ToDataDef="@TRIAExclFactor" FromDataDef="@TerrorismSubLimitFactor" />
					</rul:Then>
				</rul:When>
				<rul:Otherwise>
					<rul:Sequence>
						<rul:Constant Type="decimal" ToDataDef="@TRIAExclFactor">0.0</rul:Constant>
					</rul:Sequence>
				</rul:Otherwise>
			</rul:Choose>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetTerrorismCondExclFactor" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Choose>
				<rul:When>
					<rul:Test>
						<rul:Exist AtInputDataDef="ancestor::CommercialProperty/CommercialPropertyConditionalExclusionOfTerrorismEndorsementIL0995Table/CommercialPropertyConditionalExclusionOfTerrorismEndorsementIL0995" />
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:Constant Type="decimal" ToDataDef="@TerrorismCondExclFactor">0.0</rul:Constant>
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:When>
					<rul:Test>
						<rul:Exist AtInputDataDef="ancestor::CommercialProperty/CommercialPropertyConditionalExclOfTerrsmInvolvingNuclearBiolgclOrChemicalTerrsmIL0996Table/CommercialPropertyConditionalExclOfTerrsmInvolvingNuclearBiolgclOrChemicalTerrsmIL0996" />
					</rul:Test>
					<rul:Then>
						<rul:Copy Type="decimal" ToDataDef="@TerrorismCondExclFactor" FromDataDef="ancestor::CommercialPropertyLocation/@TerrorismNBCExclFactor" />
					</rul:Then>
				</rul:When>
				<rul:When>
					<rul:Test>
						<rul:Exist AtInputDataDef="ancestor::CommercialProperty/CommercialPropertyConditionalLmtnOfCovForTerrsmSubLimitOnAnnualAggregateBasisIL0997Table/CommercialPropertyConditionalLmtnOfCovForTerrsmSubLimitOnAnnualAggregateBasisIL0997" />
					</rul:Test>
					<rul:Then>
						<rul:Copy Type="decimal" ToDataDef="@TerrorismCondExclFactor" FromDataDef="@TerrorismSubLimitFactor" />
					</rul:Then>
				</rul:When>
				<rul:Otherwise>
					<rul:Sequence>
						<rul:Constant Type="decimal" ToDataDef="@TerrorismCondExclFactor">1.0</rul:Constant>
					</rul:Sequence>
				</rul:Otherwise>
			</rul:Choose>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetPostTRIAExclFactor" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Choose>
				<rul:When>
					<rul:Test>
						<rul:Exist AtInputDataDef="ancestor::CommercialProperty/CommercialPropertyExclusionOfTerrorismEndorsementIL0030Table/CommercialPropertyExclusionOfTerrorismEndorsementIL0030" />
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:Constant Type="decimal" ToDataDef="@PostTRIAExclFactor">0.0</rul:Constant>
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:When>
					<rul:Test>
						<rul:Exist AtInputDataDef="ancestor::CommercialProperty/CommercialPropertyExclOfTerrsmInvolvingNuclearBiologicalOrChemicalTerrsmEndtIL0031Table/CommercialPropertyExclOfTerrsmInvolvingNuclearBiologicalOrChemicalTerrsmEndtIL0031" />
					</rul:Test>
					<rul:Then>
						<rul:Copy Type="decimal" ToDataDef="@PostTRIAExclFactor" FromDataDef="ancestor::CommercialPropertyLocation/@TerrorismNBCExclFactor" />
					</rul:Then>
				</rul:When>
				<rul:When>
					<rul:Test>
						<rul:Exist AtInputDataDef="ancestor::CommercialProperty/CommercialPropertyLmtnOfCoverageForTerrsmSubLimitOnAnnualAggregateBasisEndtIL0032Table/CommercialPropertyLmtnOfCoverageForTerrsmSubLimitOnAnnualAggregateBasisEndtIL0032" />
					</rul:Test>
					<rul:Then>
						<rul:Copy Type="decimal" ToDataDef="@PostTRIAExclFactor" FromDataDef="@TerrorismSubLimitFactor" />
					</rul:Then>
				</rul:When>
				<rul:Otherwise>
					<rul:Sequence>
						<rul:Constant Type="decimal" ToDataDef="@PostTRIAExclFactor">1.0</rul:Constant>
					</rul:Sequence>
				</rul:Otherwise>
			</rul:Choose>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetTRIAExclusionRate" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:Or>
						<rul:Exist AtInputDataDef="ancestor::CommercialProperty/CommercialPropertyCapOnLossesFromCertifiedActsOfTerrorismTable/CommercialPropertyCapOnLossesFromCertifiedActsOfTerrorism" />
						<rul:Exist AtInputDataDef="ancestor::CommercialProperty/CommercialPropertyExclCertfdActsTerrsmCovFireLossesTable/CommercialPropertyExclCertfdActsTerrsmCovFireLosses" />
						<rul:Exist AtInputDataDef="ancestor::CommercialProperty/CommercialPropertyExclCertfdActsOfTerrsmInvolvingNuclearBiologicalChmclTerrsmCapOnCovdCertfdActsLossesTable/CommercialPropertyExclCertfdActsOfTerrsmInvolvingNuclearBiologicalChmclTerrsmCapOnCovdCertfdActsLosses" />
						<rul:Exist AtInputDataDef="ancestor::CommercialProperty/CommercialPropertyLimitationOfCoverageForCertifiedActsOfTerrorismSubLimitOnAnnualAggregateBasisTable/CommercialPropertyLimitationOfCoverageForCertifiedActsOfTerrorismSubLimitOnAnnualAggregateBasis" />
					</rul:Or>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:Product ToDataDef="@TRIAExclusionRate" DecimalPlaces="4">
							<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="ancestor::CommercialPropertyLocation/@TerrorismLossCostProgramYear3" Order="DataDefInputParamConstant" />
							<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@TRIAExclFactor" Order="DataDefInputParamConstant" />
						</rul:Product>
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Constant Type="decimal" ToDataDef="@TRIAExclusionRate">0.0</rul:Constant>
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetConditionalTerrorRate" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:Or>
						<rul:Exist AtInputDataDef="ancestor::CommercialProperty/CommercialPropertyConditionalExclusionOfTerrorismEndorsementIL0995Table/CommercialPropertyConditionalExclusionOfTerrorismEndorsementIL0995" />
						<rul:Exist AtInputDataDef="ancestor::CommercialProperty/CommercialPropertyConditionalExclOfTerrsmInvolvingNuclearBiolgclOrChemicalTerrsmIL0996Table/CommercialPropertyConditionalExclOfTerrsmInvolvingNuclearBiolgclOrChemicalTerrsmIL0996" />
						<rul:Exist AtInputDataDef="ancestor::CommercialProperty/CommercialPropertyConditionalLmtnOfCovForTerrsmSubLimitOnAnnualAggregateBasisIL0997Table/CommercialPropertyConditionalLmtnOfCovForTerrsmSubLimitOnAnnualAggregateBasisIL0997" />
					</rul:Or>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:Product ToDataDef="@ConditionalTerrorRate" DecimalPlaces="4">
							<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="ancestor::CommercialPropertyLocation/@TerrorismLossCostProgramYear3" Order="DataDefInputParamConstant" />
							<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@TerrorismCondExclFactor" Order="DataDefInputParamConstant" />
						</rul:Product>
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Product ToDataDef="@ConditionalTerrorRate" DecimalPlaces="4">
							<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="ancestor::CommercialPropertyLocation/@TerrorismLossCostFull" Order="DataDefInputParamConstant" />
							<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@TerrorismCondExclFactor" Order="DataDefInputParamConstant" />
						</rul:Product>
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetPostTRIAExclusionRate" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:Or>
						<rul:Exist AtInputDataDef="ancestor::CommercialProperty/CommercialPropertyExclusionOfTerrorismEndorsementIL0030Table/CommercialPropertyExclusionOfTerrorismEndorsementIL0030" />
						<rul:Exist AtInputDataDef="ancestor::CommercialProperty/CommercialPropertyExclOfTerrsmInvolvingNuclearBiologicalOrChemicalTerrsmEndtIL0031Table/CommercialPropertyExclOfTerrsmInvolvingNuclearBiologicalOrChemicalTerrsmEndtIL0031" />
						<rul:Exist AtInputDataDef="ancestor::CommercialProperty/CommercialPropertyLmtnOfCoverageForTerrsmSubLimitOnAnnualAggregateBasisEndtIL0032Table/CommercialPropertyLmtnOfCoverageForTerrsmSubLimitOnAnnualAggregateBasisEndtIL0032" />
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="ancestor::CommercialProperty/@PostTRIAExclusion" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">No Exclusion</rul:Constant>
						</rul:Equal>
					</rul:Or>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:Product ToDataDef="@PostTRIAExclusionRate" DecimalPlaces="4">
							<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="ancestor::CommercialPropertyLocation/@TerrorismLossCostFull" Order="DataDefInputParamConstant" />
							<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@PostTRIAExclFactor" Order="DataDefInputParamConstant" />
						</rul:Product>
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Constant Type="decimal" ToDataDef="@PostTRIAExclusionRate">0.0</rul:Constant>
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="ErcRate" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetTotalSpecialClassCoveragePremium" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetTotalAgreedValuePremium" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetTotalInflationGuardPremium" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetPreTRIAPremium" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetPostTRIAPremium" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetTerrorismPremium" ClearCache="true" />
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetTotalSpecialClassCoveragePremium" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:WithArgs>
				<rul:Arg Type="decimal" Param="calcTotalSpecialClassCoveragePremium">
					<rul:FirstNonNull Type="decimal">
						<rul:Sum>
							<rul:Value Type="decimal" FromDataDef="CommercialPropertySpecialClassBasicGroupICoverage/@Premium" />
							<rul:Value Type="decimal" FromDataDef="CommercialPropertySpecialClassBasicGroupIICoverage/@Premium" />
							<rul:Value Type="decimal" FromDataDef="CommercialPropertySpecialClassBroadCoverage/@Premium" />
							<rul:Value Type="decimal" FromDataDef="CommercialPropertySpecialClassSpecialCoverage/@Premium" />
						</rul:Sum>
						<rul:Constant Type="decimal">0</rul:Constant>
					</rul:FirstNonNull>
				</rul:Arg>
				<rul:Value Type="decimal" ToDataDef="@TotalSpecialClassCoveragePremium" FromParam="calcTotalSpecialClassCoveragePremium" />
			</rul:WithArgs>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetTotalAgreedValuePremium" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:WithArgs>
				<rul:Arg Type="decimal" Param="calcTotalAgreedValuePremium">
					<rul:FirstNonNull Type="decimal">
						<rul:Sum>
							<rul:Value Type="decimal" FromDataDef="CommercialPropertySpecialClassAgreedValBasicGroupICoverage/@Premium" />
							<rul:Value Type="decimal" FromDataDef="CommercialPropertySpecialClassAgreedValBasicGroupIICoverage/@Premium" />
							<rul:Value Type="decimal" FromDataDef="CommercialPropertySpecialClassAgreedValBroadCoverage/@Premium" />
							<rul:Value Type="decimal" FromDataDef="CommercialPropertySpecialClassAgreedValSpecialCoverage/@Premium" />
							<rul:Value Type="decimal" FromDataDef="CommercialPropertySpecialClassAgreedValEarthquakeCoverage/@Premium" />
						</rul:Sum>
						<rul:Constant Type="decimal">0</rul:Constant>
					</rul:FirstNonNull>
				</rul:Arg>
				<rul:Value Type="decimal" ToDataDef="@TotalAgreedValuePremium" FromParam="calcTotalAgreedValuePremium" />
			</rul:WithArgs>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetTotalInflationGuardPremium" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:WithArgs>
				<rul:Arg Type="decimal" Param="calcTotalInflationGuardPremium">
					<rul:FirstNonNull Type="decimal">
						<rul:Sum>
							<rul:Value Type="decimal" FromDataDef="CommercialPropertySpecialClassInflationGuardBasicGroupICoverage/@Premium" />
							<rul:Value Type="decimal" FromDataDef="CommercialPropertySpecialClassInflationGuardBasicGroupIICoverage/@Premium" />
							<rul:Value Type="decimal" FromDataDef="CommercialPropertySpecialClassInflationGuardBroadCoverage/@Premium" />
							<rul:Value Type="decimal" FromDataDef="CommercialPropertySpecialClassInflationGuardSpecialCoverage/@Premium" />
							<rul:Value Type="decimal" FromDataDef="CommercialPropertySpecialClassInflationGuardEarthquakeCoverage/@Premium" />
						</rul:Sum>
						<rul:Constant Type="decimal">0</rul:Constant>
					</rul:FirstNonNull>
				</rul:Arg>
				<rul:Value Type="decimal" ToDataDef="@TotalInflationGuardPremium" FromParam="calcTotalInflationGuardPremium" />
			</rul:WithArgs>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetPreTRIAPremium" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:Exist AtInputDataDef="ancestor::CommercialProperty/CommercialPropertyZzDisclosureOfPremiumEstimatedPremiumCertifiedActsTerrorismPursuantTerrorismAct2002Table/CommercialPropertyZzDisclosureOfPremiumEstimatedPremiumCertifiedActsTerrorismPursuantTerrorismAct2002" />
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:If>
							<rul:Test>
								<rul:And>
									<rul:IsNotNull>
										<rul:Value Type="string" FromDataDef="@TerrorismOverride" />
									</rul:IsNotNull>
									<rul:Equal>
										<rul:FirstValue Type="string" FromConstant="" FromDataDef="@TerrorismOverride" Order="DataDefInputParamConstant" />
										<rul:Constant Type="string">Yes</rul:Constant>
									</rul:Equal>
								</rul:And>
							</rul:Test>
							<rul:Then>
								<rul:Sequence>
									<rul:Product ToDataDef="@PreTRIAPremium" DecimalPlaces="0">
										<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@TerrorOverridePremium" Order="DataDefInputParamConstant" />
										<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="ancestor::CommercialProperty/@TerrorismProratingProgYr3Factor" Order="DataDefInputParamConstant" />
									</rul:Product>
								</rul:Sequence>
							</rul:Then>
							<rul:Else>
								<rul:Sequence>
									<rul:Product ToDataDef="@PreTRIAPremium" DecimalPlaces="0">
										<rul:Product DecimalPlaces="4">
											<rul:Product DecimalPlaces="4">
												<rul:Divide>
													<rul:Value Type="integer" FromDataDef="@LimitToUse" />
													<rul:Constant Type="decimal">100</rul:Constant>
												</rul:Divide>
												<rul:Divide>
													<rul:Value Type="integer" FromDataDef="@TerrorismSubLimitPct" />
													<rul:Constant Type="decimal">100</rul:Constant>
												</rul:Divide>
												<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@TRIAExclusionRate" Order="DataDefInputParamConstant" />
												<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="ancestor::CommercialProperty/@TerrorismProratingProgYr3Factor" Order="DataDefInputParamConstant" />
											</rul:Product>
											<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@CoinsuranceFactor" Order="DataDefInputParamConstant" />
										</rul:Product>
										<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@DeductibleFactorBasicGroupI" Order="DataDefInputParamConstant" />
									</rul:Product>
								</rul:Sequence>
							</rul:Else>
						</rul:If>
					</rul:Sequence>
				</rul:Then>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetPostTRIAPremium" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:Exist AtInputDataDef="ancestor::CommercialProperty/CommercialPropertyZzDisclosureOfPremiumEstimatedPremiumCertifiedActsTerrorismPursuantTerrorismAct2002Table/CommercialPropertyZzDisclosureOfPremiumEstimatedPremiumCertifiedActsTerrorismPursuantTerrorismAct2002" />
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:If>
							<rul:Test>
								<rul:And>
									<rul:IsNotNull>
										<rul:Value Type="string" FromDataDef="@TerrorismOverride" />
									</rul:IsNotNull>
									<rul:Equal>
										<rul:FirstValue Type="string" FromConstant="" FromDataDef="@TerrorismOverride" Order="DataDefInputParamConstant" />
										<rul:Constant Type="string">Yes</rul:Constant>
									</rul:Equal>
								</rul:And>
							</rul:Test>
							<rul:Then>
								<rul:Sequence>
									<rul:Product ToDataDef="@PostTRIAPremium" DecimalPlaces="0">
										<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@TerrorOverridePremium" Order="DataDefInputParamConstant" />
										<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="ancestor::CommercialProperty/@TerrorismProratingFullFactor" Order="DataDefInputParamConstant" />
									</rul:Product>
								</rul:Sequence>
							</rul:Then>
							<rul:Else>
								<rul:Sequence>
									<rul:Product ToDataDef="@PostTRIAPremium" DecimalPlaces="0">
										<rul:Product DecimalPlaces="4">
											<rul:Product DecimalPlaces="4">
												<rul:Divide>
													<rul:Value Type="integer" FromDataDef="@LimitToUse" />
													<rul:Constant Type="decimal">100</rul:Constant>
												</rul:Divide>
												<rul:Divide>
													<rul:Value Type="integer" FromDataDef="@TerrorismConditionalSubLimitPct" />
													<rul:Constant Type="decimal">100</rul:Constant>
												</rul:Divide>
												<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@ConditionalTerrorRate" Order="DataDefInputParamConstant" />
												<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="ancestor::CommercialProperty/@TerrorismProratingFullFactor" Order="DataDefInputParamConstant" />
											</rul:Product>
											<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@CoinsuranceFactor" Order="DataDefInputParamConstant" />
										</rul:Product>
										<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@DeductibleFactorBasicGroupI" Order="DataDefInputParamConstant" />
									</rul:Product>
								</rul:Sequence>
							</rul:Else>
						</rul:If>
					</rul:Sequence>
				</rul:Then>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetTerrorismPremium" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Choose>
				<rul:When>
					<rul:Test>
						<rul:And>
							<rul:IsNotNull>
								<rul:Value Type="string" FromDataDef="@TerrorismOverride" />
							</rul:IsNotNull>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@TerrorismOverride" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Yes</rul:Constant>
							</rul:Equal>
						</rul:And>
					</rul:Test>
					<rul:Then>
						<rul:Copy Type="decimal" ToDataDef="@TerrorismPremium" FromDataDef="@TerrorOverridePremium" />
					</rul:Then>
				</rul:When>
				<rul:When>
					<rul:Test>
						<rul:Exist AtInputDataDef="ancestor::CommercialProperty/CommercialPropertyZzDisclosurePursuantToTerrorismRiskInsAct2002Table/CommercialPropertyZzDisclosurePursuantToTerrorismRiskInsAct2002" />
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:Product ToDataDef="@TerrorismPremium" DecimalPlaces="0">
								<rul:Product DecimalPlaces="4">
									<rul:Product DecimalPlaces="4">
										<rul:Divide>
											<rul:Value Type="integer" FromDataDef="@LimitToUse" />
											<rul:Constant Type="decimal">100</rul:Constant>
										</rul:Divide>
										<rul:Divide>
											<rul:Value Type="integer" FromDataDef="@TerrorismSubLimitPct" />
											<rul:Constant Type="decimal">100</rul:Constant>
										</rul:Divide>
										<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@TRIAExclusionRate" Order="DataDefInputParamConstant" />
									</rul:Product>
									<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@CoinsuranceFactor" Order="DataDefInputParamConstant" />
								</rul:Product>
								<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@DeductibleFactorBasicGroupI" Order="DataDefInputParamConstant" />
							</rul:Product>
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:When>
					<rul:Test>
						<rul:Exist AtInputDataDef="ancestor::CommercialProperty/CommercialPropertyZzDisclosureOfPremiumThrough123105CertifiedActsTerrorismPursuantTerrorismAct2002Table/CommercialPropertyZzDisclosureOfPremiumThrough123105CertifiedActsTerrorismPursuantTerrorismAct2002" />
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:Product ToDataDef="@TerrorismPremium" DecimalPlaces="0">
								<rul:Product DecimalPlaces="4">
									<rul:Product DecimalPlaces="4">
										<rul:Divide>
											<rul:Value Type="integer" FromDataDef="@LimitToUse" />
											<rul:Constant Type="decimal">100</rul:Constant>
										</rul:Divide>
										<rul:Divide>
											<rul:Value Type="integer" FromDataDef="@TerrorismSubLimitPct" />
											<rul:Constant Type="decimal">100</rul:Constant>
										</rul:Divide>
										<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@TRIAExclusionRate" Order="DataDefInputParamConstant" />
										<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="ancestor::CommercialProperty/@TerrorismProratingProgYr3Factor" Order="DataDefInputParamConstant" />
									</rul:Product>
									<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@CoinsuranceFactor" Order="DataDefInputParamConstant" />
								</rul:Product>
								<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@DeductibleFactorBasicGroupI" Order="DataDefInputParamConstant" />
							</rul:Product>
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:When>
					<rul:Test>
						<rul:Exist AtInputDataDef="ancestor::CommercialProperty/CommercialPropertyZzDisclosureOfPremiumEstimatedPremiumCertifiedActsTerrorismPursuantTerrorismAct2002Table/CommercialPropertyZzDisclosureOfPremiumEstimatedPremiumCertifiedActsTerrorismPursuantTerrorismAct2002" />
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:Round ToDataDef="@TerrorismPremium" DecimalPlaces="0">
								<rul:Sum>
									<rul:Value Type="decimal" FromDataDef="@PreTRIAPremium" />
									<rul:Value Type="decimal" FromDataDef="@PostTRIAPremium" />
								</rul:Sum>
							</rul:Round>
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:When>
					<rul:Test>
						<rul:Or>
							<rul:Exist AtInputDataDef="ancestor::CommercialProperty/CommercialPropertyExclusionOfTerrorismEndorsementIL0030Table/CommercialPropertyExclusionOfTerrorismEndorsementIL0030" />
							<rul:Exist AtInputDataDef="ancestor::CommercialProperty/CommercialPropertyExclOfTerrsmInvolvingNuclearBiologicalOrChemicalTerrsmEndtIL0031Table/CommercialPropertyExclOfTerrsmInvolvingNuclearBiologicalOrChemicalTerrsmEndtIL0031" />
							<rul:Exist AtInputDataDef="ancestor::CommercialProperty/CommercialPropertyLmtnOfCoverageForTerrsmSubLimitOnAnnualAggregateBasisEndtIL0032Table/CommercialPropertyLmtnOfCoverageForTerrsmSubLimitOnAnnualAggregateBasisEndtIL0032" />
							<rul:And>
								<rul:Equal>
									<rul:FirstValue Type="string" FromConstant="" FromDataDef="ancestor::CommercialProperty/@TRIAType" Order="DataDefInputParamConstant" />
									<rul:Constant Type="string">Has Already Expired, Use Post-TRIA Forms</rul:Constant>
								</rul:Equal>
								<rul:Equal>
									<rul:FirstValue Type="string" FromConstant="" FromDataDef="ancestor::CommercialProperty/@PostTRIAExclusion" Order="DataDefInputParamConstant" />
									<rul:Constant Type="string">No Exclusion</rul:Constant>
								</rul:Equal>
							</rul:And>
						</rul:Or>
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:Product ToDataDef="@TerrorismPremium" DecimalPlaces="0">
								<rul:Product DecimalPlaces="4">
									<rul:Product DecimalPlaces="4">
										<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@PostTRIAExclusionRate" Order="DataDefInputParamConstant" />
										<rul:Divide>
											<rul:Value Type="integer" FromDataDef="@LimitToUse" />
											<rul:Constant Type="decimal">100</rul:Constant>
										</rul:Divide>
										<rul:Divide>
											<rul:Value Type="integer" FromDataDef="@TerrorismSubLimitPct" />
											<rul:Constant Type="decimal">100</rul:Constant>
										</rul:Divide>
									</rul:Product>
									<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@CoinsuranceFactor" Order="DataDefInputParamConstant" />
								</rul:Product>
								<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@DeductibleFactorBasicGroupI" Order="DataDefInputParamConstant" />
							</rul:Product>
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:Otherwise>
					<rul:Sequence>
						<rul:Constant Type="decimal" ToDataDef="@TerrorismPremium">0.0</rul:Constant>
					</rul:Sequence>
				</rul:Otherwise>
			</rul:Choose>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="ErcRunPostUnderwritingLogic" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="DoMessageCP1035IsNotValidWithTheSelectedCauseOfLoss" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="DoMessageCP1410IsRequiredWithCP1035" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="DoMessageValidTypeRequiredForCP1410AndCP1035combination" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="DoMessageCP1055IsNotValidWithTheStandardPropertyPolicy" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="DoMessageCP1070NotValidWithSelectedCauseOfLoss" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="DoMessageMinimumLimitOf100000IsRequiredForThe1PctWindstormHailPercentageDeductible" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="DoMessageMinimumLimitOf50000IsRequiredForThe2PctWindstormHailPercentageDeductible" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="DoMessageMinimumLimitOf20000IsRequiredForThe5PctWindstormHailPercentageDeductible" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="DoMessageCP1035NotValidWithTheStandardPropertyPolicy" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="DoMessageInvalidBlanketTypeForBlanketIDNumberEntered" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="DoMessagePleaseEnterAValidBlanketIDNumber" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="DoMessagePleaseEnterAValidBlanketIDNumberForEQCoverage" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="DoMessageBlanketIDNumberEnteredContainsNoEQBlanketCoverage" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="DoMessagePleaseEnterAValidEQSubLimitBlanketIDNumber" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="DoMessageEQSubLimitBlanketIDNumberEnteredContainsNoSpecialClassCoverage" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="DoMessageCP1045NotValidWhenNoEarthquakeSublimitBlanketsHaveBeenDefined" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="DoMessageCP1029NotValidWhenNoEarthquakeSublimitBlanketsHaveBeenDefined" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="DoMessageAnEQBlanketIDNumberIsRequiredWithTheSelectedOtherThanEQBlanket" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="DoMessageBlanketIDNumberOtherThanEQAndEQCauseOfLossBlanketIDNumbersMustBeTheSameForSelectedBlanket" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="DoMessagePleaseEnterABlanketIDNumberOtherThanEQThatIsNotAnEarthquakeOnlyBlanket" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="DoMessageLimitonCP1038MustNotBeGreaterThanSpecialClassLimit" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="DoMessageCP1054NotValidWhenWindstormOrHailDeductibleIsSelected" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="DoMessageInvalidEQBlanketTypeForBlanketIDNumberEntered" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="DoMessageCP1037LimitedOptionIsNotValidWithSelectedCauseOfLoss" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="DoMessageCP1037LimitNotRequired" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="DoMessageCP1037LimitRequired" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="DoMessageMissingRequiredRateForCP1037" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="DoMessageCP0415IsNotValidWithBlanketRating" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="DoMessageDebrisRemovalAdditionalInsuranceMustHaveGreaterLimit" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="DoMessageSelectAValidTheftDeductibleWithTheftCoverageIncluded" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="DoMessageSubLimitCannotExceedTheCoveragesLimit" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="DoMessageCP0402IsNotValidWithTheStandardPropertyPolicy" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="DoMessageGreenUpgradesLimitExceedsTheSelectedPercentageOfTheApplicableLimit" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="DoMessageCP0402IsNotApplicableWithoutReplacementCostCoverageSelected" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="DoMessageCP0409IsNotValidWithTheValuesSelected" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="DoMessageAgreedValueForEarthquakeCoverageDoesNotApplyWhenIsProvidedOnASubLimitBasisCP1045" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="DoMessageAgreedValueForEarthquakeCoverageDoesNotApplyWhenIsProvidedOnASubLimitBasisCP1029" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="DoMessageFormCP0414CannotBeAttachedWhenCauseOfLossIsDifferentThanSpecial" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="DoMessageFloodConstructionTypesNeedToBeSameInSpecialClassLevelAndItsSpecialClassBusinessIncomeLevel" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="DoMessageThisSpecialClassRiskCannotBeAssociatedWithABuildingWhenThereIsNoBuildingAttachedToThePolicy" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="DoMessageTheBuildingIDNumberEnteredDoesNotCorrespondToAnyBuildingUnitNumberUnderTheSameLocation" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="DoMesssageOnlyOneExclusionFormForCannabisCanApplyToTheRisk" ClearCache="true" />
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="DoMessageInvalidEQBlanketTypeForBlanketIDNumberEntered" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQCovIndicator" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Yes, Included in Blanket</rul:Constant>
						</rul:Equal>
						<rul:Or>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="../../@EQCauseOfLossForm" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Earthquake Form (CP 10 40)</rul:Constant>
							</rul:Equal>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="../../@EQCauseOfLossForm" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Earthquake Form (CP 10 28)</rul:Constant>
							</rul:Equal>
						</rul:Or>
						<rul:NotEqual>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@BlktTypeEQ" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Building Only</rul:Constant>
						</rul:NotEqual>
						<rul:NotEqual>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@BlktTypeEQ" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Building &amp; Personal Property Combined</rul:Constant>
						</rul:NotEqual>
						<rul:NotEqual>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@BlktTypeEQ" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Personal Property Only</rul:Constant>
						</rul:NotEqual>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="../../../../@BlktRated" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Yes</rul:Constant>
						</rul:Equal>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:RunRule Type="none" FileName="MessageHelper" Rule="AddErrorMessage" ClearCache="true">
						<rul:Arg Type="string" Param="Message">
							<rul:Constant Type="string">Invalid EQ blanket type for Blanket ID number entered</rul:Constant>
						</rul:Arg>
					</rul:RunRule>
				</rul:Then>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="DoMessageCP1037LimitedOptionIsNotValidWithSelectedCauseOfLoss" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Exist AtInputDataDef="CommercialPropertyRadioactiveContaminationSpecialClassTable/CommercialPropertyRadioactiveContaminationSpecialClass" />
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="CommercialPropertyRadioactiveContaminationSpecialClassTable/CommercialPropertyRadioactiveContaminationSpecialClass[1]/@TypeOfCov" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Limited</rul:Constant>
						</rul:Equal>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@CauseOfLossToUse" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Special</rul:Constant>
						</rul:Equal>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:RunRule Type="none" FileName="MessageHelper" Rule="AddErrorMessage" ClearCache="true">
						<rul:Arg Type="string" Param="Message">
							<rul:Constant Type="string">CP 10 37 Limited option is  not valid with selected Cause of Loss</rul:Constant>
						</rul:Arg>
					</rul:RunRule>
				</rul:Then>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="DoMessageCP1037LimitNotRequired" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:Or>
						<rul:And>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@IncludedInBlkt" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">No</rul:Constant>
							</rul:Equal>
							<rul:Exist AtInputDataDef="CommercialPropertyRadioactiveContaminationSpecialClassTable/CommercialPropertyRadioactiveContaminationSpecialClass" />
							<rul:NotEqual>
								<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="CommercialPropertyRadioactiveContaminationSpecialClassTable/CommercialPropertyRadioactiveContaminationSpecialClass[1]/@Limit" Order="DataDefInputParamConstant" />
								<rul:Constant Type="integer">0</rul:Constant>
							</rul:NotEqual>
						</rul:And>
						<rul:And>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@BlktRadioactiveContaminationValue" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Yes</rul:Constant>
							</rul:Equal>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@IncludedInBlkt" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Yes</rul:Constant>
							</rul:Equal>
							<rul:Exist AtInputDataDef="CommercialPropertyRadioactiveContaminationSpecialClassTable/CommercialPropertyRadioactiveContaminationSpecialClass" />
							<rul:NotEqual>
								<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="CommercialPropertyRadioactiveContaminationSpecialClassTable/CommercialPropertyRadioactiveContaminationSpecialClass[1]/@Limit" Order="DataDefInputParamConstant" />
								<rul:Constant Type="integer">0</rul:Constant>
							</rul:NotEqual>
						</rul:And>
					</rul:Or>
				</rul:Test>
				<rul:Then>
					<rul:RunRule Type="none" FileName="MessageHelper" Rule="AddErrorMessage" ClearCache="true">
						<rul:Arg Type="string" Param="Message">
							<rul:Constant Type="string">CP 10 37 Limit not required</rul:Constant>
						</rul:Arg>
					</rul:RunRule>
				</rul:Then>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="DoMessageCP1037LimitRequired" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:NotEqual>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@BlktRadioactiveContaminationValue" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Yes</rul:Constant>
						</rul:NotEqual>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@IncludedInBlkt" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Yes</rul:Constant>
						</rul:Equal>
						<rul:Exist AtInputDataDef="CommercialPropertyRadioactiveContaminationSpecialClassTable/CommercialPropertyRadioactiveContaminationSpecialClass" />
						<rul:Equal>
							<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="CommercialPropertyRadioactiveContaminationSpecialClassTable/CommercialPropertyRadioactiveContaminationSpecialClass[1]/@Limit" Order="DataDefInputParamConstant" />
							<rul:Constant Type="integer">0</rul:Constant>
						</rul:Equal>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:RunRule Type="none" FileName="MessageHelper" Rule="AddErrorMessage" ClearCache="true">
						<rul:Arg Type="string" Param="Message">
							<rul:Constant Type="string">CP 10 37 Limit required</rul:Constant>
						</rul:Arg>
					</rul:RunRule>
				</rul:Then>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="DoMessageMissingRequiredRateForCP1037" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@BlktRadioactiveContaminationValue" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Yes</rul:Constant>
						</rul:Equal>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@IncludedInBlkt" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Yes</rul:Constant>
						</rul:Equal>
						<rul:Exist AtInputDataDef="CommercialPropertyRadioactiveContaminationSpecialClassTable/CommercialPropertyRadioactiveContaminationSpecialClass" />
						<rul:Equal>
							<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="CommercialPropertyRadioactiveContaminationSpecialClassTable/CommercialPropertyRadioactiveContaminationSpecialClass[1]/@Rate" Order="DataDefInputParamConstant" />
							<rul:Constant Type="decimal">0</rul:Constant>
						</rul:Equal>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:RunRule Type="none" FileName="MessageHelper" Rule="AddErrorMessage" ClearCache="true">
						<rul:Arg Type="string" Param="Message">
							<rul:Constant Type="string">Missing required Rate for CP 10 37</rul:Constant>
						</rul:Arg>
					</rul:RunRule>
				</rul:Then>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="DoMessageCP0415IsNotValidWithBlanketRating" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Exist AtInputDataDef="CommercialPropertyDebrisRemovalAdditionalInsuranceSpecialClassTable/CommercialPropertyDebrisRemovalAdditionalInsuranceSpecialClass" />
						<rul:Or>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@IncludedInBlkt" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Yes</rul:Constant>
							</rul:Equal>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQCovIndicator" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Yes, Included in Blanket</rul:Constant>
							</rul:Equal>
						</rul:Or>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:RunRule Type="none" FileName="MessageHelper" Rule="AddErrorMessage" ClearCache="true">
						<rul:Arg Type="string" Param="Message">
							<rul:Constant Type="string">CP 04 15 is not valid with Blanket Rating</rul:Constant>
						</rul:Arg>
					</rul:RunRule>
				</rul:Then>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="DoMessageDebrisRemovalAdditionalInsuranceMustHaveGreaterLimit" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Exist AtInputDataDef="CommercialPropertyDebrisRemovalAdditionalInsuranceSpecialClassTable/CommercialPropertyDebrisRemovalAdditionalInsuranceSpecialClass" />
						<rul:LessThanOrEqual>
							<rul:Convert Type="decimal">
								<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="CommercialPropertyDebrisRemovalAdditionalInsuranceSpecialClassTable/CommercialPropertyDebrisRemovalAdditionalInsuranceSpecialClass[1]/@Limit" Order="DataDefInputParamConstant" />
							</rul:Convert>
							<rul:Constant Type="decimal">25000</rul:Constant>
						</rul:LessThanOrEqual>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:RunRule Type="none" FileName="MessageHelper" Rule="AddErrorMessage" ClearCache="true">
						<rul:Arg Type="string" Param="Message">
							<rul:Constant Type="string">CP 04 15 Debris Removal Additional Insurance must have a limit greater than $25,000</rul:Constant>
						</rul:Arg>
					</rul:RunRule>
				</rul:Then>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="DoMessageSelectAValidTheftDeductibleWithTheftCoverageIncluded" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@CauseOfLossToUse" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Special</rul:Constant>
						</rul:Equal>
						<rul:Equal>
							<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@SpecialTheftExclusionIndicator" Order="DataDefInputParamConstant" />
							<rul:Constant Type="integer">0</rul:Constant>
						</rul:Equal>
						<rul:Or>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@TheftDeductible" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Not Applicable</rul:Constant>
							</rul:Equal>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@TheftDeductible" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string"></rul:Constant>
							</rul:Equal>
						</rul:Or>
						<rul:NotEqual>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="ancestor::CommercialProperty/@MUBlktRated" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Yes</rul:Constant>
						</rul:NotEqual>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:RunRule Type="none" FileName="MessageHelper" Rule="AddErrorMessage" ClearCache="true">
						<rul:Arg Type="string" Param="Message">
							<rul:Constant Type="string">Select a valid Theft Deductible with Theft Coverage included</rul:Constant>
						</rul:Arg>
					</rul:RunRule>
				</rul:Then>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="DoMessageSubLimitCannotExceedTheCoveragesLimit" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:Or>
						<rul:And>
							<rul:NotEqual>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@IncludedInBlkt" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Yes</rul:Constant>
							</rul:NotEqual>
							<rul:GreaterThan>
								<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@TerrorismSubLimit" Order="DataDefInputParamConstant" />
								<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@Limit" Order="DataDefInputParamConstant" />
							</rul:GreaterThan>
						</rul:And>
						<rul:And>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@IncludedInBlkt" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Yes</rul:Constant>
							</rul:Equal>
							<rul:GreaterThan>
								<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@TerrorismSubLimit" Order="DataDefInputParamConstant" />
								<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@FullSpecialClassValue" Order="DataDefInputParamConstant" />
							</rul:GreaterThan>
						</rul:And>
					</rul:Or>
				</rul:Test>
				<rul:Then>
					<rul:RunRule Type="none" FileName="MessageHelper" Rule="AddErrorMessage" ClearCache="true">
						<rul:Arg Type="string" Param="Message">
							<rul:Constant Type="string">Sub Limit cannot exceed the coverage's limit</rul:Constant>
						</rul:Arg>
					</rul:RunRule>
				</rul:Then>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="DoMessageCP1035IsNotValidWithTheSelectedCauseOfLoss" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Exist AtInputDataDef="CommercialPropertyWatercraftExclusionSpecialClassTable/CommercialPropertyWatercraftExclusionSpecialClass" />
						<rul:NotEqual>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@CauseOfLossToUse" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Special</rul:Constant>
						</rul:NotEqual>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:RunRule Type="none" FileName="MessageHelper" Rule="AddErrorMessage" ClearCache="true">
						<rul:Arg Type="string" Param="Message">
							<rul:Constant Type="string">CP 10 35 is not valid with the selected Cause of Loss</rul:Constant>
						</rul:Arg>
					</rul:RunRule>
				</rul:Then>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="DoMessageCP1055IsNotValidWithTheStandardPropertyPolicy" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="ancestor::CommercialProperty/@PolicyType" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Standard Property Policy</rul:Constant>
						</rul:Equal>
						<rul:Exist AtInputDataDef="CommercialPropertyVandalismExclusionSpecialClassTable/CommercialPropertyVandalismExclusionSpecialClass" />
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:RunRule Type="none" FileName="MessageHelper" Rule="AddErrorMessage" ClearCache="true">
						<rul:Arg Type="string" Param="Message">
							<rul:Constant Type="string">CP 10 55 is not valid with the Standard Property Policy</rul:Constant>
						</rul:Arg>
					</rul:RunRule>
				</rul:Then>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="DoMessageCP1070NotValidWithSelectedCauseOfLoss" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Exist AtInputDataDef="CommercialPropertyPierAndWharfAdditionalCoveredCausesOfLossSpecialClassTable/CommercialPropertyPierAndWharfAdditionalCoveredCausesOfLossSpecialClass" />
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@CauseOfLossToUse" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Special</rul:Constant>
						</rul:Equal>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:RunRule Type="none" FileName="MessageHelper" Rule="AddErrorMessage" ClearCache="true">
						<rul:Arg Type="string" Param="Message">
							<rul:Constant Type="string">CP 10 70 not valid with selected Cause of Loss</rul:Constant>
						</rul:Arg>
					</rul:RunRule>
				</rul:Then>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="DoMessageMinimumLimitOf100000IsRequiredForThe1PctWindstormHailPercentageDeductible" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">1%</rul:Constant>
						</rul:Equal>
						<rul:LessThan>
							<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@WindstormOrHailTotAmtInsuranceToUse" Order="DataDefInputParamConstant" />
							<rul:Constant Type="integer">100000</rul:Constant>
						</rul:LessThan>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:RunRule Type="none" FileName="MessageHelper" Rule="AddErrorMessage" ClearCache="true">
						<rul:Arg Type="string" Param="Message">
							<rul:Constant Type="string">Minimum Limit of $100,000 is required for the 1% Windstorm/Hail Percentage deductible</rul:Constant>
						</rul:Arg>
					</rul:RunRule>
				</rul:Then>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="DoMessageMinimumLimitOf50000IsRequiredForThe2PctWindstormHailPercentageDeductible" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">2%</rul:Constant>
						</rul:Equal>
						<rul:LessThan>
							<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@WindstormOrHailTotAmtInsuranceToUse" Order="DataDefInputParamConstant" />
							<rul:Constant Type="integer">50000</rul:Constant>
						</rul:LessThan>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:RunRule Type="none" FileName="MessageHelper" Rule="AddErrorMessage" ClearCache="true">
						<rul:Arg Type="string" Param="Message">
							<rul:Constant Type="string">Minimum Limit of $50,000 is required for the 2% Windstorm/Hail Percentage deductible</rul:Constant>
						</rul:Arg>
					</rul:RunRule>
				</rul:Then>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="DoMessageMinimumLimitOf20000IsRequiredForThe5PctWindstormHailPercentageDeductible" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">5%</rul:Constant>
						</rul:Equal>
						<rul:LessThan>
							<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@WindstormOrHailTotAmtInsuranceToUse" Order="DataDefInputParamConstant" />
							<rul:Constant Type="integer">20000</rul:Constant>
						</rul:LessThan>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:RunRule Type="none" FileName="MessageHelper" Rule="AddErrorMessage" ClearCache="true">
						<rul:Arg Type="string" Param="Message">
							<rul:Constant Type="string">Minimum Limit of $20,000 is required for the 5% Windstorm/Hail Percentage deductible</rul:Constant>
						</rul:Arg>
					</rul:RunRule>
				</rul:Then>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="DoMessageCP1035NotValidWithTheStandardPropertyPolicy" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Exist AtInputDataDef="CommercialPropertyWatercraftExclusionSpecialClassTable/CommercialPropertyWatercraftExclusionSpecialClass" />
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="ancestor::CommercialProperty/@PolicyType" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Standard Property Policy</rul:Constant>
						</rul:Equal>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:RunRule Type="none" FileName="MessageHelper" Rule="AddErrorMessage" ClearCache="true">
						<rul:Arg Type="string" Param="Message">
							<rul:Constant Type="string">CP 10 35 not valid with the Standard Property Policy</rul:Constant>
						</rul:Arg>
					</rul:RunRule>
				</rul:Then>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="DoMessageInvalidBlanketTypeForBlanketIDNumberEntered" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@IncludedInBlkt" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Yes</rul:Constant>
						</rul:Equal>
						<rul:NotEqual>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@BlktType" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Building Only</rul:Constant>
						</rul:NotEqual>
						<rul:NotEqual>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@BlktType" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Building &amp; Personal Property Combined</rul:Constant>
						</rul:NotEqual>
						<rul:NotEqual>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@BlktType" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Personal Property Only</rul:Constant>
						</rul:NotEqual>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:RunRule Type="none" FileName="MessageHelper" Rule="AddErrorMessage" ClearCache="true">
						<rul:Arg Type="string" Param="Message">
							<rul:Constant Type="string">Invalid blanket type for Blanket ID number entered</rul:Constant>
						</rul:Arg>
					</rul:RunRule>
				</rul:Then>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="DoMessagePleaseEnterAValidBlanketIDNumber" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:WithArgs>
				<rul:Arg Type="integer" Param="indicatorDoMessagePleaseEnterAValidBlanketIDNumber">
					<rul:FirstNonNull Type="integer">
						<rul:If>
							<rul:Test>
								<rul:And>
									<rul:Equal>
										<rul:FirstValue Type="string" FromConstant="" FromDataDef="@IncludedInBlkt" Order="DataDefInputParamConstant" />
										<rul:Constant Type="string">Yes</rul:Constant>
									</rul:Equal>
									<rul:Exist AtInputDataDef="ancestor::CommercialProperty/CommercialPropertyBlanketRatingTable/CommercialPropertyBlanketRating[1]/CommercialPropertyBlanketRatingDetailTable/CommercialPropertyBlanketRatingDetail" />
								</rul:And>
							</rul:Test>
							<rul:Then>
								<rul:WithArgs>
									<rul:Arg Type="integer" Param="BlktIDNumParam">
										<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@BlktIDNum" Order="DataDefInputParamConstant" />
									</rul:Arg>
									<rul:Sum>
										<rul:ForEach AtDataDef="ancestor::CommercialProperty/CommercialPropertyBlanketRatingTable/CommercialPropertyBlanketRating">
											<rul:ForEach AtDataDef="CommercialPropertyBlanketRatingDetailTable/CommercialPropertyBlanketRatingDetail">
												<rul:If>
													<rul:Test>
														<rul:Equal>
															<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@UnitNumber" Order="DataDefInputParamConstant" />
															<rul:Value Type="integer" FromParam="BlktIDNumParam" />
														</rul:Equal>
													</rul:Test>
													<rul:Then>
														<rul:Sum>
															<rul:Constant Type="integer">1</rul:Constant>
															<rul:Break />
														</rul:Sum>
													</rul:Then>
												</rul:If>
											</rul:ForEach>
										</rul:ForEach>
									</rul:Sum>
								</rul:WithArgs>
							</rul:Then>
						</rul:If>
						<rul:Constant Type="integer">0</rul:Constant>
					</rul:FirstNonNull>
				</rul:Arg>
				<rul:If>
					<rul:Test>
						<rul:And>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@IncludedInBlkt" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Yes</rul:Constant>
							</rul:Equal>
							<rul:Equal>
								<rul:Value Type="integer" FromParam="indicatorDoMessagePleaseEnterAValidBlanketIDNumber" />
								<rul:Constant Type="integer">0</rul:Constant>
							</rul:Equal>
						</rul:And>
					</rul:Test>
					<rul:Then>
						<rul:RunRule Type="none" FileName="MessageHelper" Rule="AddErrorMessage" ClearCache="true">
							<rul:Arg Type="string" Param="Message">
								<rul:Constant Type="string">Please enter a valid Blanket ID number</rul:Constant>
							</rul:Arg>
						</rul:RunRule>
					</rul:Then>
				</rul:If>
			</rul:WithArgs>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="DoMessagePleaseEnterAValidEQSubLimitBlanketIDNumber" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:WithArgs>
				<rul:Arg Type="integer" Param="indicatorDoMessagePleaseEnterAValidEQSubLimitBlanketIDNumber">
					<rul:FirstNonNull Type="integer">
						<rul:If>
							<rul:Test>
								<rul:And>
									<rul:Equal>
										<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQCovIndicator" Order="DataDefInputParamConstant" />
										<rul:Constant Type="string">Yes, Included in Blanket</rul:Constant>
									</rul:Equal>
									<rul:Or>
										<rul:Exist AtInputDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSubLimitFormSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSubLimitFormSpecialClass" />
										<rul:Exist AtInputDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionCoverageSubLimitFormWithFlatDollarDeductibleSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionCoverageSubLimitFormWithFlatDollarDeductibleSpecialClass" />
									</rul:Or>
								</rul:And>
							</rul:Test>
							<rul:Then>
								<rul:WithArgs>
									<rul:Arg Type="integer" Param="EQCauseOfLossCovBlktIDNumParam">
										<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQCauseOfLossCovBlktIDNum" Order="DataDefInputParamConstant" />
									</rul:Arg>
									<rul:Sum>
										<rul:ForEach AtDataDef="ancestor::CommercialProperty/CommercialPropertyEQSubLimitBlanketRatingTable/CommercialPropertyEQSubLimitBlanketRating">
											<rul:ForEach AtDataDef="CommercialPropertyEQSubLimitBlanketRatingDetailTable/CommercialPropertyEQSubLimitBlanketRatingDetail">
												<rul:If>
													<rul:Test>
														<rul:Equal>
															<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@UnitNumber" Order="DataDefInputParamConstant" />
															<rul:Value Type="integer" FromParam="EQCauseOfLossCovBlktIDNumParam" />
														</rul:Equal>
													</rul:Test>
													<rul:Then>
														<rul:Sum>
															<rul:Constant Type="integer">1</rul:Constant>
															<rul:Break />
														</rul:Sum>
													</rul:Then>
												</rul:If>
											</rul:ForEach>
										</rul:ForEach>
									</rul:Sum>
								</rul:WithArgs>
							</rul:Then>
						</rul:If>
						<rul:Constant Type="integer">0</rul:Constant>
					</rul:FirstNonNull>
				</rul:Arg>
				<rul:If>
					<rul:Test>
						<rul:And>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQCovIndicator" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Yes, Included in Blanket</rul:Constant>
							</rul:Equal>
							<rul:Or>
								<rul:Equal>
									<rul:FirstValue Type="string" FromConstant="" FromDataDef="../../@EQCauseOfLossForm" Order="DataDefInputParamConstant" />
									<rul:Constant Type="string">Earthquake Sub-Limit Form (CP 10 45)</rul:Constant>
								</rul:Equal>
								<rul:Equal>
									<rul:FirstValue Type="string" FromConstant="" FromDataDef="../../@EQCauseOfLossForm" Order="DataDefInputParamConstant" />
									<rul:Constant Type="string">Earthquake Sub-Limit Form (CP 10 29)</rul:Constant>
								</rul:Equal>
							</rul:Or>
							<rul:Equal>
								<rul:Value Type="integer" FromParam="indicatorDoMessagePleaseEnterAValidEQSubLimitBlanketIDNumber" />
								<rul:Constant Type="integer">0</rul:Constant>
							</rul:Equal>
						</rul:And>
					</rul:Test>
					<rul:Then>
						<rul:RunRule Type="none" FileName="MessageHelper" Rule="AddErrorMessage" ClearCache="true">
							<rul:Arg Type="string" Param="Message">
								<rul:Constant Type="string">Please enter a valid EQ Sub-Limit Blanket ID number</rul:Constant>
							</rul:Arg>
						</rul:RunRule>
					</rul:Then>
				</rul:If>
			</rul:WithArgs>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="DoMessageEQSubLimitBlanketIDNumberEnteredContainsNoSpecialClassCoverage" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:WithArgs>
				<rul:Arg Type="integer" Param="unitNumberIndicatorDoMessageEQSubLimitBlanketIDNumberEnteredContainsNoSpecialClassCoverage">
					<rul:FirstNonNull Type="integer">
						<rul:If>
							<rul:Test>
								<rul:And>
									<rul:Equal>
										<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQCovIndicator" Order="DataDefInputParamConstant" />
										<rul:Constant Type="string">Yes, Included in Blanket</rul:Constant>
									</rul:Equal>
									<rul:Or>
										<rul:Exist AtInputDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSubLimitFormSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSubLimitFormSpecialClass" />
										<rul:Exist AtInputDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionCoverageSubLimitFormWithFlatDollarDeductibleSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionCoverageSubLimitFormWithFlatDollarDeductibleSpecialClass" />
									</rul:Or>
								</rul:And>
							</rul:Test>
							<rul:Then>
								<rul:WithArgs>
									<rul:Arg Type="integer" Param="EQCauseOfLossCovBlktIDNumParam">
										<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQCauseOfLossCovBlktIDNum" Order="DataDefInputParamConstant" />
									</rul:Arg>
									<rul:ForEach AtDataDef="ancestor::CommercialProperty/CommercialPropertyEQSubLimitBlanketRatingTable/CommercialPropertyEQSubLimitBlanketRating">
										<rul:ForEach AtDataDef="CommercialPropertyEQSubLimitBlanketRatingDetailTable/CommercialPropertyEQSubLimitBlanketRatingDetail">
											<rul:If>
												<rul:Test>
													<rul:Equal>
														<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@UnitNumber" Order="DataDefInputParamConstant" />
														<rul:Value Type="integer" FromParam="EQCauseOfLossCovBlktIDNumParam" />
													</rul:Equal>
												</rul:Test>
												<rul:Then>
													<rul:Sum>
														<rul:Constant Type="integer">1</rul:Constant>
														<rul:Break />
													</rul:Sum>
												</rul:Then>
											</rul:If>
										</rul:ForEach>
									</rul:ForEach>
								</rul:WithArgs>
							</rul:Then>
						</rul:If>
						<rul:Constant Type="integer">0</rul:Constant>
					</rul:FirstNonNull>
				</rul:Arg>
				<rul:Arg Type="string" Param="eqSubLimitBlanketSpecialClassCov">
					<rul:FirstNonNull Type="string">
						<rul:If>
							<rul:Test>
								<rul:And>
									<rul:Equal>
										<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQCovIndicator" Order="DataDefInputParamConstant" />
										<rul:Constant Type="string">Yes, Included in Blanket</rul:Constant>
									</rul:Equal>
									<rul:Or>
										<rul:Exist AtInputDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSubLimitFormSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSubLimitFormSpecialClass" />
										<rul:Exist AtInputDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionCoverageSubLimitFormWithFlatDollarDeductibleSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionCoverageSubLimitFormWithFlatDollarDeductibleSpecialClass" />
									</rul:Or>
								</rul:And>
							</rul:Test>
							<rul:Then>
								<rul:WithArgs>
									<rul:Arg Type="integer" Param="EQCauseOfLossCovBlktIDNumParam">
										<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQCauseOfLossCovBlktIDNum" Order="DataDefInputParamConstant" />
									</rul:Arg>
									<rul:ForEach AtDataDef="ancestor::CommercialProperty/CommercialPropertyEQSubLimitBlanketRatingTable/CommercialPropertyEQSubLimitBlanketRating">
										<rul:ForEach AtDataDef="CommercialPropertyEQSubLimitBlanketRatingDetailTable/CommercialPropertyEQSubLimitBlanketRatingDetail">
											<rul:If>
												<rul:Test>
													<rul:Equal>
														<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@UnitNumber" Order="DataDefInputParamConstant" />
														<rul:Value Type="integer" FromParam="EQCauseOfLossCovBlktIDNumParam" />
													</rul:Equal>
												</rul:Test>
												<rul:Then>
													<rul:GetList>
														<rul:FirstValue Type="string" FromConstant="" FromDataDef="@SpecialClassCov" Order="DataDefInputParamConstant" />
														<rul:Break />
													</rul:GetList>
												</rul:Then>
											</rul:If>
										</rul:ForEach>
									</rul:ForEach>
								</rul:WithArgs>
							</rul:Then>
						</rul:If>
						<rul:Constant Type="string"></rul:Constant>
					</rul:FirstNonNull>
				</rul:Arg>
				<rul:If>
					<rul:Test>
						<rul:And>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQCovIndicator" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Yes, Included in Blanket</rul:Constant>
							</rul:Equal>
							<rul:Or>
								<rul:Equal>
									<rul:FirstValue Type="string" FromConstant="" FromDataDef="../../@EQCauseOfLossForm" Order="DataDefInputParamConstant" />
									<rul:Constant Type="string">Earthquake Sub-Limit Form (CP 10 45)</rul:Constant>
								</rul:Equal>
								<rul:Equal>
									<rul:FirstValue Type="string" FromConstant="" FromDataDef="../../@EQCauseOfLossForm" Order="DataDefInputParamConstant" />
									<rul:Constant Type="string">Earthquake Sub-Limit Form (CP 10 29)</rul:Constant>
								</rul:Equal>
							</rul:Or>
							<rul:Equal>
								<rul:Value Type="integer" FromParam="unitNumberIndicatorDoMessageEQSubLimitBlanketIDNumberEnteredContainsNoSpecialClassCoverage" />
								<rul:Constant Type="integer">1</rul:Constant>
							</rul:Equal>
							<rul:NotEqual>
								<rul:Value Type="string" FromParam="eqSubLimitBlanketSpecialClassCov" />
								<rul:Constant Type="string">Yes</rul:Constant>
							</rul:NotEqual>
						</rul:And>
					</rul:Test>
					<rul:Then>
						<rul:RunRule Type="none" FileName="MessageHelper" Rule="AddErrorMessage" ClearCache="true">
							<rul:Arg Type="string" Param="Message">
								<rul:Constant Type="string">EQ Sub-Limit Blanket ID number entered contains no Special Class coverage</rul:Constant>
							</rul:Arg>
						</rul:RunRule>
					</rul:Then>
				</rul:If>
			</rul:WithArgs>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="DoMessageCP1045NotValidWhenNoEarthquakeSublimitBlanketsHaveBeenDefined" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="../../../../@EQSubLimitBlktIndicator" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">No</rul:Constant>
						</rul:Equal>
						<rul:Exist AtInputDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSubLimitFormSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSubLimitFormSpecialClass" />
						<rul:GreaterThanOrEqual>
							<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQCauseOfLossCovBlktIDNum" Order="DataDefInputParamConstant" />
							<rul:Constant Type="integer">1</rul:Constant>
						</rul:GreaterThanOrEqual>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:RunRule Type="none" FileName="MessageHelper" Rule="AddErrorMessage" ClearCache="true">
						<rul:Arg Type="string" Param="Message">
							<rul:Constant Type="string">CP 10 45 not valid when no Earthquake Sublimit blankets have been defined</rul:Constant>
						</rul:Arg>
					</rul:RunRule>
				</rul:Then>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="DoMessageCP1029NotValidWhenNoEarthquakeSublimitBlanketsHaveBeenDefined" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="../../../../@EQSubLimitBlktIndicator" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">No</rul:Constant>
						</rul:Equal>
						<rul:Exist AtInputDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionCoverageSubLimitFormWithFlatDollarDeductibleSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionCoverageSubLimitFormWithFlatDollarDeductibleSpecialClass" />
						<rul:GreaterThanOrEqual>
							<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQCauseOfLossCovBlktIDNum" Order="DataDefInputParamConstant" />
							<rul:Constant Type="integer">1</rul:Constant>
						</rul:GreaterThanOrEqual>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:RunRule Type="none" FileName="MessageHelper" Rule="AddErrorMessage" ClearCache="true">
						<rul:Arg Type="string" Param="Message">
							<rul:Constant Type="string">CP 10 29 not valid when no Earthquake Sublimit blankets have been defined</rul:Constant>
						</rul:Arg>
					</rul:RunRule>
				</rul:Then>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="DoMessageAnEQBlanketIDNumberIsRequiredWithTheSelectedOtherThanEQBlanket" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@IncludedInBlkt" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Yes</rul:Constant>
						</rul:Equal>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@BlktEQCauseOfLossIncludedInBlkt" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Yes</rul:Constant>
						</rul:Equal>
						<rul:Or>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="../../@EQCauseOfLossForm" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Earthquake Form (CP 10 40)</rul:Constant>
							</rul:Equal>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="../../@EQCauseOfLossForm" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Earthquake Form (CP 10 28)</rul:Constant>
							</rul:Equal>
						</rul:Or>
						<rul:NotEqual>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQCovIndicator" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Yes, Included in Blanket</rul:Constant>
						</rul:NotEqual>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:RunRule Type="none" FileName="MessageHelper" Rule="AddErrorMessage" ClearCache="true">
						<rul:Arg Type="string" Param="Message">
							<rul:Constant Type="string">An EQ blanket ID Number is required with the selected Other than EQ blanket</rul:Constant>
						</rul:Arg>
					</rul:RunRule>
				</rul:Then>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="DoMessageBlanketIDNumberOtherThanEQAndEQCauseOfLossBlanketIDNumbersMustBeTheSameForSelectedBlanket" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@IncludedInBlkt" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Yes</rul:Constant>
						</rul:Equal>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@BlktEQCauseOfLossIncludedInBlkt" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Yes</rul:Constant>
						</rul:Equal>
						<rul:Or>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="../../@EQCauseOfLossForm" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Earthquake Form (CP 10 40)</rul:Constant>
							</rul:Equal>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="../../@EQCauseOfLossForm" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Earthquake Form (CP 10 28)</rul:Constant>
							</rul:Equal>
						</rul:Or>
						<rul:NotEqual>
							<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@BlktIDNum" Order="DataDefInputParamConstant" />
							<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQCauseOfLossCovBlktIDNum" Order="DataDefInputParamConstant" />
						</rul:NotEqual>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:RunRule Type="none" FileName="MessageHelper" Rule="AddErrorMessage" ClearCache="true">
						<rul:Arg Type="string" Param="Message">
							<rul:Constant Type="string">Blanket ID Number (Other than EQ) and EQ Cause of Loss Blanket ID numbers must be the same for selected blanket</rul:Constant>
						</rul:Arg>
					</rul:RunRule>
				</rul:Then>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="DoMessagePleaseEnterABlanketIDNumberOtherThanEQThatIsNotAnEarthquakeOnlyBlanket" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@IncludedInBlkt" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Yes</rul:Constant>
						</rul:Equal>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@BlktCauseOfLossValue" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Earthquake Only</rul:Constant>
						</rul:Equal>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:RunRule Type="none" FileName="MessageHelper" Rule="AddErrorMessage" ClearCache="true">
						<rul:Arg Type="string" Param="Message">
							<rul:Constant Type="string">Please enter a Blanket ID Number (Other than EQ) that is not an Earthquake Only blanket</rul:Constant>
						</rul:Arg>
					</rul:RunRule>
				</rul:Then>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="DoMessagePleaseEnterAValidBlanketIDNumberForEQCoverage" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:WithArgs>
				<rul:Arg Type="boolean" Param="EQBlktIDNumNotEqualToBlktUnitNum">
					<rul:FirstNonNull Type="boolean">
						<rul:WithArgs>
							<rul:Arg Type="integer" Param="EQCauseOfLossCovBlktIDNumParam">
								<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQCauseOfLossCovBlktIDNum" Order="DataDefInputParamConstant" />
							</rul:Arg>
							<rul:And>
								<rul:ForEach AtDataDef="ancestor::CommercialProperty/CommercialPropertyBlanketRatingTable/CommercialPropertyBlanketRating">
									<rul:ForEach AtDataDef="CommercialPropertyBlanketRatingDetailTable/CommercialPropertyBlanketRatingDetail">
										<rul:If>
											<rul:Test>
												<rul:Equal>
													<rul:Value Type="integer" FromParam="EQCauseOfLossCovBlktIDNumParam" />
													<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@UnitNumber" Order="DataDefInputParamConstant" />
												</rul:Equal>
											</rul:Test>
											<rul:Then>
												<rul:GetList>
													<rul:Constant Type="boolean">false</rul:Constant>
													<rul:Break />
												</rul:GetList>
											</rul:Then>
											<rul:Else>
												<rul:Constant Type="boolean">true</rul:Constant>
											</rul:Else>
										</rul:If>
									</rul:ForEach>
								</rul:ForEach>
							</rul:And>
						</rul:WithArgs>
						<rul:Constant Type="boolean">false</rul:Constant>
					</rul:FirstNonNull>
				</rul:Arg>
				<rul:If>
					<rul:Test>
						<rul:And>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQCovIndicator" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Yes, Included in Blanket</rul:Constant>
							</rul:Equal>
							<rul:Or>
								<rul:Exist AtInputDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSpecialClass" />
								<rul:Exist AtInputDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionCoverageWithFlatDollarDeductibleSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionCoverageWithFlatDollarDeductibleSpecialClass" />
							</rul:Or>
							<rul:Equal>
								<rul:Value Type="boolean" FromParam="EQBlktIDNumNotEqualToBlktUnitNum" />
								<rul:Constant Type="boolean">true</rul:Constant>
							</rul:Equal>
						</rul:And>
					</rul:Test>
					<rul:Then>
						<rul:RunRule Type="none" FileName="MessageHelper" Rule="AddErrorMessage" ClearCache="true">
							<rul:Arg Type="string" Param="Message">
								<rul:Constant Type="string">Please enter a valid Blanket ID number for EQ Coverage</rul:Constant>
							</rul:Arg>
						</rul:RunRule>
					</rul:Then>
				</rul:If>
			</rul:WithArgs>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="DoMessageBlanketIDNumberEnteredContainsNoEQBlanketCoverage" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQCovIndicator" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Yes, Included in Blanket</rul:Constant>
						</rul:Equal>
						<rul:Or>
							<rul:Exist AtInputDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSpecialClass" />
							<rul:Exist AtInputDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionCoverageWithFlatDollarDeductibleSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionCoverageWithFlatDollarDeductibleSpecialClass" />
						</rul:Or>
						<rul:NotEqual>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@BlktEQCauseOfLossIncludedInEQBlkt" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Yes</rul:Constant>
						</rul:NotEqual>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:RunRule Type="none" FileName="MessageHelper" Rule="AddErrorMessage" ClearCache="true">
						<rul:Arg Type="string" Param="Message">
							<rul:Constant Type="string">Blanket ID number entered contains no EQ blanket coverage</rul:Constant>
						</rul:Arg>
					</rul:RunRule>
				</rul:Then>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="DoMessageLimitonCP1038MustNotBeGreaterThanSpecialClassLimit" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Exist AtInputDataDef="CommercialPropertyDischargeFromSewerDrainOrSumpNotFloodReltdSpclClassTable/CommercialPropertyDischargeFromSewerDrainOrSumpNotFloodReltdSpclClass" />
						<rul:GreaterThan>
							<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="CommercialPropertyDischargeFromSewerDrainOrSumpNotFloodReltdSpclClassTable/CommercialPropertyDischargeFromSewerDrainOrSumpNotFloodReltdSpclClass[1]/@DischargeLimitPD" Order="DataDefInputParamConstant" />
							<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@LimitToUse" Order="DataDefInputParamConstant" />
						</rul:GreaterThan>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:RunRule Type="none" FileName="MessageHelper" Rule="AddErrorMessage" ClearCache="true">
						<rul:Arg Type="string" Param="Message">
							<rul:Constant Type="string">Limit on CP 10 38 must not be greater than the Special Class limit</rul:Constant>
						</rul:Arg>
					</rul:RunRule>
				</rul:Then>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="DoMessageCP1054NotValidWhenWindstormOrHailDeductibleIsSelected" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:NotEqual>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Not Applicable</rul:Constant>
						</rul:NotEqual>
						<rul:Exist AtInputDataDef="CommercialPropertyWindstormOrHailExclusionSpecialClassTable/CommercialPropertyWindstormOrHailExclusionSpecialClass" />
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:RunRule Type="none" FileName="MessageHelper" Rule="AddErrorMessage" ClearCache="true">
						<rul:Arg Type="string" Param="Message">
							<rul:Constant Type="string">CP 10 54 not valid when Windstorm or Hail Deductible is selected</rul:Constant>
						</rul:Arg>
					</rul:RunRule>
				</rul:Then>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="DoMessageCP1410IsRequiredWithCP1035" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Exist AtInputDataDef="CommercialPropertyWatercraftExclusionSpecialClassTable/CommercialPropertyWatercraftExclusionSpecialClass" />
						<rul:NotExist AtInputDataDef="CommercialPropertyAdditionalCoveredPropertySpecialClassTable/CommercialPropertyAdditionalCoveredPropertySpecialClass" />
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:RunRule Type="none" FileName="MessageHelper" Rule="AddErrorMessage" ClearCache="true">
						<rul:Arg Type="string" Param="Message">
							<rul:Constant Type="string">CP 14 10 is required with CP 10 35</rul:Constant>
						</rul:Arg>
					</rul:RunRule>
				</rul:Then>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="DoMessageValidTypeRequiredForCP1410AndCP1035combination" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Exist AtInputDataDef="CommercialPropertyWatercraftExclusionSpecialClassTable/CommercialPropertyWatercraftExclusionSpecialClass" />
						<rul:Exist AtInputDataDef="CommercialPropertyAdditionalCoveredPropertySpecialClassTable/CommercialPropertyAdditionalCoveredPropertySpecialClass" />
						<rul:Exist AtInputDataDef="CommercialPropertyAdditionalCoveredPropertySpecialClassTable/CommercialPropertyAdditionalCoveredPropertySpecialClass[1]/CommercialPropertyAdditionalCoveredPropertySpecialClassDetailTable/CommercialPropertyAdditionalCoveredPropertySpecialClassDetail" />
						<rul:NotEqual>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="CommercialPropertyAdditionalCoveredPropertySpecialClassTable/CommercialPropertyAdditionalCoveredPropertySpecialClass[1]/CommercialPropertyAdditionalCoveredPropertySpecialClassDetailTable/CommercialPropertyAdditionalCoveredPropertySpecialClassDetail[1]/@Type" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string"></rul:Constant>
						</rul:NotEqual>
						<rul:NotEqual>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="CommercialPropertyAdditionalCoveredPropertySpecialClassTable/CommercialPropertyAdditionalCoveredPropertySpecialClass[1]/CommercialPropertyAdditionalCoveredPropertySpecialClassDetailTable/CommercialPropertyAdditionalCoveredPropertySpecialClassDetail[1]/@Type" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Bulkheads, Pilings, Piers, Wharves or Docks</rul:Constant>
						</rul:NotEqual>
						<rul:NotEqual>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="CommercialPropertyAdditionalCoveredPropertySpecialClassTable/CommercialPropertyAdditionalCoveredPropertySpecialClass[1]/CommercialPropertyAdditionalCoveredPropertySpecialClassDetailTable/CommercialPropertyAdditionalCoveredPropertySpecialClassDetail[1]/@Type" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Retaining Walls</rul:Constant>
						</rul:NotEqual>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:RunRule Type="none" FileName="MessageHelper" Rule="AddErrorMessage" ClearCache="true">
						<rul:Arg Type="string" Param="Message">
							<rul:Constant Type="string">Valid Type required for CP 14 10 &amp; CP 10 35 combination</rul:Constant>
						</rul:Arg>
					</rul:RunRule>
				</rul:Then>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="DoMessageCP0402IsNotValidWithTheStandardPropertyPolicy" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="../../../../@PolicyType" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Standard Property Policy</rul:Constant>
						</rul:Equal>
						<rul:Exist AtInputDataDef="CommercialPropertyIncreasedCostOfLossAndRelatedExpensesForGreenUpgradesEndtSpecialClassTable/CommercialPropertyIncreasedCostOfLossAndRelatedExpensesForGreenUpgradesEndtSpecialClass" />
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:RunRule Type="none" FileName="MessageHelper" Rule="AddErrorMessage" ClearCache="true">
						<rul:Arg Type="string" Param="Message">
							<rul:Constant Type="string">CP 04 02 is not valid with the Standard Property Policy</rul:Constant>
						</rul:Arg>
					</rul:RunRule>
				</rul:Then>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="DoMessageGreenUpgradesLimitExceedsTheSelectedPercentageOfTheApplicableLimit" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Exist AtInputDataDef="CommercialPropertyIncreasedCostOfLossAndRelatedExpensesForGreenUpgradesEndtSpecialClassTable/CommercialPropertyIncreasedCostOfLossAndRelatedExpensesForGreenUpgradesEndtSpecialClass" />
						<rul:GreaterThan>
							<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="CommercialPropertyIncreasedCostOfLossAndRelatedExpensesForGreenUpgradesEndtSpecialClassTable/CommercialPropertyIncreasedCostOfLossAndRelatedExpensesForGreenUpgradesEndtSpecialClass[1]/@Ratio" Order="DataDefInputParamConstant" />
							<rul:Constant Type="decimal">1</rul:Constant>
						</rul:GreaterThan>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="../../../../@PolicyType" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Commercial Property Policy</rul:Constant>
						</rul:Equal>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:RunRule Type="none" FileName="MessageHelper" Rule="AddErrorMessage" ClearCache="true">
						<rul:Arg Type="string" Param="Message">
							<rul:Constant Type="string">Green Upgrades Limit exceeds the selected percentage of the applicable limit</rul:Constant>
						</rul:Arg>
					</rul:RunRule>
				</rul:Then>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="DoMessageCP0402IsNotApplicableWithoutReplacementCostCoverageSelected" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Exist AtInputDataDef="CommercialPropertyIncreasedCostOfLossAndRelatedExpensesForGreenUpgradesEndtSpecialClassTable/CommercialPropertyIncreasedCostOfLossAndRelatedExpensesForGreenUpgradesEndtSpecialClass" />
						<rul:NotEqual>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@ValuationType" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Replacement Cost</rul:Constant>
						</rul:NotEqual>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="../../../../@PolicyType" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Commercial Property Policy</rul:Constant>
						</rul:Equal>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:RunRule Type="none" FileName="MessageHelper" Rule="AddErrorMessage" ClearCache="true">
						<rul:Arg Type="string" Param="Message">
							<rul:Constant Type="string">Green Upgrades Endorsement CP 04 02 is not applicable without replacement cost coverage selected</rul:Constant>
						</rul:Arg>
					</rul:RunRule>
				</rul:Then>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="DoMessageCP0409IsNotValidWithTheValuesSelected" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:Exist AtInputDataDef="CommercialPropertyIncreaseInRebuildingExpensesFollowingDisasterSpecialClassTable/CommercialPropertyIncreaseInRebuildingExpensesFollowingDisasterSpecialClass" />
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:If>
							<rul:Test>
								<rul:Or>
									<rul:NotEqual>
										<rul:FirstValue Type="string" FromConstant="" FromDataDef="../../../../@PolicyType" Order="DataDefInputParamConstant" />
										<rul:Constant Type="string">Commercial Property Policy</rul:Constant>
									</rul:NotEqual>
									<rul:And>
										<rul:Equal>
											<rul:FirstValue Type="string" FromConstant="" FromDataDef="../../../../@PolicyType" Order="DataDefInputParamConstant" />
											<rul:Constant Type="string">Commercial Property Policy</rul:Constant>
										</rul:Equal>
										<rul:NotEqual>
											<rul:FirstValue Type="string" FromConstant="" FromDataDef="@CovForm" Order="DataDefInputParamConstant" />
											<rul:Constant Type="string">Building and Personal Property Coverage Form</rul:Constant>
										</rul:NotEqual>
										<rul:NotEqual>
											<rul:FirstValue Type="string" FromConstant="" FromDataDef="@CovForm" Order="DataDefInputParamConstant" />
											<rul:Constant Type="string">Condominium Association Coverage Form</rul:Constant>
										</rul:NotEqual>
									</rul:And>
									<rul:And>
										<rul:Equal>
											<rul:FirstValue Type="string" FromConstant="" FromDataDef="../../../../@PolicyType" Order="DataDefInputParamConstant" />
											<rul:Constant Type="string">Commercial Property Policy</rul:Constant>
										</rul:Equal>
										<rul:Or>
											<rul:Equal>
												<rul:FirstValue Type="string" FromConstant="" FromDataDef="@CovForm" Order="DataDefInputParamConstant" />
												<rul:Constant Type="string">Building and Personal Property Coverage Form</rul:Constant>
											</rul:Equal>
											<rul:Equal>
												<rul:FirstValue Type="string" FromConstant="" FromDataDef="@CovForm" Order="DataDefInputParamConstant" />
												<rul:Constant Type="string">Condominium Association Coverage Form</rul:Constant>
											</rul:Equal>
										</rul:Or>
										<rul:NotEqual>
											<rul:FirstValue Type="string" FromConstant="" FromDataDef="@ValuationType" Order="DataDefInputParamConstant" />
											<rul:Constant Type="string">Replacement Cost</rul:Constant>
										</rul:NotEqual>
										<rul:NotEqual>
											<rul:FirstValue Type="string" FromConstant="" FromDataDef="@AgreedValueOption" Order="DataDefInputParamConstant" />
											<rul:Constant Type="string">Yes</rul:Constant>
										</rul:NotEqual>
										<rul:NotEqual>
											<rul:FirstValue Type="string" FromConstant="" FromDataDef="@BlktAgreedVal" Order="DataDefInputParamConstant" />
											<rul:Constant Type="string">Yes</rul:Constant>
										</rul:NotEqual>
									</rul:And>
									<rul:And>
										<rul:Equal>
											<rul:FirstValue Type="string" FromConstant="" FromDataDef="../../../../@PolicyType" Order="DataDefInputParamConstant" />
											<rul:Constant Type="string">Commercial Property Policy</rul:Constant>
										</rul:Equal>
										<rul:Or>
											<rul:Equal>
												<rul:FirstValue Type="string" FromConstant="" FromDataDef="@CovForm" Order="DataDefInputParamConstant" />
												<rul:Constant Type="string">Building and Personal Property Coverage Form</rul:Constant>
											</rul:Equal>
											<rul:Equal>
												<rul:FirstValue Type="string" FromConstant="" FromDataDef="@CovForm" Order="DataDefInputParamConstant" />
												<rul:Constant Type="string">Condominium Association Coverage Form</rul:Constant>
											</rul:Equal>
										</rul:Or>
										<rul:Equal>
											<rul:FirstValue Type="string" FromConstant="" FromDataDef="@ValuationType" Order="DataDefInputParamConstant" />
											<rul:Constant Type="string">Replacement Cost</rul:Constant>
										</rul:Equal>
										<rul:NotEqual>
											<rul:FirstValue Type="string" FromConstant="" FromDataDef="@Coinsurance" Order="DataDefInputParamConstant" />
											<rul:Constant Type="string">90%</rul:Constant>
										</rul:NotEqual>
										<rul:NotEqual>
											<rul:FirstValue Type="string" FromConstant="" FromDataDef="@Coinsurance" Order="DataDefInputParamConstant" />
											<rul:Constant Type="string">100%</rul:Constant>
										</rul:NotEqual>
										<rul:NotEqual>
											<rul:FirstValue Type="string" FromConstant="" FromDataDef="@BlktCoinsuranceValue" Order="DataDefInputParamConstant" />
											<rul:Constant Type="string">90%</rul:Constant>
										</rul:NotEqual>
										<rul:NotEqual>
											<rul:FirstValue Type="string" FromConstant="" FromDataDef="@BlktCoinsuranceValue" Order="DataDefInputParamConstant" />
											<rul:Constant Type="string">100%</rul:Constant>
										</rul:NotEqual>
										<rul:NotEqual>
											<rul:FirstValue Type="string" FromConstant="" FromDataDef="@AgreedValueOption" Order="DataDefInputParamConstant" />
											<rul:Constant Type="string">Yes</rul:Constant>
										</rul:NotEqual>
										<rul:NotEqual>
											<rul:FirstValue Type="string" FromConstant="" FromDataDef="@BlktAgreedVal" Order="DataDefInputParamConstant" />
											<rul:Constant Type="string">Yes</rul:Constant>
										</rul:NotEqual>
									</rul:And>
								</rul:Or>
							</rul:Test>
							<rul:Then>
								<rul:RunRule Type="none" FileName="MessageHelper" Rule="AddErrorMessage" ClearCache="true">
									<rul:Arg Type="string" Param="Message">
										<rul:Constant Type="string">CP 04 09 is not valid with the values selected</rul:Constant>
									</rul:Arg>
								</rul:RunRule>
							</rul:Then>
						</rul:If>
					</rul:Sequence>
				</rul:Then>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="DoMessageAgreedValueForEarthquakeCoverageDoesNotApplyWhenIsProvidedOnASubLimitBasisCP1045" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@IncludedInBlkt" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Yes</rul:Constant>
						</rul:Equal>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQCovIndicator" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Yes, Not Included in Blanket</rul:Constant>
						</rul:Equal>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@AgreedValueOption" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Yes</rul:Constant>
						</rul:Equal>
						<rul:Exist AtInputDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSubLimitFormSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSubLimitFormSpecialClass" />
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:RunRule Type="none" FileName="MessageHelper" Rule="AddErrorMessage" ClearCache="true">
						<rul:Arg Type="string" Param="Message">
							<rul:Constant Type="string">Agreed Value for Earthquake coverage does not apply when is provided on a sub-limit basis (CP 10 45)</rul:Constant>
						</rul:Arg>
					</rul:RunRule>
				</rul:Then>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="DoMessageAgreedValueForEarthquakeCoverageDoesNotApplyWhenIsProvidedOnASubLimitBasisCP1029" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@IncludedInBlkt" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Yes</rul:Constant>
						</rul:Equal>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQCovIndicator" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Yes, Not Included in Blanket</rul:Constant>
						</rul:Equal>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@AgreedValueOption" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Yes</rul:Constant>
						</rul:Equal>
						<rul:Exist AtInputDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionCoverageSubLimitFormWithFlatDollarDeductibleSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionCoverageSubLimitFormWithFlatDollarDeductibleSpecialClass" />
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:RunRule Type="none" FileName="MessageHelper" Rule="AddErrorMessage" ClearCache="true">
						<rul:Arg Type="string" Param="Message">
							<rul:Constant Type="string">Agreed Value for Earthquake coverage does not apply when is provided on a sub-limit basis (CP 10 29)</rul:Constant>
						</rul:Arg>
					</rul:RunRule>
				</rul:Then>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="DoMessageFormCP0414CannotBeAttachedWhenCauseOfLossIsDifferentThanSpecial" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Exist AtInputDataDef="CommercialPropertyLimitedCoverageForUnmannedAircraftScheduledAndOrBlanketCoverageSpecialClassTable/CommercialPropertyLimitedCoverageForUnmannedAircraftScheduledAndOrBlanketCoverageSpecialClass" />
						<rul:NotEqual>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@CauseOfLossToUse" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Special</rul:Constant>
						</rul:NotEqual>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:RunRule Type="none" FileName="MessageHelper" Rule="AddErrorMessage" ClearCache="true">
						<rul:Arg Type="string" Param="Message">
							<rul:Constant Type="string">Form CP 04 14 cannot be attached when Cause Of Loss is different than Special</rul:Constant>
						</rul:Arg>
					</rul:RunRule>
				</rul:Then>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="DoMessageFloodConstructionTypesNeedToBeSameInSpecialClassLevelAndItsSpecialClassBusinessIncomeLevel" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:WithArgs>
				<rul:Arg Type="boolean" Param="areTheFloodConstructionTypesTheSame">
					<rul:FirstNonNull Type="boolean">
						<rul:If>
							<rul:Test>
								<rul:And>
									<rul:Exist AtInputDataDef="CommercialPropertyFloodCoverageEndorsementSpecialClassTable/CommercialPropertyFloodCoverageEndorsementSpecialClass" />
									<rul:Exist AtInputDataDef="CommercialPropertySpecialClassBusnIncomeTable/CommercialPropertySpecialClassBusnIncome" />
								</rul:And>
							</rul:Test>
							<rul:Then>
								<rul:WithArgs>
									<rul:Arg Type="string" Param="ISOSSINodeCommercialPropertyFloodCoverageEndorsementSpecialClassConstructionTypeParam">
										<rul:FirstValue Type="string" FromConstant="" FromDataDef="CommercialPropertyFloodCoverageEndorsementSpecialClassTable/CommercialPropertyFloodCoverageEndorsementSpecialClass[1]/@ConstructionType" Order="DataDefInputParamConstant" />
									</rul:Arg>
									<rul:ForEach AtDataDef="CommercialPropertySpecialClassBusnIncomeTable/CommercialPropertySpecialClassBusnIncome">
										<rul:If>
											<rul:Test>
												<rul:And>
													<rul:Exist AtInputDataDef="CommercialPropertyFloodCoverageEndorsementSpclClassBusnIncomeTable/CommercialPropertyFloodCoverageEndorsementSpclClassBusnIncome" />
													<rul:NotEqual>
														<rul:Value Type="string" FromParam="ISOSSINodeCommercialPropertyFloodCoverageEndorsementSpecialClassConstructionTypeParam" />
														<rul:Constant Type="string"></rul:Constant>
													</rul:NotEqual>
													<rul:NotEqual>
														<rul:FirstValue Type="string" FromConstant="" FromDataDef="CommercialPropertyFloodCoverageEndorsementSpclClassBusnIncomeTable/CommercialPropertyFloodCoverageEndorsementSpclClassBusnIncome[1]/@ConstructionType" Order="DataDefInputParamConstant" />
														<rul:Constant Type="string"></rul:Constant>
													</rul:NotEqual>
													<rul:NotEqual>
														<rul:Value Type="string" FromParam="ISOSSINodeCommercialPropertyFloodCoverageEndorsementSpecialClassConstructionTypeParam" />
														<rul:FirstValue Type="string" FromConstant="" FromDataDef="CommercialPropertyFloodCoverageEndorsementSpclClassBusnIncomeTable/CommercialPropertyFloodCoverageEndorsementSpclClassBusnIncome[1]/@ConstructionType" Order="DataDefInputParamConstant" />
													</rul:NotEqual>
												</rul:And>
											</rul:Test>
											<rul:Then>
												<rul:GetList>
													<rul:Constant Type="boolean">false</rul:Constant>
													<rul:Break />
												</rul:GetList>
											</rul:Then>
										</rul:If>
									</rul:ForEach>
								</rul:WithArgs>
							</rul:Then>
						</rul:If>
						<rul:Constant Type="boolean">true</rul:Constant>
					</rul:FirstNonNull>
				</rul:Arg>
				<rul:If>
					<rul:Test>
						<rul:Equal>
							<rul:Value Type="boolean" FromParam="areTheFloodConstructionTypesTheSame" />
							<rul:Constant Type="boolean">false</rul:Constant>
						</rul:Equal>
					</rul:Test>
					<rul:Then>
						<rul:RunRule Type="none" FileName="MessageHelper" Rule="AddErrorMessage" ClearCache="true">
							<rul:Arg Type="string" Param="Message">
								<rul:Constant Type="string">Flood Construction types need to be same in Special Class level and its Special Class Business Income Level</rul:Constant>
							</rul:Arg>
						</rul:RunRule>
					</rul:Then>
				</rul:If>
			</rul:WithArgs>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="DoMessageThisSpecialClassRiskCannotBeAssociatedWithABuildingWhenThereIsNoBuildingAttachedToThePolicy" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@IncludedInBuilding" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Yes</rul:Constant>
						</rul:Equal>
						<rul:NotExist AtInputDataDef="ancestor::CommercialPropertyLocation/CommercialPropertyStructureTable/CommercialPropertyStructure[1]" />
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:RunRule Type="none" FileName="MessageHelper" Rule="AddErrorMessage" ClearCache="true">
						<rul:Arg Type="string" Param="Message">
							<rul:Constant Type="string">This Special Class Risk cannot be associated with a Building when there is no Building attached to the policy</rul:Constant>
						</rul:Arg>
					</rul:RunRule>
				</rul:Then>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="DoMessageTheBuildingIDNumberEnteredDoesNotCorrespondToAnyBuildingUnitNumberUnderTheSameLocation" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:WithArgs>
				<rul:Arg Type="boolean" Param="bldgIdNumberMatch">
					<rul:FirstNonNull Type="boolean">
						<rul:If>
							<rul:Test>
								<rul:Equal>
									<rul:FirstValue Type="string" FromConstant="" FromDataDef="@IncludedInBuilding" Order="DataDefInputParamConstant" />
									<rul:Constant Type="string">Yes</rul:Constant>
								</rul:Equal>
							</rul:Test>
							<rul:Then>
								<rul:WithArgs>
									<rul:Arg Type="integer" Param="LocNumberParam">
										<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@LocNumber" Order="DataDefInputParamConstant" />
									</rul:Arg>
									<rul:Arg Type="integer" Param="BuildingIDNumberParam">
										<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@BuildingIDNumber" Order="DataDefInputParamConstant" />
									</rul:Arg>
									<rul:ForEach AtDataDef="ancestor::CommercialPropertyLocation/CommercialPropertyStructureTable/CommercialPropertyStructure">
										<rul:If>
											<rul:Test>
												<rul:And>
													<rul:Equal>
														<rul:Value Type="integer" FromParam="LocNumberParam" />
														<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@LocUnitNumber" Order="DataDefInputParamConstant" />
													</rul:Equal>
													<rul:Equal>
														<rul:Value Type="integer" FromParam="BuildingIDNumberParam" />
														<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@UnitNumber" Order="DataDefInputParamConstant" />
													</rul:Equal>
												</rul:And>
											</rul:Test>
											<rul:Then>
												<rul:GetList>
													<rul:Constant Type="boolean">true</rul:Constant>
													<rul:Break />
												</rul:GetList>
											</rul:Then>
										</rul:If>
									</rul:ForEach>
								</rul:WithArgs>
							</rul:Then>
						</rul:If>
						<rul:Constant Type="boolean">false</rul:Constant>
					</rul:FirstNonNull>
				</rul:Arg>
				<rul:If>
					<rul:Test>
						<rul:And>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@IncludedInBuilding" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Yes</rul:Constant>
							</rul:Equal>
							<rul:Equal>
								<rul:Value Type="boolean" FromParam="bldgIdNumberMatch" />
								<rul:Constant Type="boolean">false</rul:Constant>
							</rul:Equal>
						</rul:And>
					</rul:Test>
					<rul:Then>
						<rul:RunRule Type="none" FileName="MessageHelper" Rule="AddErrorMessage" ClearCache="true">
							<rul:Arg Type="string" Param="Message">
								<rul:Constant Type="string">The Building ID Number entered does not correspond to any Building Unit Number under the same Location</rul:Constant>
							</rul:Arg>
						</rul:RunRule>
					</rul:Then>
				</rul:If>
			</rul:WithArgs>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="DoMesssageOnlyOneExclusionFormForCannabisCanApplyToTheRisk" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Exist AtInputDataDef="CommercialPropertyCannabisExclusionSpecialClassTable/CommercialPropertyCannabisExclusionSpecialClass" />
						<rul:Exist AtInputDataDef="CommercialPropertyCannabisExclusionWithHempExceptionSpecialClassTable/CommercialPropertyCannabisExclusionWithHempExceptionSpecialClass" />
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:RunRule Type="none" FileName="MessageHelper" Rule="AddErrorMessage" ClearCache="true">
						<rul:Arg Type="string" Param="Message">
							<rul:Constant Type="string">Only one Exclusion Form for Cannabis can apply to the risk</rul:Constant>
						</rul:Arg>
					</rul:RunRule>
				</rul:Then>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="ErcSetStatisticalCodes" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:Exist AtInputDataDef="ancestor::MasterCFCW/Policy" />
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetLCMStatCode" ClearCache="true" />
						<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetBasicGroupIDeductibleStatCode" ClearCache="true" />
						<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetCoverageCode" ClearCache="true" />
						<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetSublineBasicGroupI" ClearCache="true" />
						<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetSublineBasicGroupII" ClearCache="true" />
						<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetSublineBroadForm" ClearCache="true" />
						<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetSublineSpecialForm" ClearCache="true" />
						<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetRatingIdentificationCode" ClearCache="true" />
						<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetWindstormHailDollarAmt" ClearCache="true" />
						<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetDeductibleAsNumber" ClearCache="true" />
						<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetWindstormOrHailDeductibleStatCode" ClearCache="true" />
						<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetAllOtherDeductibleStatCode" ClearCache="true" />
						<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetCoinsuranceStatCode" ClearCache="true" />
						<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetExposureStatAmount" ClearCache="true" />
						<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetStatSpecialClassPremium" ClearCache="true" />
						<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetGreenUpgradesExposureStatCode" ClearCache="true" />
						<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetNonGreenUpgradeStatCode" ClearCache="true" />
						<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetIncreasedCostOfLossPctToUseStatSpCl" ClearCache="true" />
						<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetIncreasedCostOfLossPctStatCode" ClearCache="true" />
						<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetRelatedExpensesStatCode" ClearCache="true" />
						<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetBldgCodeEffectivenessGradeStatCode" ClearCache="true" />
					</rul:Sequence>
				</rul:Then>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetLCMStatCode" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:LessThan>
						<rul:Product>
							<rul:Round DecimalPlaces="2">
								<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="ancestor::CommercialProperty/@LossCostMultiplier" Order="DataDefInputParamConstant" />
							</rul:Round>
							<rul:Constant Type="integer">100</rul:Constant>
						</rul:Product>
						<rul:Constant Type="decimal">100</rul:Constant>
					</rul:LessThan>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:RunRule Type="string" ToDataDef="@LossCostMultiplierStatCode" FileName="CommercialPropertySpecialClassRules" Rule="LookupLossCostMultiplierStatCode" ClearCache="true">
							<rul:Arg Type="string" Param="lossCostMultiplierStatCode">
								<rul:Convert Type="string">
									<rul:Product>
										<rul:Round DecimalPlaces="2">
											<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="ancestor::CommercialProperty/@LossCostMultiplier" Order="DataDefInputParamConstant" />
										</rul:Round>
										<rul:Constant Type="integer">100</rul:Constant>
									</rul:Product>
								</rul:Convert>
							</rul:Arg>
						</rul:RunRule>
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Convert Type="string" ToDataDef="@LossCostMultiplierStatCode">
							<rul:Product>
								<rul:Round DecimalPlaces="2">
									<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="ancestor::CommercialProperty/@LossCostMultiplier" Order="DataDefInputParamConstant" />
								</rul:Round>
								<rul:Constant Type="integer">100</rul:Constant>
							</rul:Product>
						</rul:Convert>
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetBasicGroupIDeductibleStatCode" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:NotEqual>
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@Deductible" Order="DataDefInputParamConstant" />
						<rul:Constant Type="string"></rul:Constant>
					</rul:NotEqual>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:RunRule Type="string" ToDataDef="@BasicGroupIDeductibleStatCode" FileName="CommercialPropertySpecialClassRules" Rule="LookupDeductibleStatCode" ClearCache="true" />
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Constant Type="string" ToDataDef="@BasicGroupIDeductibleStatCode"></rul:Constant>
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetCoverageCode" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:RunRule Type="string" ToDataDef="@CoverageCode" FileName="CommercialPropertySpecialClassRules" Rule="LookupBuildingCoverageCode" ClearCache="true" />
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetSublineBasicGroupI" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Choose>
				<rul:When>
					<rul:Test>
						<rul:Equal>
							<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@VandalismExclFactor" Order="DataDefInputParamConstant" />
							<rul:Constant Type="decimal">1</rul:Constant>
						</rul:Equal>
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:RunRule Type="string" ToDataDef="@SublineBasicGroupI" FileName="CommercialPropertySpecialClassRules" Rule="LookupSublineBasicGroupI" ClearCache="true" />
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:When>
					<rul:Test>
						<rul:NotEqual>
							<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@VandalismExclFactor" Order="DataDefInputParamConstant" />
							<rul:Constant Type="decimal">1</rul:Constant>
						</rul:NotEqual>
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:RunRule Type="string" ToDataDef="@SublineBasicGroupI" FileName="CommercialPropertySpecialClassRules" Rule="LookupSublineBasicGroupIExcludingVandalism" ClearCache="true" />
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:Otherwise>
					<rul:Sequence>
						<rul:Constant Type="string" ToDataDef="@SublineBasicGroupI"></rul:Constant>
					</rul:Sequence>
				</rul:Otherwise>
			</rul:Choose>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetSublineBasicGroupII" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Choose>
				<rul:When>
					<rul:Test>
						<rul:NotExist AtInputDataDef="CommercialPropertyWindstormOrHailExclusionSpecialClassTable/CommercialPropertyWindstormOrHailExclusionSpecialClass" />
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:RunRule Type="string" ToDataDef="@SublineBasicGroupII" FileName="CommercialPropertySpecialClassRules" Rule="LookupSublineBasicGroupII" ClearCache="true" />
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:When>
					<rul:Test>
						<rul:Exist AtInputDataDef="CommercialPropertyWindstormOrHailExclusionSpecialClassTable/CommercialPropertyWindstormOrHailExclusionSpecialClass" />
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:RunRule Type="string" ToDataDef="@SublineBasicGroupII" FileName="CommercialPropertySpecialClassRules" Rule="LookupSublineBasicGroupIIExcludingWindstormOrHail" ClearCache="true" />
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:Otherwise>
					<rul:Sequence>
						<rul:Constant Type="string" ToDataDef="@SublineBasicGroupII"></rul:Constant>
					</rul:Sequence>
				</rul:Otherwise>
			</rul:Choose>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetSublineBroadForm" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:Equal>
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@CauseOfLossToUse" Order="DataDefInputParamConstant" />
						<rul:Constant Type="string">Broad</rul:Constant>
					</rul:Equal>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:RunRule Type="string" ToDataDef="@SublineBroadForm" FileName="CommercialPropertySpecialClassRules" Rule="LookupSublineBroadForm" ClearCache="true" />
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Constant Type="string" ToDataDef="@SublineBroadForm"></rul:Constant>
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetSublineSpecialForm" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Choose>
				<rul:When>
					<rul:Test>
						<rul:And>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@CauseOfLossToUse" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Special</rul:Constant>
							</rul:Equal>
							<rul:Equal>
								<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@SpecialTheftExclusionIndicator" Order="DataDefInputParamConstant" />
								<rul:Constant Type="integer">0</rul:Constant>
							</rul:Equal>
						</rul:And>
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:RunRule Type="string" ToDataDef="@SublineSpecialForm" FileName="CommercialPropertySpecialClassRules" Rule="LookupSublineSpecialFormIncludingTheft" ClearCache="true" />
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:When>
					<rul:Test>
						<rul:And>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@CauseOfLossToUse" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Special</rul:Constant>
							</rul:Equal>
							<rul:Equal>
								<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@SpecialTheftExclusionIndicator" Order="DataDefInputParamConstant" />
								<rul:Constant Type="integer">1</rul:Constant>
							</rul:Equal>
						</rul:And>
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:RunRule Type="string" ToDataDef="@SublineSpecialForm" FileName="CommercialPropertySpecialClassRules" Rule="LookupSublineSpecialFormExcludingTheft" ClearCache="true" />
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:Otherwise>
					<rul:Sequence>
						<rul:Constant Type="string" ToDataDef="@SublineSpecialForm"></rul:Constant>
					</rul:Sequence>
				</rul:Otherwise>
			</rul:Choose>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetRatingIdentificationCode" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Choose>
				<rul:When>
					<rul:Test>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@IncludedInBlkt" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">No</rul:Constant>
						</rul:Equal>
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:RunRule Type="string" ToDataDef="@RatingIdentificationCode" FileName="CommercialPropertySpecialClassRules" Rule="LookupClassRatedRatingIdentificationCode" ClearCache="true" />
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:When>
					<rul:Test>
						<rul:Equal>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@IncludedInBlkt" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Yes</rul:Constant>
						</rul:Equal>
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:RunRule Type="string" ToDataDef="@RatingIdentificationCode" FileName="CommercialPropertySpecialClassRules" Rule="LookupBlktClassRatedRatingIdentificationCode" ClearCache="true" />
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:Otherwise>
					<rul:Sequence>
						<rul:Constant Type="string" ToDataDef="@RatingIdentificationCode"></rul:Constant>
					</rul:Sequence>
				</rul:Otherwise>
			</rul:Choose>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetWindstormHailDollarAmt" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:NotExist AtInputDataDef="CommercialPropertyWindstormOrHailExclusionSpecialClassTable/CommercialPropertyWindstormOrHailExclusionSpecialClass" />
						<rul:Or>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">1%</rul:Constant>
							</rul:Equal>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">2%</rul:Constant>
							</rul:Equal>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">5%</rul:Constant>
							</rul:Equal>
						</rul:Or>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:Choose>
							<rul:When>
								<rul:Test>
									<rul:Equal>
										<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
										<rul:Constant Type="string">1%</rul:Constant>
									</rul:Equal>
								</rul:Test>
								<rul:Then>
									<rul:Sequence>
										<rul:Constant Type="decimal" ToDataDef="@WindstormOrHailPercent">0.01</rul:Constant>
									</rul:Sequence>
								</rul:Then>
							</rul:When>
							<rul:When>
								<rul:Test>
									<rul:Equal>
										<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
										<rul:Constant Type="string">2%</rul:Constant>
									</rul:Equal>
								</rul:Test>
								<rul:Then>
									<rul:Sequence>
										<rul:Constant Type="decimal" ToDataDef="@WindstormOrHailPercent">0.02</rul:Constant>
									</rul:Sequence>
								</rul:Then>
							</rul:When>
							<rul:When>
								<rul:Test>
									<rul:Equal>
										<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
										<rul:Constant Type="string">5%</rul:Constant>
									</rul:Equal>
								</rul:Test>
								<rul:Then>
									<rul:Sequence>
										<rul:Constant Type="decimal" ToDataDef="@WindstormOrHailPercent">0.05</rul:Constant>
									</rul:Sequence>
								</rul:Then>
							</rul:When>
						</rul:Choose>
					</rul:Sequence>
				</rul:Then>
			</rul:If>
			<rul:WithArgs>
				<rul:Arg Type="integer" Param="calcWindstormHailDollarAmt">
					<rul:If>
						<rul:Test>
							<rul:And>
								<rul:NotExist AtInputDataDef="CommercialPropertyWindstormOrHailExclusionSpecialClassTable/CommercialPropertyWindstormOrHailExclusionSpecialClass" />
								<rul:Or>
									<rul:Equal>
										<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
										<rul:Constant Type="string">1%</rul:Constant>
									</rul:Equal>
									<rul:Equal>
										<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
										<rul:Constant Type="string">2%</rul:Constant>
									</rul:Equal>
									<rul:Equal>
										<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
										<rul:Constant Type="string">5%</rul:Constant>
									</rul:Equal>
								</rul:Or>
							</rul:And>
						</rul:Test>
						<rul:Then>
							<rul:Choose>
								<rul:When>
									<rul:Test>
										<rul:Equal>
											<rul:FirstValue Type="string" FromConstant="" FromDataDef="@IncludedInBlkt" Order="DataDefInputParamConstant" />
											<rul:Constant Type="string">Yes</rul:Constant>
										</rul:Equal>
									</rul:Test>
									<rul:Then>
										<rul:Convert Type="integer">
											<rul:Product>
												<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@BlktLimit" Order="DataDefInputParamConstant" />
												<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@WindstormOrHailPercent" Order="DataDefInputParamConstant" />
											</rul:Product>
										</rul:Convert>
									</rul:Then>
								</rul:When>
								<rul:When>
									<rul:Test>
										<rul:Equal>
											<rul:FirstValue Type="string" FromConstant="" FromDataDef="@IncludedInBlkt" Order="DataDefInputParamConstant" />
											<rul:Constant Type="string">No</rul:Constant>
										</rul:Equal>
									</rul:Test>
									<rul:Then>
										<rul:Convert Type="integer">
											<rul:Product>
												<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@Limit" Order="DataDefInputParamConstant" />
												<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@WindstormOrHailPercent" Order="DataDefInputParamConstant" />
											</rul:Product>
										</rul:Convert>
									</rul:Then>
								</rul:When>
								<rul:Otherwise>
									<rul:Constant Type="integer">0</rul:Constant>
								</rul:Otherwise>
							</rul:Choose>
						</rul:Then>
						<rul:Else>
							<rul:Constant Type="integer">0</rul:Constant>
						</rul:Else>
					</rul:If>
				</rul:Arg>
				<rul:Value Type="integer" ToDataDef="@WindstormHailDollarAmt" FromParam="calcWindstormHailDollarAmt" />
			</rul:WithArgs>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetDeductibleAsNumber" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:NotExist AtInputDataDef="CommercialPropertyWindstormOrHailExclusionSpecialClassTable/CommercialPropertyWindstormOrHailExclusionSpecialClass" />
						<rul:NotEqual>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">Not Applicable</rul:Constant>
						</rul:NotEqual>
						<rul:NotEqual>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string"></rul:Constant>
						</rul:NotEqual>
						<rul:NotEqual>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">1%</rul:Constant>
						</rul:NotEqual>
						<rul:NotEqual>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">2%</rul:Constant>
						</rul:NotEqual>
						<rul:NotEqual>
							<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
							<rul:Constant Type="string">5%</rul:Constant>
						</rul:NotEqual>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:RunRule Type="integer" ToDataDef="@DeductibleAsNumber" FileName="CommercialPropertySpecialClassRules" Rule="LookupWindstormOrHailDeductibleAsNumber" ClearCache="true" />
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Constant Type="integer" ToDataDef="@DeductibleAsNumber">0</rul:Constant>
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetWindstormOrHailDeductibleStatCode" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Choose>
				<rul:When>
					<rul:Test>
						<rul:And>
							<rul:NotExist AtInputDataDef="CommercialPropertyWindstormOrHailExclusionSpecialClassTable/CommercialPropertyWindstormOrHailExclusionSpecialClass" />
							<rul:Or>
								<rul:Equal>
									<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
									<rul:Constant Type="string">1%</rul:Constant>
								</rul:Equal>
								<rul:Equal>
									<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
									<rul:Constant Type="string">2%</rul:Constant>
								</rul:Equal>
								<rul:Equal>
									<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
									<rul:Constant Type="string">5%</rul:Constant>
								</rul:Equal>
							</rul:Or>
						</rul:And>
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:RunRule Type="string" ToDataDef="@WindstormOrHailDeductibleStatCode" FileName="CommercialPropertySpecialClassRules" Rule="LookupWindstormOrHailDeductibleStatCode" ClearCache="true">
								<rul:Arg Type="integer" Param="deductible">
									<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@WindstormHailDollarAmt" Order="DataDefInputParamConstant" />
								</rul:Arg>
							</rul:RunRule>
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:When>
					<rul:Test>
						<rul:And>
							<rul:NotExist AtInputDataDef="CommercialPropertyWindstormOrHailExclusionSpecialClassTable/CommercialPropertyWindstormOrHailExclusionSpecialClass" />
							<rul:NotEqual>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Not Applicable</rul:Constant>
							</rul:NotEqual>
							<rul:NotEqual>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">1%</rul:Constant>
							</rul:NotEqual>
							<rul:NotEqual>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">2%</rul:Constant>
							</rul:NotEqual>
							<rul:NotEqual>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">5%</rul:Constant>
							</rul:NotEqual>
						</rul:And>
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:RunRule Type="string" ToDataDef="@WindstormOrHailDeductibleStatCode" FileName="CommercialPropertySpecialClassRules" Rule="LookupWindstormOrHailDeductibleStatCode" ClearCache="true">
								<rul:Arg Type="integer" Param="deductible">
									<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@DeductibleAsNumber" Order="DataDefInputParamConstant" />
								</rul:Arg>
							</rul:RunRule>
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:When>
					<rul:Test>
						<rul:And>
							<rul:NotExist AtInputDataDef="CommercialPropertyWindstormOrHailExclusionSpecialClassTable/CommercialPropertyWindstormOrHailExclusionSpecialClass" />
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Not Applicable</rul:Constant>
							</rul:Equal>
						</rul:And>
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:RunRule Type="string" ToDataDef="@WindstormOrHailDeductibleStatCode" FileName="CommercialPropertySpecialClassRules" Rule="LookupWindstormOrHailDeductibleStatCode" ClearCache="true">
								<rul:Arg Type="integer" Param="deductible">
									<rul:Constant Type="integer">0</rul:Constant>
								</rul:Arg>
							</rul:RunRule>
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:Otherwise>
					<rul:Sequence>
						<rul:Constant Type="string" ToDataDef="@WindstormOrHailDeductibleStatCode"></rul:Constant>
					</rul:Sequence>
				</rul:Otherwise>
			</rul:Choose>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetAllOtherDeductibleStatCode" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:Or>
						<rul:And>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@CauseOfLossToUse" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Basic</rul:Constant>
							</rul:Equal>
							<rul:NotExist AtInputDataDef="CommercialPropertyWindstormOrHailExclusionSpecialClassTable/CommercialPropertyWindstormOrHailExclusionSpecialClass" />
						</rul:And>
						<rul:And>
							<rul:Or>
								<rul:Equal>
									<rul:FirstValue Type="string" FromConstant="" FromDataDef="@CauseOfLossToUse" Order="DataDefInputParamConstant" />
									<rul:Constant Type="string">Broad</rul:Constant>
								</rul:Equal>
								<rul:Equal>
									<rul:FirstValue Type="string" FromConstant="" FromDataDef="@CauseOfLossToUse" Order="DataDefInputParamConstant" />
									<rul:Constant Type="string">Special</rul:Constant>
								</rul:Equal>
							</rul:Or>
							<rul:NotEqual>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@Deductible" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string"></rul:Constant>
							</rul:NotEqual>
						</rul:And>
					</rul:Or>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:RunRule Type="string" ToDataDef="@AllOtherDeductibleStatCode" FileName="CommercialPropertySpecialClassRules" Rule="LookupAllOtherDeductibleStatCode" ClearCache="true" />
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Constant Type="string" ToDataDef="@AllOtherDeductibleStatCode"></rul:Constant>
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetCoinsuranceStatCode" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:Choose>
				<rul:When>
					<rul:Test>
						<rul:And>
							<rul:NotEqual>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@Coinsurance" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string"></rul:Constant>
							</rul:NotEqual>
							<rul:NotEqual>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@Coinsurance" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Blanket Coinsurance Percentage Applies</rul:Constant>
							</rul:NotEqual>
							<rul:NotEqual>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@Coinsurance" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">None</rul:Constant>
							</rul:NotEqual>
							<rul:NotEqual>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@Coinsurance" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Not Applicable</rul:Constant>
							</rul:NotEqual>
						</rul:And>
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:RunRule Type="string" ToDataDef="@CoinsuranceStatCode" FileName="CommercialPropertySpecialClassRules" Rule="LookupCoinsuranceStatCode" ClearCache="true">
								<rul:Arg Type="string" Param="coinsurance">
									<rul:FirstValue Type="string" FromConstant="" FromDataDef="@Coinsurance" Order="DataDefInputParamConstant" />
								</rul:Arg>
							</rul:RunRule>
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:When>
					<rul:Test>
						<rul:Or>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@Coinsurance" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">None</rul:Constant>
							</rul:Equal>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@Coinsurance" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Not Applicable</rul:Constant>
							</rul:Equal>
						</rul:Or>
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:RunRule Type="string" ToDataDef="@CoinsuranceStatCode" FileName="CommercialPropertySpecialClassRules" Rule="LookupCoinsuranceStatCode" ClearCache="true">
								<rul:Arg Type="string" Param="coinsurance">
									<rul:Constant Type="string">No Coinsurance</rul:Constant>
								</rul:Arg>
							</rul:RunRule>
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:When>
					<rul:Test>
						<rul:And>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@Coinsurance" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Blanket Coinsurance Percentage Applies</rul:Constant>
							</rul:Equal>
							<rul:NotEqual>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@BlktCoinsuranceValue" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Not Applicable</rul:Constant>
							</rul:NotEqual>
							<rul:NotEqual>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@BlktCoinsuranceValue" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">None - Lumberyard Property</rul:Constant>
							</rul:NotEqual>
						</rul:And>
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:RunRule Type="string" ToDataDef="@CoinsuranceStatCode" FileName="CommercialPropertySpecialClassRules" Rule="LookupCoinsuranceStatCode" ClearCache="true">
								<rul:Arg Type="string" Param="coinsurance">
									<rul:FirstValue Type="string" FromConstant="" FromDataDef="@BlktCoinsuranceValue" Order="DataDefInputParamConstant" />
								</rul:Arg>
							</rul:RunRule>
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:When>
					<rul:Test>
						<rul:And>
							<rul:Equal>
								<rul:FirstValue Type="string" FromConstant="" FromDataDef="@Coinsurance" Order="DataDefInputParamConstant" />
								<rul:Constant Type="string">Blanket Coinsurance Percentage Applies</rul:Constant>
							</rul:Equal>
							<rul:Or>
								<rul:Equal>
									<rul:FirstValue Type="string" FromConstant="" FromDataDef="@BlktCoinsuranceValue" Order="DataDefInputParamConstant" />
									<rul:Constant Type="string">Not Applicable</rul:Constant>
								</rul:Equal>
								<rul:Equal>
									<rul:FirstValue Type="string" FromConstant="" FromDataDef="@BlktCoinsuranceValue" Order="DataDefInputParamConstant" />
									<rul:Constant Type="string">None - Lumberyard Property</rul:Constant>
								</rul:Equal>
							</rul:Or>
						</rul:And>
					</rul:Test>
					<rul:Then>
						<rul:Sequence>
							<rul:RunRule Type="string" ToDataDef="@CoinsuranceStatCode" FileName="CommercialPropertySpecialClassRules" Rule="LookupCoinsuranceStatCode" ClearCache="true">
								<rul:Arg Type="string" Param="coinsurance">
									<rul:Constant Type="string">No Coinsurance</rul:Constant>
								</rul:Arg>
							</rul:RunRule>
						</rul:Sequence>
					</rul:Then>
				</rul:When>
				<rul:Otherwise>
					<rul:Sequence>
						<rul:Constant Type="string" ToDataDef="@CoinsuranceStatCode"></rul:Constant>
					</rul:Sequence>
				</rul:Otherwise>
			</rul:Choose>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetExposureStatAmount" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:WithArgs>
				<rul:Arg Type="integer" Param="calcExposureStatAmount">
					<rul:FirstNonNull Type="integer">
						<rul:Choose>
							<rul:When>
								<rul:Test>
									<rul:Equal>
										<rul:FirstValue Type="string" FromConstant="" FromDataDef="@IncludedInBlkt" Order="DataDefInputParamConstant" />
										<rul:Constant Type="string">No</rul:Constant>
									</rul:Equal>
								</rul:Test>
								<rul:Then>
									<rul:Convert Type="integer">
										<rul:Truncate>
											<rul:Divide>
												<rul:Value Type="integer" FromDataDef="@Limit" />
												<rul:Constant Type="integer">1000</rul:Constant>
											</rul:Divide>
										</rul:Truncate>
									</rul:Convert>
								</rul:Then>
							</rul:When>
							<rul:When>
								<rul:Test>
									<rul:Equal>
										<rul:FirstValue Type="string" FromConstant="" FromDataDef="@IncludedInBlkt" Order="DataDefInputParamConstant" />
										<rul:Constant Type="string">Yes</rul:Constant>
									</rul:Equal>
								</rul:Test>
								<rul:Then>
									<rul:Truncate>
										<rul:Divide DecimalPlaces="0">
											<rul:Product>
												<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@BlktLimit" Order="DataDefInputParamConstant" />
												<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="@BlktProportion" Order="DataDefInputParamConstant" />
											</rul:Product>
											<rul:Constant Type="integer">1000</rul:Constant>
										</rul:Divide>
									</rul:Truncate>
								</rul:Then>
							</rul:When>
							<rul:Otherwise>
								<rul:Constant Type="integer">0</rul:Constant>
							</rul:Otherwise>
						</rul:Choose>
						<rul:Constant Type="integer">0</rul:Constant>
					</rul:FirstNonNull>
				</rul:Arg>
				<rul:Value Type="integer" ToDataDef="@ExposureStatAmount" FromParam="calcExposureStatAmount" />
			</rul:WithArgs>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetStatSpecialClassPremium" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:WithArgs>
				<rul:Arg Type="decimal" Param="calcStatSpecialClassPremium">
					<rul:FirstNonNull Type="decimal">
						<rul:Sum>
							<rul:Value Type="decimal" FromDataDef="CommercialPropertySpecialClassBasicGroupICoverage/@Premium" />
							<rul:Value Type="decimal" FromDataDef="CommercialPropertySpecialClassBasicGroupIICoverage/@Premium" />
							<rul:Value Type="decimal" FromDataDef="CommercialPropertySpecialClassBroadCoverage/@Premium" />
							<rul:Value Type="decimal" FromDataDef="CommercialPropertySpecialClassSpecialCoverage/@Premium" />
						</rul:Sum>
						<rul:Constant Type="decimal">0</rul:Constant>
					</rul:FirstNonNull>
				</rul:Arg>
				<rul:Value Type="decimal" ToDataDef="@StatSpecialClassPremium" FromParam="calcStatSpecialClassPremium" />
			</rul:WithArgs>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetGreenUpgradesExposureStatCode" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:Exist AtInputDataDef="CommercialPropertyIncreasedCostOfLossAndRelatedExpensesForGreenUpgradesEndtSpecialClassTable/CommercialPropertyIncreasedCostOfLossAndRelatedExpensesForGreenUpgradesEndtSpecialClass" />
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:If>
							<rul:Test>
								<rul:GreaterThan>
									<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="CommercialPropertyIncreasedCostOfLossAndRelatedExpensesForGreenUpgradesEndtSpecialClassTable/CommercialPropertyIncreasedCostOfLossAndRelatedExpensesForGreenUpgradesEndtSpecialClass[1]/@Limit" Order="DataDefInputParamConstant" />
									<rul:Constant Type="integer">0</rul:Constant>
								</rul:GreaterThan>
							</rul:Test>
							<rul:Then>
								<rul:Sequence>
									<rul:Truncate ToDataDef="@GreenUpgradeExposureStatCode">
										<rul:Divide DecimalPlaces="0">
											<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="CommercialPropertyIncreasedCostOfLossAndRelatedExpensesForGreenUpgradesEndtSpecialClassTable/CommercialPropertyIncreasedCostOfLossAndRelatedExpensesForGreenUpgradesEndtSpecialClass[1]/@Limit" Order="DataDefInputParamConstant" />
											<rul:Constant Type="decimal">1000</rul:Constant>
										</rul:Divide>
									</rul:Truncate>
								</rul:Sequence>
							</rul:Then>
						</rul:If>
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Constant Type="integer" ToDataDef="@GreenUpgradeExposureStatCode">0</rul:Constant>
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetNonGreenUpgradeStatCode" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:NotExist AtInputDataDef="CommercialPropertyIncreasedCostOfLossAndRelatedExpensesForGreenUpgradesEndtSpecialClassTable/CommercialPropertyIncreasedCostOfLossAndRelatedExpensesForGreenUpgradesEndtSpecialClass" />
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:RunRule Type="integer" ToDataDef="@NonGreenUpgradeStatCode" FileName="CommercialPropertySpecialClassRules" Rule="LookupNonGreenUpgradeStatCode" ClearCache="true" />
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Constant Type="integer" ToDataDef="@NonGreenUpgradeStatCode">0</rul:Constant>
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetIncreasedCostOfLossPctToUseStatSpCl" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:And>
						<rul:Exist AtInputDataDef="CommercialPropertyIncreasedCostOfLossAndRelatedExpensesForGreenUpgradesEndtSpecialClassTable/CommercialPropertyIncreasedCostOfLossAndRelatedExpensesForGreenUpgradesEndtSpecialClass" />
						<rul:IsNotNull>
							<rul:Value Type="decimal" FromDataDef="CommercialPropertyIncreasedCostOfLossAndRelatedExpensesForGreenUpgradesEndtSpecialClassTable/CommercialPropertyIncreasedCostOfLossAndRelatedExpensesForGreenUpgradesEndtSpecialClass[1]/@IncreasedCostOfLossPercentConverted" />
						</rul:IsNotNull>
					</rul:And>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:Convert Type="integer" ToDataDef="@IncreasedCostOfLossPctToUseStatSpCl">
							<rul:Product DecimalPlaces="0">
								<rul:FirstValue Type="decimal" FromConstant="0" FromDataDef="CommercialPropertyIncreasedCostOfLossAndRelatedExpensesForGreenUpgradesEndtSpecialClassTable/CommercialPropertyIncreasedCostOfLossAndRelatedExpensesForGreenUpgradesEndtSpecialClass[1]/@IncreasedCostOfLossPercentConverted" Order="DataDefInputParamConstant" />
								<rul:Constant Type="decimal">100</rul:Constant>
							</rul:Product>
						</rul:Convert>
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Constant Type="integer" ToDataDef="@IncreasedCostOfLossPctToUseStatSpCl">0</rul:Constant>
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetIncreasedCostOfLossPctStatCode" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:Exist AtInputDataDef="CommercialPropertyIncreasedCostOfLossAndRelatedExpensesForGreenUpgradesEndtSpecialClassTable/CommercialPropertyIncreasedCostOfLossAndRelatedExpensesForGreenUpgradesEndtSpecialClass" />
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:If>
							<rul:Test>
								<rul:And>
									<rul:IsNotNull>
										<rul:FirstValue Type="string" FromConstant="" FromDataDef="CommercialPropertyIncreasedCostOfLossAndRelatedExpensesForGreenUpgradesEndtSpecialClassTable/CommercialPropertyIncreasedCostOfLossAndRelatedExpensesForGreenUpgradesEndtSpecialClass[1]/@IncreasedCostOfLossPct" Order="DataDefInputParamConstant" />
									</rul:IsNotNull>
									<rul:NotEqual>
										<rul:FirstValue Type="string" FromConstant="" FromDataDef="CommercialPropertyIncreasedCostOfLossAndRelatedExpensesForGreenUpgradesEndtSpecialClassTable/CommercialPropertyIncreasedCostOfLossAndRelatedExpensesForGreenUpgradesEndtSpecialClass[1]/@IncreasedCostOfLossPct" Order="DataDefInputParamConstant" />
										<rul:Constant Type="string"></rul:Constant>
									</rul:NotEqual>
									<rul:NotEqual>
										<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@IncreasedCostOfLossPctToUseStatSpCl" Order="DataDefInputParamConstant" />
										<rul:Constant Type="integer">0</rul:Constant>
									</rul:NotEqual>
								</rul:And>
							</rul:Test>
							<rul:Then>
								<rul:Sequence>
									<rul:RunRule Type="integer" ToDataDef="@IncreasedCostOfLossPctStatCode" FileName="CommercialPropertySpecialClassRules" Rule="LookupIncreasedCostOfLossPctStatCode" ClearCache="true" />
								</rul:Sequence>
							</rul:Then>
						</rul:If>
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Constant Type="integer" ToDataDef="@IncreasedCostOfLossPctStatCode">0</rul:Constant>
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetRelatedExpensesStatCode" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:Exist AtInputDataDef="CommercialPropertyIncreasedCostOfLossAndRelatedExpensesForGreenUpgradesEndtSpecialClassTable/CommercialPropertyIncreasedCostOfLossAndRelatedExpensesForGreenUpgradesEndtSpecialClass" />
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:If>
							<rul:Test>
								<rul:GreaterThan>
									<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="CommercialPropertyIncreasedCostOfLossAndRelatedExpensesForGreenUpgradesEndtSpecialClassTable/CommercialPropertyIncreasedCostOfLossAndRelatedExpensesForGreenUpgradesEndtSpecialClass[1]/@RelatedExpenses" Order="DataDefInputParamConstant" />
									<rul:Constant Type="integer">0</rul:Constant>
								</rul:GreaterThan>
							</rul:Test>
							<rul:Then>
								<rul:Sequence>
									<rul:RunRule Type="integer" ToDataDef="@RelatedExpensesStatCode" FileName="CommercialPropertySpecialClassRules" Rule="LookupRelatedExpensesStatCode" ClearCache="true" />
								</rul:Sequence>
							</rul:Then>
						</rul:If>
					</rul:Sequence>
				</rul:Then>
				<rul:Else>
					<rul:Sequence>
						<rul:Constant Type="integer" ToDataDef="@RelatedExpensesStatCode">0</rul:Constant>
					</rul:Sequence>
				</rul:Else>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="SetBldgCodeEffectivenessGradeStatCode" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:If>
				<rul:Test>
					<rul:NotEqual>
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@CovForm" Order="DataDefInputParamConstant" />
						<rul:Constant Type="string"></rul:Constant>
					</rul:NotEqual>
				</rul:Test>
				<rul:Then>
					<rul:Sequence>
						<rul:RunRule Type="string" ToDataDef="@BldgCodeEffectivenessGradeStatCode" FileName="CommercialPropertySpecialClassRules" Rule="LookupBldgCodeEffectivenessGradeStatCode" ClearCache="true" />
					</rul:Sequence>
				</rul:Then>
			</rul:If>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="ErcSetBlanketRatesAndFactors" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="SetBlanketRatesAndFactors" ClearCache="true" />
			<rul:ForEach AtDataDef="CommercialPropertySpecialClassBusnIncomeTable/CommercialPropertySpecialClassBusnIncome">
				<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassBusnIncomeRules" Rule="ErcSetBlanketRatesAndFactors" ClearCache="true" />
			</rul:ForEach>
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="ErcProcess" Type="none" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Sequence>
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="ErcDoConditionalMandatoryLogic" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="ErcSetRatesAndFactors" ClearCache="true" />
			<rul:ForEach AtDataDef="CommercialPropertyAdditionalCoveredPropertySpecialClassTable/CommercialPropertyAdditionalCoveredPropertySpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyAdditionalCoveredPropertySpecialClassRules" Rule="ErcProcess" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyAdditionalPropertyNotCoveredSpecialClassTable/CommercialPropertyAdditionalPropertyNotCoveredSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyAdditionalPropertyNotCoveredSpecialClassRules" Rule="ErcProcess" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyBuildingAndPersonalPropertyCoverageFormSpecialClassTable/CommercialPropertyBuildingAndPersonalPropertyCoverageFormSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyBuildingAndPersonalPropertyCoverageFormSpecialClassRules" Rule="ErcProcess" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyCannabisExclusionSpecialClassTable/CommercialPropertyCannabisExclusionSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyCannabisExclusionSpecialClassRules" Rule="ErcProcess" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyCannabisExclusionWithHempExceptionSpecialClassTable/CommercialPropertyCannabisExclusionWithHempExceptionSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyCannabisExclusionWithHempExceptionSpecialClassRules" Rule="ErcProcess" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyCauseOfLossBasicFormSpecialClassTable/CommercialPropertyCauseOfLossBasicFormSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyCauseOfLossBasicFormSpecialClassRules" Rule="ErcProcess" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyCauseOfLossBroadFormSpecialClassTable/CommercialPropertyCauseOfLossBroadFormSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyCauseOfLossBroadFormSpecialClassRules" Rule="ErcProcess" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyCauseOfLossSpecialFormSpecialClassTable/CommercialPropertyCauseOfLossSpecialFormSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyCauseOfLossSpecialFormSpecialClassRules" Rule="ErcProcess" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyCondominiumAssociationChangesStandardPropertyPolicyEndtSpecialClassTable/CommercialPropertyCondominiumAssociationChangesStandardPropertyPolicyEndtSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyCondominiumAssociationChangesStandardPropertyPolicyEndtSpecialClassRules" Rule="ErcProcess" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyCondominiumAssociationCoverageFormSpecialClassTable/CommercialPropertyCondominiumAssociationCoverageFormSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyCondominiumAssociationCoverageFormSpecialClassRules" Rule="ErcProcess" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyCondominiumCommercialUnitOwnersChangesStandardPropertyPolicySpecialClassTable/CommercialPropertyCondominiumCommercialUnitOwnersChangesStandardPropertyPolicySpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyCondominiumCommercialUnitOwnersChangesStandardPropertyPolicySpecialClassRules" Rule="ErcProcess" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyCondominiumCommercialUnitOwnersCoverageFormSpecialClassTable/CommercialPropertyCondominiumCommercialUnitOwnersCoverageFormSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyCondominiumCommercialUnitOwnersCoverageFormSpecialClassRules" Rule="ErcProcess" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyContributingInsuranceSpecialClassTable/CommercialPropertyContributingInsuranceSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyContributingInsuranceSpecialClassRules" Rule="ErcProcess" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyDebrisRemovalAdditionalInsuranceSpecialClassTable/CommercialPropertyDebrisRemovalAdditionalInsuranceSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyDebrisRemovalAdditionalInsuranceSpecialClassRules" Rule="ErcProcess" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyDeductiblesByLocationSpecialClassTable/CommercialPropertyDeductiblesByLocationSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyDeductiblesByLocationSpecialClassRules" Rule="ErcProcess" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyDischargeFromSewerDrainOrSumpNotFloodReltdSpclClassTable/CommercialPropertyDischargeFromSewerDrainOrSumpNotFloodReltdSpclClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyDischargeFromSewerDrainOrSumpNotFloodReltdSpclClassRules" Rule="ErcProcess" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionCoverageSubLimitFormWithFlatDollarDeductibleSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionCoverageSubLimitFormWithFlatDollarDeductibleSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyEarthquakeAndVolcanicEruptionCoverageSubLimitFormWithFlatDollarDeductibleSpecialClassRules" Rule="ErcProcess" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionCoverageWithFlatDollarDeductibleSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionCoverageWithFlatDollarDeductibleSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyEarthquakeAndVolcanicEruptionCoverageWithFlatDollarDeductibleSpecialClassRules" Rule="ErcProcess" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSpecialClassRules" Rule="ErcProcess" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSubLimitFormSpecialClassTable/CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSubLimitFormSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyEarthquakeAndVolcanicEruptionEndorsementSubLimitFormSpecialClassRules" Rule="ErcProcess" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyExclusionOfLossDueToByProductsOfProductionORProcessingOperationsFormSpecialClassTable/CommercialPropertyExclusionOfLossDueToByProductsOfProductionORProcessingOperationsFormSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyExclusionOfLossDueToByProductsOfProductionORProcessingOperationsFormSpecialClassRules" Rule="ErcProcess" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyFloodCoverageEndorsementSpecialClassTable/CommercialPropertyFloodCoverageEndorsementSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyFloodCoverageEndorsementSpecialClassRules" Rule="ErcProcess" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyIncreasedCostOfLossAndRelatedExpensesForGreenUpgradesEndtSpecialClassTable/CommercialPropertyIncreasedCostOfLossAndRelatedExpensesForGreenUpgradesEndtSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyIncreasedCostOfLossAndRelatedExpensesForGreenUpgradesEndtSpecialClassRules" Rule="ErcProcess" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyIncreaseInRebuildingExpensesFollowingDisasterSpecialClassTable/CommercialPropertyIncreaseInRebuildingExpensesFollowingDisasterSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyIncreaseInRebuildingExpensesFollowingDisasterSpecialClassRules" Rule="ErcProcess" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyJointOrDisputedLossAgreementSpecialClassTable/CommercialPropertyJointOrDisputedLossAgreementSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyJointOrDisputedLossAgreementSpecialClassRules" Rule="ErcProcess" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyLimitedCoverageForUnmannedAircraftScheduledAndOrBlanketCoverageSpecialClassTable/CommercialPropertyLimitedCoverageForUnmannedAircraftScheduledAndOrBlanketCoverageSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyLimitedCoverageForUnmannedAircraftScheduledAndOrBlanketCoverageSpecialClassRules" Rule="ErcProcess" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyMultipleDeductibleFormFixedDollarDeductiblesSpecialClassTable/CommercialPropertyMultipleDeductibleFormFixedDollarDeductiblesSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyMultipleDeductibleFormFixedDollarDeductiblesSpecialClassRules" Rule="ErcProcess" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyOutsideSignsSpecialClassTable/CommercialPropertyOutsideSignsSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyOutsideSignsSpecialClassRules" Rule="ErcProcess" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyPierAndWharfAdditionalCoveredCausesOfLossSpecialClassTable/CommercialPropertyPierAndWharfAdditionalCoveredCausesOfLossSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyPierAndWharfAdditionalCoveredCausesOfLossSpecialClassRules" Rule="ErcProcess" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyRadioactiveContaminationSpecialClassTable/CommercialPropertyRadioactiveContaminationSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyRadioactiveContaminationSpecialClassRules" Rule="ErcProcess" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyRadioOrTelevisionAntennasSpecialClassTable/CommercialPropertyRadioOrTelevisionAntennasSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyRadioOrTelevisionAntennasSpecialClassRules" Rule="ErcProcess" ClearCache="true" />
			</rul:ForEach>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassAgreedValBasicGroupICoverage">
				<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassAgreedValBasicGroupICoverageRules" Rule="ErcProcess" ClearCache="true" />
			</rul:Locate>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassAgreedValBasicGroupIICoverage">
				<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassAgreedValBasicGroupIICoverageRules" Rule="ErcProcess" ClearCache="true" />
			</rul:Locate>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassAgreedValBroadCoverage">
				<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassAgreedValBroadCoverageRules" Rule="ErcProcess" ClearCache="true" />
			</rul:Locate>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassAgreedValCoverage">
				<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassAgreedValCoverageRules" Rule="ErcProcess" ClearCache="true" />
			</rul:Locate>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassAgreedValEarthquakeCoverage">
				<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassAgreedValEarthquakeCoverageRules" Rule="ErcProcess" ClearCache="true" />
			</rul:Locate>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassAgreedValSpecialCoverage">
				<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassAgreedValSpecialCoverageRules" Rule="ErcProcess" ClearCache="true" />
			</rul:Locate>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassBasicGroupICoverage">
				<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassBasicGroupICoverageRules" Rule="ErcProcess" ClearCache="true" />
			</rul:Locate>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassBasicGroupIICoverage">
				<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassBasicGroupIICoverageRules" Rule="ErcProcess" ClearCache="true" />
			</rul:Locate>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassBroadCoverage">
				<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassBroadCoverageRules" Rule="ErcProcess" ClearCache="true" />
			</rul:Locate>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassSpecialCoverage">
				<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassSpecialCoverageRules" Rule="ErcProcess" ClearCache="true" />
			</rul:Locate>
			<rul:ForEach AtDataDef="CommercialPropertySpecialClassBusnIncomeTable/CommercialPropertySpecialClassBusnIncome">
				<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassBusnIncomeRules" Rule="ErcProcess" ClearCache="true" />
			</rul:ForEach>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassCoverage">
				<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassCoverageRules" Rule="ErcProcess" ClearCache="true" />
			</rul:Locate>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassInflationGuardBasicGroupICoverage">
				<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassInflationGuardBasicGroupICoverageRules" Rule="ErcProcess" ClearCache="true" />
			</rul:Locate>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassInflationGuardBasicGroupIICoverage">
				<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassInflationGuardBasicGroupIICoverageRules" Rule="ErcProcess" ClearCache="true" />
			</rul:Locate>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassInflationGuardBroadCoverage">
				<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassInflationGuardBroadCoverageRules" Rule="ErcProcess" ClearCache="true" />
			</rul:Locate>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassInflationGuardCoverage">
				<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassInflationGuardCoverageRules" Rule="ErcProcess" ClearCache="true" />
			</rul:Locate>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassInflationGuardEarthquakeCoverage">
				<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassInflationGuardEarthquakeCoverageRules" Rule="ErcProcess" ClearCache="true" />
			</rul:Locate>
			<rul:Locate AtDataDef="CommercialPropertySpecialClassInflationGuardSpecialCoverage">
				<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassInflationGuardSpecialCoverageRules" Rule="ErcProcess" ClearCache="true" />
			</rul:Locate>
			<rul:ForEach AtDataDef="CommercialPropertySpecialClassLimitationOnLossSettlementBlanketInsuranceMarginClauseTable/CommercialPropertySpecialClassLimitationOnLossSettlementBlanketInsuranceMarginClause">
				<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassLimitationOnLossSettlementBlanketInsuranceMarginClauseRules" Rule="ErcProcess" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyStatementOfValuesSpecialClassTable/CommercialPropertyStatementOfValuesSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyStatementOfValuesSpecialClassRules" Rule="ErcProcess" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyTheftExclusionSpecialClassTable/CommercialPropertyTheftExclusionSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyTheftExclusionSpecialClassRules" Rule="ErcProcess" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyUtilityServicesDirectDamageSpecialClassTable/CommercialPropertyUtilityServicesDirectDamageSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyUtilityServicesDirectDamageSpecialClassRules" Rule="ErcProcess" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyVandalismExclusionSpecialClassTable/CommercialPropertyVandalismExclusionSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyVandalismExclusionSpecialClassRules" Rule="ErcProcess" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyWatercraftExclusionSpecialClassTable/CommercialPropertyWatercraftExclusionSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyWatercraftExclusionSpecialClassRules" Rule="ErcProcess" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyWindstormOrHailExclusionSpecialClassTable/CommercialPropertyWindstormOrHailExclusionSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyWindstormOrHailExclusionSpecialClassRules" Rule="ErcProcess" ClearCache="true" />
			</rul:ForEach>
			<rul:ForEach AtDataDef="CommercialPropertyWindstormOrHailPercentageDeductibleSpecialClassTable/CommercialPropertyWindstormOrHailPercentageDeductibleSpecialClass">
				<rul:RunRule Type="none" FileName="CommercialPropertyWindstormOrHailPercentageDeductibleSpecialClassRules" Rule="ErcProcess" ClearCache="true" />
			</rul:ForEach>
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="ErcRate" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="ErcRunPostUnderwritingLogic" ClearCache="true" />
			<rul:RunRule Type="none" FileName="CommercialPropertySpecialClassRules" Rule="ErcSetStatisticalCodes" ClearCache="true" />
		</rul:Sequence>
	</rul:Rule>
	<rul:Rule Name="LookupMarginClauseFactor" Type="decimal" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="decimal">
			<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="MarginClauseRatingFactorDef" MatrixFromConstant="MarginClauseRatingFactor" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="@MarginClause" Order="DataDefInputParamConstant" />
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="MarginClauseRatingFactorDef" MatrixFromConstant="MarginClauseRatingFactor" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="@MarginClause" Order="DataDefInputParamConstant" />
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupAllOtherDeductibleStatCode" Type="string" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="string">
			<rul:Lookup Type="string" MatrixCol="Code" MatrixDef="AllOtherDeductibleStatCodeDef" MatrixFromConstant="AllOtherDeductibleStatCode" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="@Deductible" Order="DataDefInputParamConstant" />
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="string" MatrixCol="Code" MatrixDef="AllOtherDeductibleStatCodeDef" MatrixFromConstant="AllOtherDeductibleStatCode" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="@Deductible" Order="DataDefInputParamConstant" />
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupBasicGroupIIFlatCoinsuranceFactor" Type="decimal" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="decimal">
			<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="BasicGroupIIFlatCoinsuranceFactorDef" MatrixFromConstant="BasicGroupIIFlatCoinsuranceFactor" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:Constant Type="string">Y</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="BasicGroupIIFlatCoinsuranceFactorDef" MatrixFromConstant="BasicGroupIIFlatCoinsuranceFactor" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:Constant Type="string">Y</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupBasicGroupIIRate" Type="decimal" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="decimal">
			<rul:Lookup Type="decimal" MatrixCol="Rate" MatrixDef="BasicGroupIIRateDef" MatrixFromConstant="BasicGroupIIRate" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="@BasicGroupIIRatingTerr" Order="DataDefInputParamConstant" />
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="@BasicGroupIISymbol" Order="DataDefInputParamConstant" />
					<rul:Constant Type="string">Bldg</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="decimal" MatrixCol="Rate" MatrixDef="BasicGroupIIRateDef" MatrixFromConstant="BasicGroupIIRate" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="@BasicGroupIIRatingTerr" Order="DataDefInputParamConstant" />
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="@BasicGroupIISymbol" Order="DataDefInputParamConstant" />
					<rul:Constant Type="string">Bldg</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupBasicGroupIRateSpecialClass" Type="decimal" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="decimal">
			<rul:Lookup Type="decimal" MatrixCol="Rate" MatrixDef="BasicGroupIRateSpecialClassDef" MatrixFromConstant="BasicGroupIRateSpecialClass" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="@SpecialClassDescConvertedOption" Order="DataDefInputParamConstant" />
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="@ProtectionClassToUse" Order="DataDefInputParamConstant" />
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="decimal" MatrixCol="Rate" MatrixDef="BasicGroupIRateSpecialClassDef" MatrixFromConstant="BasicGroupIRateSpecialClass" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="@SpecialClassDescConvertedOption" Order="DataDefInputParamConstant" />
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="@ProtectionClassToUse" Order="DataDefInputParamConstant" />
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupBlktClassRatedRatingIdentificationCode" Type="string" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="string">
			<rul:Lookup Type="string" MatrixCol="Code" MatrixDef="BlktClassRatedRatingIdentificationCodeDef" MatrixFromConstant="BlktClassRatedRatingIdentificationCode" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:Constant Type="string">Y</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="string" MatrixCol="Code" MatrixDef="BlktClassRatedRatingIdentificationCodeDef" MatrixFromConstant="BlktClassRatedRatingIdentificationCode" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:Constant Type="string">Y</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupBroadFormBaseRate" Type="decimal" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="decimal">
			<rul:Lookup Type="decimal" MatrixCol="Rate" MatrixDef="BroadFormBaseRateDef" MatrixFromConstant="BroadFormBaseRate" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:Constant Type="string">Frame</rul:Constant>
					<rul:Constant Type="string">Bldg</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="decimal" MatrixCol="Rate" MatrixDef="BroadFormBaseRateDef" MatrixFromConstant="BroadFormBaseRate" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:Constant Type="string">Frame</rul:Constant>
					<rul:Constant Type="string">Bldg</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupBuildingCoverageCode" Type="string" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="string">
			<rul:Lookup Type="string" MatrixCol="Code" MatrixDef="BuildingCoverageCodeDef" MatrixFromConstant="BuildingCoverageCode" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:Constant Type="string">Y</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="string" MatrixCol="Code" MatrixDef="BuildingCoverageCodeDef" MatrixFromConstant="BuildingCoverageCode" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:Constant Type="string">Y</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupClassRatedRatingIdentificationCode" Type="string" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="string">
			<rul:Lookup Type="string" MatrixCol="Code" MatrixDef="ClassRatedRatingIdentificationCodeDef" MatrixFromConstant="ClassRatedRatingIdentificationCode" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:Constant Type="string">Y</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="string" MatrixCol="Code" MatrixDef="ClassRatedRatingIdentificationCodeDef" MatrixFromConstant="ClassRatedRatingIdentificationCode" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:Constant Type="string">Y</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupCoinsuranceFactor" Type="decimal" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="decimal">
			<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="CoinsuranceFactorDef" MatrixFromConstant="CoinsuranceFactor" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="@Coinsurance" Order="DataDefInputParamConstant" />
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="CoinsuranceFactorDef" MatrixFromConstant="CoinsuranceFactor" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="@Coinsurance" Order="DataDefInputParamConstant" />
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupBlktCoinsuranceFactor" Type="decimal" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="decimal">
			<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="CoinsuranceFactorDef" MatrixFromConstant="CoinsuranceFactor" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="@BlktCoinsuranceValue" Order="DataDefInputParamConstant" />
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="CoinsuranceFactorDef" MatrixFromConstant="CoinsuranceFactor" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="@BlktCoinsuranceValue" Order="DataDefInputParamConstant" />
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupEQCoinsuranceFactor" Type="decimal" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="decimal">
			<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="CoinsuranceFactorDef" MatrixFromConstant="CoinsuranceFactor" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQCoinsurance" Order="DataDefInputParamConstant" />
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="CoinsuranceFactorDef" MatrixFromConstant="CoinsuranceFactor" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQCoinsurance" Order="DataDefInputParamConstant" />
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupCoinsuranceStatCode" Type="string" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Param Name="coinsurance" Type="string" />
		<rul:FirstNonNull Type="string">
			<rul:Lookup Type="string" MatrixCol="Code" MatrixDef="CoinsuranceStatCodeDef" MatrixFromConstant="CoinsuranceStatCode" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:Value Type="string" FromParam="coinsurance" />
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="string" MatrixCol="Code" MatrixDef="CoinsuranceStatCodeDef" MatrixFromConstant="CoinsuranceStatCode" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:Value Type="string" FromParam="coinsurance" />
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupDeductible250Factor" Type="decimal" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Param Name="causeOfLoss" Type="string" />
		<rul:FirstNonNull Type="decimal">
			<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="Deductible250FactorDef" MatrixFromConstant="Deductible250Factor" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:Value Type="string" FromParam="causeOfLoss" />
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="Deductible250FactorDef" MatrixFromConstant="Deductible250Factor" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:Value Type="string" FromParam="causeOfLoss" />
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupDeductibleFactor" Type="decimal" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Param Name="ded" Type="string" />
		<rul:Param Name="limit" Type="integer" />
		<rul:Param Name="causeOfLoss" Type="string" />
		<rul:FirstNonNull Type="decimal">
			<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="DeductibleFactorDef" MatrixFromConstant="DeductibleFactor" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:Value Type="string" FromParam="ded" />
					<rul:Value Type="integer" FromParam="limit" />
					<rul:Value Type="string" FromParam="causeOfLoss" />
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="DeductibleFactorDef" MatrixFromConstant="DeductibleFactor" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:Value Type="string" FromParam="ded" />
					<rul:Value Type="integer" FromParam="limit" />
					<rul:Value Type="string" FromParam="causeOfLoss" />
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupLossCostMultiplierStatCode" Type="string" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Param Name="lossCostMultiplierStatCode" Type="string" />
		<rul:FirstNonNull Type="string">
			<rul:Lookup Type="string" MatrixCol="Code" MatrixDef="LossCostMultiplierStatCodeDef" MatrixFromConstant="LossCostMultiplierStatCode" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:Value Type="string" FromParam="lossCostMultiplierStatCode" />
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="string" MatrixCol="Code" MatrixDef="LossCostMultiplierStatCodeDef" MatrixFromConstant="LossCostMultiplierStatCode" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:Value Type="string" FromParam="lossCostMultiplierStatCode" />
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupDeductibleStatCode" Type="string" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="string">
			<rul:Lookup Type="string" MatrixCol="Code" MatrixDef="DeductibleStatCodeDef" MatrixFromConstant="DeductibleStatCode" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="@Deductible" Order="DataDefInputParamConstant" />
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="string" MatrixCol="Code" MatrixDef="DeductibleStatCodeDef" MatrixFromConstant="DeductibleStatCode" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="@Deductible" Order="DataDefInputParamConstant" />
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupEQSubLimitDeductibleTier1Table1" Type="decimal" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="decimal">
			<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="EQSubLimitDeductibleTierCWTableDef" MatrixFromConstant="EQSubLimitDeductibleTierCWTable" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:Constant Type="string">Y</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="EQSubLimitDeductibleTierCWTableDef" MatrixFromConstant="EQSubLimitDeductibleTierCWTable" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:Constant Type="string">Y</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupEQSubLimitDeductibleTier1Table2" Type="decimal" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="decimal">
			<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="EQSubLimitDeductibleTierCWTableDef" MatrixFromConstant="EQSubLimitDeductibleTierCWTable" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:Constant Type="string">Y</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="EQSubLimitDeductibleTierCWTableDef" MatrixFromConstant="EQSubLimitDeductibleTierCWTable" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:Constant Type="string">Y</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupEQSubLimitDeductibleTier2Table3" Type="decimal" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="decimal">
			<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="EQSubLimitDeductibleTierCWTableDef" MatrixFromConstant="EQSubLimitDeductibleTierCWTable" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:Constant Type="string">Y</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="EQSubLimitDeductibleTierCWTableDef" MatrixFromConstant="EQSubLimitDeductibleTierCWTable" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:Constant Type="string">Y</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupEQSubLimitDeductibleTier2Table4" Type="decimal" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="decimal">
			<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="EQSubLimitDeductibleTierCWTableDef" MatrixFromConstant="EQSubLimitDeductibleTierCWTable" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:Constant Type="string">Y</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="EQSubLimitDeductibleTierCWTableDef" MatrixFromConstant="EQSubLimitDeductibleTierCWTable" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:Constant Type="string">Y</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupEQSubLimitDeductibleTier3Table5" Type="decimal" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="decimal">
			<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="EQSubLimitDeductibleTierCWTableDef" MatrixFromConstant="EQSubLimitDeductibleTierCWTable" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:Constant Type="string">Y</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="EQSubLimitDeductibleTierCWTableDef" MatrixFromConstant="EQSubLimitDeductibleTierCWTable" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:Constant Type="string">Y</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupEQSubLimitDeductibleTier3Table6" Type="decimal" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="decimal">
			<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="EQSubLimitDeductibleTierCWTableDef" MatrixFromConstant="EQSubLimitDeductibleTierCWTable" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:Constant Type="string">Y</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="EQSubLimitDeductibleTierCWTableDef" MatrixFromConstant="EQSubLimitDeductibleTierCWTable" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:Constant Type="string">Y</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupEQPercentageDeductibleFactor" Type="decimal" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="decimal">
			<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="EQPercentageDeductibleFactorDef" MatrixFromConstant="EQPercentageDeductibleFactor" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQDeductibleTier" Order="DataDefInputParamConstant" />
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="EQPercentageDeductibleFactorDef" MatrixFromConstant="EQPercentageDeductibleFactor" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQDeductibleTier" Order="DataDefInputParamConstant" />
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupEQLossCostBldg" Type="decimal" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="decimal">
			<rul:Lookup Type="decimal" MatrixCol="LossCost" MatrixDef="EQLossCostBldgDef" MatrixFromConstant="EQLossCostBldg" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQTerr" Order="DataDefInputParamConstant" />
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="decimal" MatrixCol="LossCost" MatrixDef="EQLossCostBldgDef" MatrixFromConstant="EQLossCostBldg" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQTerr" Order="DataDefInputParamConstant" />
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupLessThan80PctMultiplicativeFactor" Type="decimal" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="decimal">
			<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="LessThan80PctMultiplicativeFactorDef" MatrixFromConstant="LessThan80PctMultiplicativeFactor" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:Constant Type="string">Y</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="LessThan80PctMultiplicativeFactorDef" MatrixFromConstant="LessThan80PctMultiplicativeFactor" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:Constant Type="string">Y</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupLowestBasicGroupIIRate" Type="decimal" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="decimal">
			<rul:Lookup Type="decimal" MatrixCol="Rate" MatrixDef="LowestBasicGroupIIRateDef" MatrixFromConstant="LowestBasicGroupIIRate" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="@BasicGroupIISymbol" Order="DataDefInputParamConstant" />
					<rul:Constant Type="string">Bldg</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="decimal" MatrixCol="Rate" MatrixDef="LowestBasicGroupIIRateDef" MatrixFromConstant="LowestBasicGroupIIRate" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="@BasicGroupIISymbol" Order="DataDefInputParamConstant" />
					<rul:Constant Type="string">Bldg</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupProtectionClassFactor" Type="decimal" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="decimal">
			<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="ProtectionClassFactorDef" MatrixFromConstant="ProtectionClassFactor" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="../../@ProtectClass" Order="DataDefInputParamConstant" />
					<rul:Constant Type="integer">1</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="ProtectionClassFactorDef" MatrixFromConstant="ProtectionClassFactor" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="../../@ProtectClass" Order="DataDefInputParamConstant" />
					<rul:Constant Type="integer">1</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupSpecialClassBasicGroupIINumber" Type="decimal" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="decimal">
			<rul:Lookup Type="decimal" MatrixCol="Value" MatrixDef="SpecialClassBasicGroupIINumberDef" MatrixFromConstant="SpecialClassBasicGroupIINumber" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="@ClassDescription" Order="DataDefInputParamConstant" />
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="decimal" MatrixCol="Value" MatrixDef="SpecialClassBasicGroupIINumberDef" MatrixFromConstant="SpecialClassBasicGroupIINumber" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="@ClassDescription" Order="DataDefInputParamConstant" />
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupSpecialClassDescriptionConvertedOption" Type="string" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="string">
			<rul:Lookup Type="string" MatrixCol="Value" MatrixDef="SpecialClassDescriptionConvertedOptionDef" MatrixFromConstant="SpecialClassDescriptionConvertedOption" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="@ClassDescription" Order="DataDefInputParamConstant" />
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="string" MatrixCol="Value" MatrixDef="SpecialClassDescriptionConvertedOptionDef" MatrixFromConstant="SpecialClassDescriptionConvertedOption" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="@ClassDescription" Order="DataDefInputParamConstant" />
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupSublineBasicGroupI" Type="string" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="string">
			<rul:Lookup Type="string" MatrixCol="Code" MatrixDef="SublineBasicGroupIDef" MatrixFromConstant="SublineBasicGroupI" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:Constant Type="string">Y</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="string" MatrixCol="Code" MatrixDef="SublineBasicGroupIDef" MatrixFromConstant="SublineBasicGroupI" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:Constant Type="string">Y</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupSublineBasicGroupIExcludingVandalism" Type="string" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="string">
			<rul:Lookup Type="string" MatrixCol="Code" MatrixDef="SublineBasicGroupIExcludingVandalismDef" MatrixFromConstant="SublineBasicGroupIExcludingVandalism" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:Constant Type="string">Y</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="string" MatrixCol="Code" MatrixDef="SublineBasicGroupIExcludingVandalismDef" MatrixFromConstant="SublineBasicGroupIExcludingVandalism" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:Constant Type="string">Y</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupSublineBasicGroupII" Type="string" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="string">
			<rul:Lookup Type="string" MatrixCol="Code" MatrixDef="SublineBasicGroupIIDef" MatrixFromConstant="SublineBasicGroupII" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:Constant Type="string">Y</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="string" MatrixCol="Code" MatrixDef="SublineBasicGroupIIDef" MatrixFromConstant="SublineBasicGroupII" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:Constant Type="string">Y</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupSublineBasicGroupIIExcludingWindstormOrHail" Type="string" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="string">
			<rul:Lookup Type="string" MatrixCol="Code" MatrixDef="SublineBasicGroupIIExcludingWindstormOrHailDef" MatrixFromConstant="SublineBasicGroupIIExcludingWindstormOrHail" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:Constant Type="string">Y</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="string" MatrixCol="Code" MatrixDef="SublineBasicGroupIIExcludingWindstormOrHailDef" MatrixFromConstant="SublineBasicGroupIIExcludingWindstormOrHail" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:Constant Type="string">Y</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupSublineBroadForm" Type="string" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="string">
			<rul:Lookup Type="string" MatrixCol="Code" MatrixDef="SublineBroadFormDef" MatrixFromConstant="SublineBroadForm" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:Constant Type="string">Y</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="string" MatrixCol="Code" MatrixDef="SublineBroadFormDef" MatrixFromConstant="SublineBroadForm" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:Constant Type="string">Y</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupSublineSpecialFormExcludingTheft" Type="string" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="string">
			<rul:Lookup Type="string" MatrixCol="Code" MatrixDef="SublineSpecialFormExcludingTheftDef" MatrixFromConstant="SublineSpecialFormExcludingTheft" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:Constant Type="string">Y</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="string" MatrixCol="Code" MatrixDef="SublineSpecialFormExcludingTheftDef" MatrixFromConstant="SublineSpecialFormExcludingTheft" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:Constant Type="string">Y</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupSublineSpecialFormIncludingTheft" Type="string" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="string">
			<rul:Lookup Type="string" MatrixCol="Code" MatrixDef="SublineSpecialFormIncludingTheftDef" MatrixFromConstant="SublineSpecialFormIncludingTheft" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:Constant Type="string">Y</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="string" MatrixCol="Code" MatrixDef="SublineSpecialFormIncludingTheftDef" MatrixFromConstant="SublineSpecialFormIncludingTheft" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:Constant Type="string">Y</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupTerrorismSubLimitFactor" Type="decimal" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="decimal">
			<rul:Round DecimalPlaces="4">
				<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="TerrorismSubLimitFactorDef" MatrixFromConstant="TerrorismSubLimitFactor" ResultMode="FirstResult">
					<rul:Keys>
						<rul:Value Type="string" FromDataDef="/State/@Code" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@TerrorismSubLimit" Order="DataDefInputParamConstant" />
					</rul:Keys>
				</rul:Lookup>
			</rul:Round>
			<rul:Round DecimalPlaces="4">
				<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="TerrorismSubLimitFactorDef" MatrixFromConstant="TerrorismSubLimitFactor" ResultMode="SingleResult">
					<rul:Keys>
						<rul:Constant Type="string">CW</rul:Constant>
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@TerrorismSubLimit" Order="DataDefInputParamConstant" />
					</rul:Keys>
				</rul:Lookup>
			</rul:Round>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupVandalismExclusionFactor" Type="decimal" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="decimal">
			<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="VandalismExclFactorDef" MatrixFromConstant="VandalismExclFactor" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="@ClassCode" Order="DataDefInputParamConstant" />
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="VandalismExclFactorDef" MatrixFromConstant="VandalismExclFactor" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="@ClassCode" Order="DataDefInputParamConstant" />
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupWindstormOrHailDeductibleAsNumber" Type="integer" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="integer">
			<rul:Lookup Type="integer" MatrixCol="Number" MatrixDef="WindstormOrHailDeductibleAsNumberDef" MatrixFromConstant="WindstormOrHailDeductibleAsNumber" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="integer" MatrixCol="Number" MatrixDef="WindstormOrHailDeductibleAsNumberDef" MatrixFromConstant="WindstormOrHailDeductibleAsNumber" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupWindstormOrHailDeductibleFactor" Type="decimal" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="decimal">
			<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="WindstormOrHailDeductibleFactorDef" MatrixFromConstant="WindstormOrHailDeductibleFactor" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
					<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@WindstormOrHailTotAmtInsuranceToUse" Order="DataDefInputParamConstant" />
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="WindstormOrHailDeductibleFactorDef" MatrixFromConstant="WindstormOrHailDeductibleFactor" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="@WindstormOrHailDeductible" Order="DataDefInputParamConstant" />
					<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@WindstormOrHailTotAmtInsuranceToUse" Order="DataDefInputParamConstant" />
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupWindstormOrHailDeductibleStatCode" Type="string" DataDefGroup="CommercialPropertySpecialClass">
		<rul:Param Name="deductible" Type="integer" />
		<rul:FirstNonNull Type="string">
			<rul:Lookup Type="string" MatrixCol="Code" MatrixDef="WindstormOrHailDeductibleStatCodeDef" MatrixFromConstant="WindstormOrHailDeductibleStatCode" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:Value Type="integer" FromParam="deductible" />
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="string" MatrixCol="Code" MatrixDef="WindstormOrHailDeductibleStatCodeDef" MatrixFromConstant="WindstormOrHailDeductibleStatCode" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:Value Type="integer" FromParam="deductible" />
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupWindstormOrHailExclFactor" Type="decimal" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="decimal">
			<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="WindstormOrHailExclFactorDef" MatrixFromConstant="WindstormOrHailExclFactor" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="@BasicGroupIISymbol" Order="DataDefInputParamConstant" />
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="WindstormOrHailExclFactorDef" MatrixFromConstant="WindstormOrHailExclFactor" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="@BasicGroupIISymbol" Order="DataDefInputParamConstant" />
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupSpecialBuildingRate" Type="decimal" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="decimal">
			<rul:Lookup Type="decimal" MatrixCol="Rate" MatrixDef="SpecialBuildingRateDef" MatrixFromConstant="SpecialBuildingRate" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:Constant Type="string">Y</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="decimal" MatrixCol="Rate" MatrixDef="SpecialBuildingRateDef" MatrixFromConstant="SpecialBuildingRate" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:Constant Type="string">Y</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupSpecialBldgTheftExclusionFactor" Type="decimal" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="decimal">
			<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="SpecialBldgTheftExclusionFactorDef" MatrixFromConstant="SpecialBldgTheftExclusionFactor" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:Constant Type="string">Y</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="SpecialBldgTheftExclusionFactorDef" MatrixFromConstant="SpecialBldgTheftExclusionFactor" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:Constant Type="string">Y</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupNonGreenUpgradeStatCode" Type="integer" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="integer">
			<rul:Lookup Type="integer" MatrixCol="Code" MatrixDef="NonGreenUpgradeStatCodeDef" MatrixFromConstant="NonGreenUpgradeStatCode" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:Constant Type="string">Y</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="integer" MatrixCol="Code" MatrixDef="NonGreenUpgradeStatCodeDef" MatrixFromConstant="NonGreenUpgradeStatCode" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:Constant Type="string">Y</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupIncreasedCostOfLossPctStatCode" Type="integer" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="integer">
			<rul:Lookup Type="integer" MatrixCol="Code" MatrixDef="IncreasedCostOfLossPctStatCodeDef" MatrixFromConstant="IncreasedCostOfLossPctStatCode" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@IncreasedCostOfLossPctToUseStatSpCl" Order="DataDefInputParamConstant" />
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="integer" MatrixCol="Code" MatrixDef="IncreasedCostOfLossPctStatCodeDef" MatrixFromConstant="IncreasedCostOfLossPctStatCode" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@IncreasedCostOfLossPctToUseStatSpCl" Order="DataDefInputParamConstant" />
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupRelatedExpensesStatCode" Type="integer" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="integer">
			<rul:Lookup Type="integer" MatrixCol="Code" MatrixDef="RelatedExpensesStatCodeDef" MatrixFromConstant="RelatedExpensesStatCode" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:Constant Type="string">Y</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="integer" MatrixCol="Code" MatrixDef="RelatedExpensesStatCodeDef" MatrixFromConstant="RelatedExpensesStatCode" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:Constant Type="string">Y</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupDeductibleByLocationFactor" Type="decimal" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="decimal">
			<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="DeductibleByLocationFactorDef" MatrixFromConstant="DeductibleByLocationFactor" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:Constant Type="string">Y</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="DeductibleByLocationFactorDef" MatrixFromConstant="DeductibleByLocationFactor" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:Constant Type="string">Y</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupBldgCodeEffectivenessGradeStatCode" Type="string" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="string">
			<rul:Lookup Type="string" MatrixCol="Code" MatrixDef="BldgCodeEffectivenessGradeStatCodeDef" MatrixFromConstant="BldgCodeEffectivenessGradeStatCode" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:Constant Type="string">Not Graded</rul:Constant>
					<rul:Constant Type="string">Ungraded</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="string" MatrixCol="Code" MatrixDef="BldgCodeEffectivenessGradeStatCodeDef" MatrixFromConstant="BldgCodeEffectivenessGradeStatCode" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:Constant Type="string">Not Graded</rul:Constant>
					<rul:Constant Type="string">Ungraded</rul:Constant>
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupEQFlatDeductibleFactor" Type="decimal" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="decimal">
			<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="EQFlatDeductibleFactorDef" MatrixFromConstant="EQFlatDeductibleFactor" ResultMode="FirstResult">
				<rul:Keys>
					<rul:Value Type="string" FromDataDef="/State/@Code" />
					<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQDeductibleTier" Order="DataDefInputParamConstant" />
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
					<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="../../@EarthquakeTotalPropertyValue" Order="DataDefInputParamConstant" />
				</rul:Keys>
			</rul:Lookup>
			<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="EQFlatDeductibleFactorDef" MatrixFromConstant="EQFlatDeductibleFactor" ResultMode="SingleResult">
				<rul:Keys>
					<rul:Constant Type="string">CW</rul:Constant>
					<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQDeductibleTier" Order="DataDefInputParamConstant" />
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
					<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
					<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="../../@EarthquakeTotalPropertyValue" Order="DataDefInputParamConstant" />
				</rul:Keys>
			</rul:Lookup>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupEQSubLimit500FlatDeductibleFactor" Type="decimal" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="decimal">
			<rul:Round DecimalPlaces="4">
				<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="EQSubLimit500FlatDeductibleFactorDef" MatrixFromConstant="EQSubLimit500FlatDeductibleFactor" ResultMode="FirstResult">
					<rul:Keys>
						<rul:Value Type="string" FromDataDef="/State/@Code" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQDeductibleTier" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQSubLimitPercent" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="../../@EarthquakeTotalPropertyValue" Order="DataDefInputParamConstant" />
					</rul:Keys>
				</rul:Lookup>
			</rul:Round>
			<rul:Round DecimalPlaces="4">
				<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="EQSubLimit500FlatDeductibleFactorDef" MatrixFromConstant="EQSubLimit500FlatDeductibleFactor" ResultMode="SingleResult">
					<rul:Keys>
						<rul:Constant Type="string">CW</rul:Constant>
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQDeductibleTier" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQSubLimitPercent" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="../../@EarthquakeTotalPropertyValue" Order="DataDefInputParamConstant" />
					</rul:Keys>
				</rul:Lookup>
			</rul:Round>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupEQSubLimit1000FlatDeductibleFactor" Type="decimal" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="decimal">
			<rul:Round DecimalPlaces="4">
				<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="EQSubLimit1000FlatDeductibleFactorDef" MatrixFromConstant="EQSubLimit1000FlatDeductibleFactor" ResultMode="FirstResult">
					<rul:Keys>
						<rul:Value Type="string" FromDataDef="/State/@Code" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQDeductibleTier" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQSubLimitPercent" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="../../@EarthquakeTotalPropertyValue" Order="DataDefInputParamConstant" />
					</rul:Keys>
				</rul:Lookup>
			</rul:Round>
			<rul:Round DecimalPlaces="4">
				<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="EQSubLimit1000FlatDeductibleFactorDef" MatrixFromConstant="EQSubLimit1000FlatDeductibleFactor" ResultMode="SingleResult">
					<rul:Keys>
						<rul:Constant Type="string">CW</rul:Constant>
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQDeductibleTier" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQSubLimitPercent" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="../../@EarthquakeTotalPropertyValue" Order="DataDefInputParamConstant" />
					</rul:Keys>
				</rul:Lookup>
			</rul:Round>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupEQSubLimit2500FlatDeductibleFactor" Type="decimal" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="decimal">
			<rul:Round DecimalPlaces="4">
				<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="EQSubLimit2500FlatDeductibleFactorDef" MatrixFromConstant="EQSubLimit2500FlatDeductibleFactor" ResultMode="FirstResult">
					<rul:Keys>
						<rul:Value Type="string" FromDataDef="/State/@Code" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQDeductibleTier" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQSubLimitPercent" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="../../@EarthquakeTotalPropertyValue" Order="DataDefInputParamConstant" />
					</rul:Keys>
				</rul:Lookup>
			</rul:Round>
			<rul:Round DecimalPlaces="4">
				<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="EQSubLimit2500FlatDeductibleFactorDef" MatrixFromConstant="EQSubLimit2500FlatDeductibleFactor" ResultMode="SingleResult">
					<rul:Keys>
						<rul:Constant Type="string">CW</rul:Constant>
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQDeductibleTier" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQSubLimitPercent" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="../../@EarthquakeTotalPropertyValue" Order="DataDefInputParamConstant" />
					</rul:Keys>
				</rul:Lookup>
			</rul:Round>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupEQSubLimit5000FlatDeductibleFactor" Type="decimal" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="decimal">
			<rul:Round DecimalPlaces="4">
				<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="EQSubLimit5000FlatDeductibleFactorDef" MatrixFromConstant="EQSubLimit5000FlatDeductibleFactor" ResultMode="FirstResult">
					<rul:Keys>
						<rul:Value Type="string" FromDataDef="/State/@Code" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQDeductibleTier" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQSubLimitPercent" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="../../@EarthquakeTotalPropertyValue" Order="DataDefInputParamConstant" />
					</rul:Keys>
				</rul:Lookup>
			</rul:Round>
			<rul:Round DecimalPlaces="4">
				<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="EQSubLimit5000FlatDeductibleFactorDef" MatrixFromConstant="EQSubLimit5000FlatDeductibleFactor" ResultMode="SingleResult">
					<rul:Keys>
						<rul:Constant Type="string">CW</rul:Constant>
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQDeductibleTier" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQSubLimitPercent" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="../../@EarthquakeTotalPropertyValue" Order="DataDefInputParamConstant" />
					</rul:Keys>
				</rul:Lookup>
			</rul:Round>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupEQSubLimit10000FlatDeductibleFactor" Type="decimal" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="decimal">
			<rul:Round DecimalPlaces="4">
				<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="EQSubLimit10000FlatDeductibleFactorDef" MatrixFromConstant="EQSubLimit10000FlatDeductibleFactor" ResultMode="FirstResult">
					<rul:Keys>
						<rul:Value Type="string" FromDataDef="/State/@Code" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQDeductibleTier" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQSubLimitPercent" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="../../@EarthquakeTotalPropertyValue" Order="DataDefInputParamConstant" />
					</rul:Keys>
				</rul:Lookup>
			</rul:Round>
			<rul:Round DecimalPlaces="4">
				<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="EQSubLimit10000FlatDeductibleFactorDef" MatrixFromConstant="EQSubLimit10000FlatDeductibleFactor" ResultMode="SingleResult">
					<rul:Keys>
						<rul:Constant Type="string">CW</rul:Constant>
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQDeductibleTier" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQSubLimitPercent" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="../../@EarthquakeTotalPropertyValue" Order="DataDefInputParamConstant" />
					</rul:Keys>
				</rul:Lookup>
			</rul:Round>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupEQSubLimit25000FlatDeductibleFactor" Type="decimal" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="decimal">
			<rul:Round DecimalPlaces="4">
				<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="EQSubLimit25000FlatDeductibleFactorDef" MatrixFromConstant="EQSubLimit25000FlatDeductibleFactor" ResultMode="FirstResult">
					<rul:Keys>
						<rul:Value Type="string" FromDataDef="/State/@Code" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQDeductibleTier" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQSubLimitPercent" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="../../@EarthquakeTotalPropertyValue" Order="DataDefInputParamConstant" />
					</rul:Keys>
				</rul:Lookup>
			</rul:Round>
			<rul:Round DecimalPlaces="4">
				<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="EQSubLimit25000FlatDeductibleFactorDef" MatrixFromConstant="EQSubLimit25000FlatDeductibleFactor" ResultMode="SingleResult">
					<rul:Keys>
						<rul:Constant Type="string">CW</rul:Constant>
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQDeductibleTier" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQSubLimitPercent" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="../../@EarthquakeTotalPropertyValue" Order="DataDefInputParamConstant" />
					</rul:Keys>
				</rul:Lookup>
			</rul:Round>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupEQSubLimit50000FlatDeductibleFactor" Type="decimal" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="decimal">
			<rul:Round DecimalPlaces="4">
				<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="EQSubLimit50000FlatDeductibleFactorDef" MatrixFromConstant="EQSubLimit50000FlatDeductibleFactor" ResultMode="FirstResult">
					<rul:Keys>
						<rul:Value Type="string" FromDataDef="/State/@Code" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQDeductibleTier" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQSubLimitPercent" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="../../@EarthquakeTotalPropertyValue" Order="DataDefInputParamConstant" />
					</rul:Keys>
				</rul:Lookup>
			</rul:Round>
			<rul:Round DecimalPlaces="4">
				<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="EQSubLimit50000FlatDeductibleFactorDef" MatrixFromConstant="EQSubLimit50000FlatDeductibleFactor" ResultMode="SingleResult">
					<rul:Keys>
						<rul:Constant Type="string">CW</rul:Constant>
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQDeductibleTier" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQSubLimitPercent" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="../../@EarthquakeTotalPropertyValue" Order="DataDefInputParamConstant" />
					</rul:Keys>
				</rul:Lookup>
			</rul:Round>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupEQSubLimit75000FlatDeductibleFactor" Type="decimal" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="decimal">
			<rul:Round DecimalPlaces="4">
				<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="EQSubLimit75000FlatDeductibleFactorDef" MatrixFromConstant="EQSubLimit75000FlatDeductibleFactor" ResultMode="FirstResult">
					<rul:Keys>
						<rul:Value Type="string" FromDataDef="/State/@Code" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQDeductibleTier" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQSubLimitPercent" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="../../@EarthquakeTotalPropertyValue" Order="DataDefInputParamConstant" />
					</rul:Keys>
				</rul:Lookup>
			</rul:Round>
			<rul:Round DecimalPlaces="4">
				<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="EQSubLimit75000FlatDeductibleFactorDef" MatrixFromConstant="EQSubLimit75000FlatDeductibleFactor" ResultMode="SingleResult">
					<rul:Keys>
						<rul:Constant Type="string">CW</rul:Constant>
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQDeductibleTier" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQSubLimitPercent" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="../../@EarthquakeTotalPropertyValue" Order="DataDefInputParamConstant" />
					</rul:Keys>
				</rul:Lookup>
			</rul:Round>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupEQSubLimit100000FlatDeductibleFactor" Type="decimal" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="decimal">
			<rul:Round DecimalPlaces="4">
				<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="EQSubLimit100000FlatDeductibleFactorDef" MatrixFromConstant="EQSubLimit100000FlatDeductibleFactor" ResultMode="FirstResult">
					<rul:Keys>
						<rul:Value Type="string" FromDataDef="/State/@Code" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQDeductibleTier" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQSubLimitPercent" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="../../@EarthquakeTotalPropertyValue" Order="DataDefInputParamConstant" />
					</rul:Keys>
				</rul:Lookup>
			</rul:Round>
			<rul:Round DecimalPlaces="4">
				<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="EQSubLimit100000FlatDeductibleFactorDef" MatrixFromConstant="EQSubLimit100000FlatDeductibleFactor" ResultMode="SingleResult">
					<rul:Keys>
						<rul:Constant Type="string">CW</rul:Constant>
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQDeductibleTier" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQSubLimitPercent" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="../../@EarthquakeTotalPropertyValue" Order="DataDefInputParamConstant" />
					</rul:Keys>
				</rul:Lookup>
			</rul:Round>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupEQSubLimit250000FlatDeductibleFactor" Type="decimal" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="decimal">
			<rul:Round DecimalPlaces="4">
				<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="EQSubLimit250000FlatDeductibleFactorDef" MatrixFromConstant="EQSubLimit250000FlatDeductibleFactor" ResultMode="FirstResult">
					<rul:Keys>
						<rul:Value Type="string" FromDataDef="/State/@Code" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQDeductibleTier" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQSubLimitPercent" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="../../@EarthquakeTotalPropertyValue" Order="DataDefInputParamConstant" />
					</rul:Keys>
				</rul:Lookup>
			</rul:Round>
			<rul:Round DecimalPlaces="4">
				<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="EQSubLimit250000FlatDeductibleFactorDef" MatrixFromConstant="EQSubLimit250000FlatDeductibleFactor" ResultMode="SingleResult">
					<rul:Keys>
						<rul:Constant Type="string">CW</rul:Constant>
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQDeductibleTier" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQSubLimitPercent" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="../../@EarthquakeTotalPropertyValue" Order="DataDefInputParamConstant" />
					</rul:Keys>
				</rul:Lookup>
			</rul:Round>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupEQSubLimit500000FlatDeductibleFactor" Type="decimal" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="decimal">
			<rul:Round DecimalPlaces="4">
				<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="EQSubLimit500000FlatDeductibleFactorDef" MatrixFromConstant="EQSubLimit500000FlatDeductibleFactor" ResultMode="FirstResult">
					<rul:Keys>
						<rul:Value Type="string" FromDataDef="/State/@Code" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQDeductibleTier" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQSubLimitPercent" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="../../@EarthquakeTotalPropertyValue" Order="DataDefInputParamConstant" />
					</rul:Keys>
				</rul:Lookup>
			</rul:Round>
			<rul:Round DecimalPlaces="4">
				<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="EQSubLimit500000FlatDeductibleFactorDef" MatrixFromConstant="EQSubLimit500000FlatDeductibleFactor" ResultMode="SingleResult">
					<rul:Keys>
						<rul:Constant Type="string">CW</rul:Constant>
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQDeductibleTier" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQSubLimitPercent" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="../../@EarthquakeTotalPropertyValue" Order="DataDefInputParamConstant" />
					</rul:Keys>
				</rul:Lookup>
			</rul:Round>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupEQSubLimit750000FlatDeductibleFactor" Type="decimal" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="decimal">
			<rul:Round DecimalPlaces="4">
				<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="EQSubLimit750000FlatDeductibleFactorDef" MatrixFromConstant="EQSubLimit750000FlatDeductibleFactor" ResultMode="FirstResult">
					<rul:Keys>
						<rul:Value Type="string" FromDataDef="/State/@Code" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQDeductibleTier" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQSubLimitPercent" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="../../@EarthquakeTotalPropertyValue" Order="DataDefInputParamConstant" />
					</rul:Keys>
				</rul:Lookup>
			</rul:Round>
			<rul:Round DecimalPlaces="4">
				<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="EQSubLimit750000FlatDeductibleFactorDef" MatrixFromConstant="EQSubLimit750000FlatDeductibleFactor" ResultMode="SingleResult">
					<rul:Keys>
						<rul:Constant Type="string">CW</rul:Constant>
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQDeductibleTier" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQSubLimitPercent" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="../../@EarthquakeTotalPropertyValue" Order="DataDefInputParamConstant" />
					</rul:Keys>
				</rul:Lookup>
			</rul:Round>
		</rul:FirstNonNull>
	</rul:Rule>
	<rul:Rule Name="LookupEQSubLimit1000000FlatDeductibleFactor" Type="decimal" DataDefGroup="CommercialPropertySpecialClass">
		<rul:FirstNonNull Type="decimal">
			<rul:Round DecimalPlaces="4">
				<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="EQSubLimit1000000FlatDeductibleFactorDef" MatrixFromConstant="EQSubLimit1000000FlatDeductibleFactor" ResultMode="FirstResult">
					<rul:Keys>
						<rul:Value Type="string" FromDataDef="/State/@Code" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQDeductibleTier" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQSubLimitPercent" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="../../@EarthquakeTotalPropertyValue" Order="DataDefInputParamConstant" />
					</rul:Keys>
				</rul:Lookup>
			</rul:Round>
			<rul:Round DecimalPlaces="4">
				<rul:Lookup Type="decimal" MatrixCol="Factor" MatrixDef="EQSubLimit1000000FlatDeductibleFactorDef" MatrixFromConstant="EQSubLimit1000000FlatDeductibleFactor" ResultMode="SingleResult">
					<rul:Keys>
						<rul:Constant Type="string">CW</rul:Constant>
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQDeductibleTier" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQClass" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="string" FromConstant="" FromDataDef="@EQDeductible" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="@EQSubLimitPercent" Order="DataDefInputParamConstant" />
						<rul:FirstValue Type="integer" FromConstant="0" FromDataDef="../../@EarthquakeTotalPropertyValue" Order="DataDefInputParamConstant" />
					</rul:Keys>
				</rul:Lookup>
			</rul:Round>
		</rul:FirstNonNull>
	</rul:Rule>
</rul:Rules>